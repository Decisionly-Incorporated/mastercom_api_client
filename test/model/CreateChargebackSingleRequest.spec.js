/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MasterCom);
  }
}(this, function(expect, MasterCom) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MasterCom.CreateChargebackSingleRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateChargebackSingleRequest', function() {
    it('should create an instance of CreateChargebackSingleRequest', function() {
      // uncomment below and update the code to test CreateChargebackSingleRequest
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be.a(MasterCom.CreateChargebackSingleRequest);
    });

    it('should have the property brand (base name: "brand")', function() {
      // uncomment below and update the code to test the property brand
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property replacementAmount (base name: "replacementAmount")', function() {
      // uncomment below and update the code to test the property replacementAmount
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property reversalReasonCode (base name: "reversalReasonCode")', function() {
      // uncomment below and update the code to test the property reversalReasonCode
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property usageCode (base name: "usageCode")', function() {
      // uncomment below and update the code to test the property usageCode
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property chargebackType (base name: "chargebackType")', function() {
      // uncomment below and update the code to test the property chargebackType
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property acquirerFirstReferenceNumber (base name: "acquirerFirstReferenceNumber")', function() {
      // uncomment below and update the code to test the property acquirerFirstReferenceNumber
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property additionalInformation (base name: "additionalInformation")', function() {
      // uncomment below and update the code to test the property additionalInformation
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property adjustmentContactFax (base name: "adjustmentContactFax")', function() {
      // uncomment below and update the code to test the property adjustmentContactFax
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property adjustmentContactName (base name: "adjustmentContactName")', function() {
      // uncomment below and update the code to test the property adjustmentContactName
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property adjustmentContactPhone (base name: "adjustmentContactPhone")', function() {
      // uncomment below and update the code to test the property adjustmentContactPhone
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property controlNumber (base name: "controlNumber")', function() {
      // uncomment below and update the code to test the property controlNumber
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property dataRecordText (base name: "dataRecordText")', function() {
      // uncomment below and update the code to test the property dataRecordText
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property documentIndicator (base name: "documentIndicator")', function() {
      // uncomment below and update the code to test the property documentIndicator
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property documentType (base name: "documentType")', function() {
      // uncomment below and update the code to test the property documentType
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property illegibleItemCd (base name: "illegibleItemCd")', function() {
      // uncomment below and update the code to test the property illegibleItemCd
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property program (base name: "program")', function() {
      // uncomment below and update the code to test the property program
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property retrievalRequestDate (base name: "retrievalRequestDate")', function() {
      // uncomment below and update the code to test the property retrievalRequestDate
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property securityBulletinNumber (base name: "securityBulletinNumber")', function() {
      // uncomment below and update the code to test the property securityBulletinNumber
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property fileAttachment (base name: "fileAttachment")', function() {
      // uncomment below and update the code to test the property fileAttachment
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

    it('should have the property refundNotReceivedIndicator (base name: "refundNotReceivedIndicator")', function() {
      // uncomment below and update the code to test the property refundNotReceivedIndicator
      //var instance = new MasterCom.CreateChargebackSingleRequest();
      //expect(instance).to.be();
    });

  });

}));
