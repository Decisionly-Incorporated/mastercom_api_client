/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MasterCom);
  }
}(this, function(expect, MasterCom) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MasterCom.ClaimSummary();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ClaimSummary', function() {
    it('should create an instance of ClaimSummary', function() {
      // uncomment below and update the code to test ClaimSummary
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be.a(MasterCom.ClaimSummary);
    });

    it('should have the property acquirerId (base name: "acquirerId")', function() {
      // uncomment below and update the code to test the property acquirerId
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property acquirerRefNum (base name: "acquirerRefNum")', function() {
      // uncomment below and update the code to test the property acquirerRefNum
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property primaryAccountNum (base name: "primaryAccountNum")', function() {
      // uncomment below and update the code to test the property primaryAccountNum
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property claimId (base name: "claimId")', function() {
      // uncomment below and update the code to test the property claimId
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property claimType (base name: "claimType")', function() {
      // uncomment below and update the code to test the property claimType
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property claimValue (base name: "claimValue")', function() {
      // uncomment below and update the code to test the property claimValue
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property clearingDueDate (base name: "clearingDueDate")', function() {
      // uncomment below and update the code to test the property clearingDueDate
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property clearingNetwork (base name: "clearingNetwork")', function() {
      // uncomment below and update the code to test the property clearingNetwork
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property createDate (base name: "createDate")', function() {
      // uncomment below and update the code to test the property createDate
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property dueDate (base name: "dueDate")', function() {
      // uncomment below and update the code to test the property dueDate
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property transactionId (base name: "transactionId")', function() {
      // uncomment below and update the code to test the property transactionId
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property isAccurate (base name: "isAccurate")', function() {
      // uncomment below and update the code to test the property isAccurate
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property isAcquirer (base name: "isAcquirer")', function() {
      // uncomment below and update the code to test the property isAcquirer
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property isIssuer (base name: "isIssuer")', function() {
      // uncomment below and update the code to test the property isIssuer
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property isOpen (base name: "isOpen")', function() {
      // uncomment below and update the code to test the property isOpen
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property issuerId (base name: "issuerId")', function() {
      // uncomment below and update the code to test the property issuerId
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedBy (base name: "lastModifiedBy")', function() {
      // uncomment below and update the code to test the property lastModifiedBy
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedDate (base name: "lastModifiedDate")', function() {
      // uncomment below and update the code to test the property lastModifiedDate
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property merchantId (base name: "merchantId")', function() {
      // uncomment below and update the code to test the property merchantId
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property progressState (base name: "progressState")', function() {
      // uncomment below and update the code to test the property progressState
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property queueName (base name: "queueName")', function() {
      // uncomment below and update the code to test the property queueName
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property creditVoucherStatus (base name: "creditVoucherStatus")', function() {
      // uncomment below and update the code to test the property creditVoucherStatus
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

    it('should have the property collaborationExpirationDateTime (base name: "collaborationExpirationDateTime")', function() {
      // uncomment below and update the code to test the property collaborationExpirationDateTime
      //var instance = new MasterCom.ClaimSummary();
      //expect(instance).to.be();
    });

  });

}));
