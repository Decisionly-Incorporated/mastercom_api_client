/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MasterCom);
  }
}(this, function(expect, MasterCom) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MasterCom.SingleMessageDetail();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SingleMessageDetail', function() {
    it('should create an instance of SingleMessageDetail', function() {
      // uncomment below and update the code to test SingleMessageDetail
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be.a(MasterCom.SingleMessageDetail);
    });

    it('should have the property acqLocCntry (base name: "acqLocCntry")', function() {
      // uncomment below and update the code to test the property acqLocCntry
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerAddress (base name: "acquirerAddress")', function() {
      // uncomment below and update the code to test the property acquirerAddress
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerAdjustmentSettlementAmount (base name: "acquirerAdjustmentSettlementAmount")', function() {
      // uncomment below and update the code to test the property acquirerAdjustmentSettlementAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerAdjustmentSettlementAmountIndicator (base name: "acquirerAdjustmentSettlementAmountIndicator")', function() {
      // uncomment below and update the code to test the property acquirerAdjustmentSettlementAmountIndicator
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerAdjustmentSettlementCompletionAmount (base name: "acquirerAdjustmentSettlementCompletionAmount")', function() {
      // uncomment below and update the code to test the property acquirerAdjustmentSettlementCompletionAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerAdjustmentSettlementCurrency (base name: "acquirerAdjustmentSettlementCurrency")', function() {
      // uncomment below and update the code to test the property acquirerAdjustmentSettlementCurrency
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerAdviceReason (base name: "acquirerAdviceReason")', function() {
      // uncomment below and update the code to test the property acquirerAdviceReason
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerBridgedICA (base name: "acquirerBridgedICA")', function() {
      // uncomment below and update the code to test the property acquirerBridgedICA
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerCity (base name: "acquirerCity")', function() {
      // uncomment below and update the code to test the property acquirerCity
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerCurrencyConversionRate (base name: "acquirerCurrencyConversionRate")', function() {
      // uncomment below and update the code to test the property acquirerCurrencyConversionRate
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerInstitutionNumber (base name: "acquirerInstitutionNumber")', function() {
      // uncomment below and update the code to test the property acquirerInstitutionNumber
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerInterchangeAmount (base name: "acquirerInterchangeAmount")', function() {
      // uncomment below and update the code to test the property acquirerInterchangeAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerInterchangeCurrency (base name: "acquirerInterchangeCurrency")', function() {
      // uncomment below and update the code to test the property acquirerInterchangeCurrency
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerName (base name: "acquirerName")', function() {
      // uncomment below and update the code to test the property acquirerName
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerProcessorID (base name: "acquirerProcessorID")', function() {
      // uncomment below and update the code to test the property acquirerProcessorID
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerReferenceNumber (base name: "acquirerReferenceNumber")', function() {
      // uncomment below and update the code to test the property acquirerReferenceNumber
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerSettlementCompletionAmount (base name: "acquirerSettlementCompletionAmount")', function() {
      // uncomment below and update the code to test the property acquirerSettlementCompletionAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerSettlementCompletionCurrency (base name: "acquirerSettlementCompletionCurrency")', function() {
      // uncomment below and update the code to test the property acquirerSettlementCompletionCurrency
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property acquirerSettlementConversionRate (base name: "acquirerSettlementConversionRate")', function() {
      // uncomment below and update the code to test the property acquirerSettlementConversionRate
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property additionalAdvice (base name: "additionalAdvice")', function() {
      // uncomment below and update the code to test the property additionalAdvice
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property additionalPOSData (base name: "additionalPOSData")', function() {
      // uncomment below and update the code to test the property additionalPOSData
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property additionalResponse (base name: "additionalResponse")', function() {
      // uncomment below and update the code to test the property additionalResponse
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property adjustmentAdviceReason (base name: "adjustmentAdviceReason")', function() {
      // uncomment below and update the code to test the property adjustmentAdviceReason
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property adjustmentCashbackAmount (base name: "adjustmentCashbackAmount")', function() {
      // uncomment below and update the code to test the property adjustmentCashbackAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property adjustmentDate (base name: "adjustmentDate")', function() {
      // uncomment below and update the code to test the property adjustmentDate
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property adjustmentPurchaseAmount (base name: "adjustmentPurchaseAmount")', function() {
      // uncomment below and update the code to test the property adjustmentPurchaseAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property afaMember (base name: "afaMember")', function() {
      // uncomment below and update the code to test the property afaMember
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property alternatePrimaryAccountNumber (base name: "alternatePrimaryAccountNumber")', function() {
      // uncomment below and update the code to test the property alternatePrimaryAccountNumber
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property amountICCR (base name: "amountICCR")', function() {
      // uncomment below and update the code to test the property amountICCR
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property atmPosFlag (base name: "atmPosFlag")', function() {
      // uncomment below and update the code to test the property atmPosFlag
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property banknetReferenceNumber (base name: "banknetReferenceNumber")', function() {
      // uncomment below and update the code to test the property banknetReferenceNumber
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property bridgingICA (base name: "bridgingICA")', function() {
      // uncomment below and update the code to test the property bridgingICA
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property businessActivity (base name: "businessActivity")', function() {
      // uncomment below and update the code to test the property businessActivity
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property cashBackAmount (base name: "cashBackAmount")', function() {
      // uncomment below and update the code to test the property cashBackAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property cashBackCurrency (base name: "cashBackCurrency")', function() {
      // uncomment below and update the code to test the property cashBackCurrency
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property catLevel (base name: "catLevel")', function() {
      // uncomment below and update the code to test the property catLevel
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property cccaIssuerBankName (base name: "cccaIssuerBankName")', function() {
      // uncomment below and update the code to test the property cccaIssuerBankName
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property chipFlag (base name: "chipFlag")', function() {
      // uncomment below and update the code to test the property chipFlag
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property conditionCode (base name: "conditionCode")', function() {
      // uncomment below and update the code to test the property conditionCode
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property corporateCardIndicator (base name: "corporateCardIndicator")', function() {
      // uncomment below and update the code to test the property corporateCardIndicator
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property creditLineUsageFee (base name: "creditLineUsageFee")', function() {
      // uncomment below and update the code to test the property creditLineUsageFee
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property crossBorderIndicator (base name: "crossBorderIndicator")', function() {
      // uncomment below and update the code to test the property crossBorderIndicator
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property currencyConversionAssesementAmount (base name: "currencyConversionAssesementAmount")', function() {
      // uncomment below and update the code to test the property currencyConversionAssesementAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property currencyConversionAssesementCurrency (base name: "currencyConversionAssesementCurrency")', function() {
      // uncomment below and update the code to test the property currencyConversionAssesementCurrency
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property currencyConversionIndicator (base name: "currencyConversionIndicator")', function() {
      // uncomment below and update the code to test the property currencyConversionIndicator
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property cvc2ProgramValidationCode (base name: "cvc2ProgramValidationCode")', function() {
      // uncomment below and update the code to test the property cvc2ProgramValidationCode
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property documentIndicator (base name: "documentIndicator")', function() {
      // uncomment below and update the code to test the property documentIndicator
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property feesInterChgAcqLoc (base name: "feesInterChgAcqLoc")', function() {
      // uncomment below and update the code to test the property feesInterChgAcqLoc
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property financialInstitutionID (base name: "financialInstitutionID")', function() {
      // uncomment below and update the code to test the property financialInstitutionID
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property fraudDate (base name: "fraudDate")', function() {
      // uncomment below and update the code to test the property fraudDate
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property fraudDeviceType (base name: "fraudDeviceType")', function() {
      // uncomment below and update the code to test the property fraudDeviceType
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property fraudType (base name: "fraudType")', function() {
      // uncomment below and update the code to test the property fraudType
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property gcmsAdviceCode (base name: "gcmsAdviceCode")', function() {
      // uncomment below and update the code to test the property gcmsAdviceCode
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property gcmsSettlementDate (base name: "gcmsSettlementDate")', function() {
      // uncomment below and update the code to test the property gcmsSettlementDate
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property issuerAdjustmentSettlementAmount (base name: "issuerAdjustmentSettlementAmount")', function() {
      // uncomment below and update the code to test the property issuerAdjustmentSettlementAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property issuerAdjustmentSettlementAmountIndicator (base name: "issuerAdjustmentSettlementAmountIndicator")', function() {
      // uncomment below and update the code to test the property issuerAdjustmentSettlementAmountIndicator
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property issuerAdjustmentSettlementCompletionAmount (base name: "issuerAdjustmentSettlementCompletionAmount")', function() {
      // uncomment below and update the code to test the property issuerAdjustmentSettlementCompletionAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property issuerAdjustmentSettlementCurrency (base name: "issuerAdjustmentSettlementCurrency")', function() {
      // uncomment below and update the code to test the property issuerAdjustmentSettlementCurrency
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property issuerAdviceReason (base name: "issuerAdviceReason")', function() {
      // uncomment below and update the code to test the property issuerAdviceReason
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property issuerCurrencyConversionRate (base name: "issuerCurrencyConversionRate")', function() {
      // uncomment below and update the code to test the property issuerCurrencyConversionRate
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property issuerICA (base name: "issuerICA")', function() {
      // uncomment below and update the code to test the property issuerICA
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property issuerInstitutionNumber (base name: "issuerInstitutionNumber")', function() {
      // uncomment below and update the code to test the property issuerInstitutionNumber
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property issuerInterchangeAmount (base name: "issuerInterchangeAmount")', function() {
      // uncomment below and update the code to test the property issuerInterchangeAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property issuerInterchangeCurrency (base name: "issuerInterchangeCurrency")', function() {
      // uncomment below and update the code to test the property issuerInterchangeCurrency
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property issuerProcessorID (base name: "issuerProcessorID")', function() {
      // uncomment below and update the code to test the property issuerProcessorID
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property issuerSettlementCompletionAmount (base name: "issuerSettlementCompletionAmount")', function() {
      // uncomment below and update the code to test the property issuerSettlementCompletionAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property issuerSettlementCompletionCurrency (base name: "issuerSettlementCompletionCurrency")', function() {
      // uncomment below and update the code to test the property issuerSettlementCompletionCurrency
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property issuerSettlementConversionRate (base name: "issuerSettlementConversionRate")', function() {
      // uncomment below and update the code to test the property issuerSettlementConversionRate
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property localCompletionAmount (base name: "localCompletionAmount")', function() {
      // uncomment below and update the code to test the property localCompletionAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property localCurrencyCode (base name: "localCurrencyCode")', function() {
      // uncomment below and update the code to test the property localCurrencyCode
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property localRequestedAmount (base name: "localRequestedAmount")', function() {
      // uncomment below and update the code to test the property localRequestedAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property mcElectronicIndicator (base name: "mcElectronicIndicator")', function() {
      // uncomment below and update the code to test the property mcElectronicIndicator
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property mcResponseValue (base name: "mcResponseValue")', function() {
      // uncomment below and update the code to test the property mcResponseValue
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property merchantCategoryCodeInfo (base name: "merchantCategoryCodeInfo")', function() {
      // uncomment below and update the code to test the property merchantCategoryCodeInfo
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property merchantType (base name: "merchantType")', function() {
      // uncomment below and update the code to test the property merchantType
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property originalCardHolderBillingAmount (base name: "originalCardHolderBillingAmount")', function() {
      // uncomment below and update the code to test the property originalCardHolderBillingAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property originalCardHolderBillingCurrency (base name: "originalCardHolderBillingCurrency")', function() {
      // uncomment below and update the code to test the property originalCardHolderBillingCurrency
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property originalCashbackAmount (base name: "originalCashbackAmount")', function() {
      // uncomment below and update the code to test the property originalCashbackAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property originalCashbackCurrency (base name: "originalCashbackCurrency")', function() {
      // uncomment below and update the code to test the property originalCashbackCurrency
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property originalPurchaseAmount (base name: "originalPurchaseAmount")', function() {
      // uncomment below and update the code to test the property originalPurchaseAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property ownerID (base name: "ownerID")', function() {
      // uncomment below and update the code to test the property ownerID
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property pointOfServiceAmount (base name: "pointOfServiceAmount")', function() {
      // uncomment below and update the code to test the property pointOfServiceAmount
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property pointOfServiceCurrency (base name: "pointOfServiceCurrency")', function() {
      // uncomment below and update the code to test the property pointOfServiceCurrency
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property posData (base name: "posData")', function() {
      // uncomment below and update the code to test the property posData
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property posEntry (base name: "posEntry")', function() {
      // uncomment below and update the code to test the property posEntry
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property primaryAccountNumber (base name: "primaryAccountNumber")', function() {
      // uncomment below and update the code to test the property primaryAccountNumber
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property primaryAccountNumberSequenceNumber (base name: "primaryAccountNumberSequenceNumber")', function() {
      // uncomment below and update the code to test the property primaryAccountNumberSequenceNumber
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property processingCode (base name: "processingCode")', function() {
      // uncomment below and update the code to test the property processingCode
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property productIdentifierCode (base name: "productIdentifierCode")', function() {
      // uncomment below and update the code to test the property productIdentifierCode
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property programIndicator (base name: "programIndicator")', function() {
      // uncomment below and update the code to test the property programIndicator
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property qpsPayPassChargebackElgibility (base name: "qpsPayPassChargebackElgibility")', function() {
      // uncomment below and update the code to test the property qpsPayPassChargebackElgibility
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property referenceNumber (base name: "referenceNumber")', function() {
      // uncomment below and update the code to test the property referenceNumber
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property responseCode (base name: "responseCode")', function() {
      // uncomment below and update the code to test the property responseCode
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property responseSource (base name: "responseSource")', function() {
      // uncomment below and update the code to test the property responseSource
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property serviceCode (base name: "serviceCode")', function() {
      // uncomment below and update the code to test the property serviceCode
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property serviceLevelIndicator (base name: "serviceLevelIndicator")', function() {
      // uncomment below and update the code to test the property serviceLevelIndicator
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property settlementDate (base name: "settlementDate")', function() {
      // uncomment below and update the code to test the property settlementDate
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property settlementDatePosition (base name: "settlementDatePosition")', function() {
      // uncomment below and update the code to test the property settlementDatePosition
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property settlementServiceConfiguration (base name: "settlementServiceConfiguration")', function() {
      // uncomment below and update the code to test the property settlementServiceConfiguration
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property surchargeFreeIndicator (base name: "surchargeFreeIndicator")', function() {
      // uncomment below and update the code to test the property surchargeFreeIndicator
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property switchDateTime (base name: "switchDateTime")', function() {
      // uncomment below and update the code to test the property switchDateTime
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property switchSerialNumber (base name: "switchSerialNumber")', function() {
      // uncomment below and update the code to test the property switchSerialNumber
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property switchSerialNumberPosition (base name: "switchSerialNumberPosition")', function() {
      // uncomment below and update the code to test the property switchSerialNumberPosition
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property switchTime (base name: "switchTime")', function() {
      // uncomment below and update the code to test the property switchTime
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property terminalID (base name: "terminalID")', function() {
      // uncomment below and update the code to test the property terminalID
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property trace (base name: "trace")', function() {
      // uncomment below and update the code to test the property trace
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property transactionCategoryCode (base name: "transactionCategoryCode")', function() {
      // uncomment below and update the code to test the property transactionCategoryCode
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property transactionClass (base name: "transactionClass")', function() {
      // uncomment below and update the code to test the property transactionClass
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property transactionDateTime (base name: "transactionDateTime")', function() {
      // uncomment below and update the code to test the property transactionDateTime
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property transitData (base name: "transitData")', function() {
      // uncomment below and update the code to test the property transitData
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property tranType (base name: "tranType")', function() {
      // uncomment below and update the code to test the property tranType
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property universalCardAuthenticationFee (base name: "universalCardAuthenticationFee")', function() {
      // uncomment below and update the code to test the property universalCardAuthenticationFee
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

    it('should have the property usageCode (base name: "usageCode")', function() {
      // uncomment below and update the code to test the property usageCode
      //var instance = new MasterCom.SingleMessageDetail();
      //expect(instance).to.be();
    });

  });

}));
