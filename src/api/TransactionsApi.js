/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AuthorizationDetail from '../model/AuthorizationDetail';
import ClearingDetail from '../model/ClearingDetail';
import Errors from '../model/Errors';
import TransactionSearchRequest from '../model/TransactionSearchRequest';
import TransactionSummary from '../model/TransactionSummary';

/**
* Transactions service.
* @module api/TransactionsApi
* @version v6
*/
export default class TransactionsApi {

    /**
    * Constructs a new TransactionsApi. 
    * @alias module:api/TransactionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getTransactionClearingDetail operation.
     * @callback module:api/TransactionsApi~getTransactionClearingDetailCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ClearingDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * After an issuer creates a claim, the issuer uses this endpoint to retrieve clearing details for the original transaction involved in the claim. Acquirers may also use this endpoint to retrieve clearing details associated with an original transaction.
     * @param {String} claimId Claim Id.   Length: 1-19   Valid Values/Format: Numeric
     * @param {String} transactionId Clearing transaction id.   Length: N/A   Valid Values/Format: Alphanumeric, Special Char (~!@#$%^&*()_+{}|:\"<>?,./;'[]-=)
     * @param {module:api/TransactionsApi~getTransactionClearingDetailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ClearingDetail}
     */
    getTransactionClearingDetail(claimId, transactionId, callback) {
      let postBody = null;
      // verify the required parameter 'claimId' is set
      if (claimId === undefined || claimId === null) {
        throw new Error("Missing the required parameter 'claimId' when calling getTransactionClearingDetail");
      }
      // verify the required parameter 'transactionId' is set
      if (transactionId === undefined || transactionId === null) {
        throw new Error("Missing the required parameter 'transactionId' when calling getTransactionClearingDetail");
      }

      let pathParams = {
        'claim-id': claimId,
        'transaction-id': transactionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ClearingDetail;
      return this.apiClient.callApi(
        '/v6/claims/{claim-id}/transactions/clearing/{transaction-id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the retrieveAuthorizationDetail operation.
     * @callback module:api/TransactionsApi~retrieveAuthorizationDetailCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AuthorizationDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * After an issuer creates a claim, the issuer uses this endpoint to retrieve authorization details for the original transaction involved in the claim.
     * @param {String} claimId Claim Id.   Length: 1-19   Valid Values/Format: Numeric
     * @param {String} transactionId The Authorization Transaction Identifier from Authorization Summary Results.   Length: N/A   Valid Values/Format: Alphanumeric, Special Char (~!@#$%^&*()_+{}|:\"<>?,./;'[]-=)
     * @param {module:api/TransactionsApi~retrieveAuthorizationDetailCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AuthorizationDetail}
     */
    retrieveAuthorizationDetail(claimId, transactionId, callback) {
      let postBody = null;
      // verify the required parameter 'claimId' is set
      if (claimId === undefined || claimId === null) {
        throw new Error("Missing the required parameter 'claimId' when calling retrieveAuthorizationDetail");
      }
      // verify the required parameter 'transactionId' is set
      if (transactionId === undefined || transactionId === null) {
        throw new Error("Missing the required parameter 'transactionId' when calling retrieveAuthorizationDetail");
      }

      let pathParams = {
        'claim-id': claimId,
        'transaction-id': transactionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AuthorizationDetail;
      return this.apiClient.callApi(
        '/v6/claims/{claim-id}/transactions/authorization/{transaction-id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the transactionSearch operation.
     * @callback module:api/TransactionsApi~transactionSearchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransactionSummary} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * An issuer uses this endpoint to search for information about an original transaction. An issuer may use this information to take an action on the original transaction, such as creating a claim.   Note: Mastercom retrieves transactions normally when the clearing occurs within 150 days of authorization. To find late presentments and Brazilian installment transactions, provide the acquirer reference number (ARN) and the clearing date associated with the ARN of the first presentment in the request.
     * @param {module:model/TransactionSearchRequest} body Transaction Search Request
     * @param {module:api/TransactionsApi~transactionSearchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TransactionSummary}
     */
    transactionSearch(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling transactionSearch");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TransactionSummary;
      return this.apiClient.callApi(
        '/v6/transactions/search', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
