/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ChargebackImageStatusRequest from '../model/ChargebackImageStatusRequest';
import ChargebackImageStatusResponse from '../model/ChargebackImageStatusResponse';
import ChargebackMarkProcessedRequest from '../model/ChargebackMarkProcessedRequest';
import ChargebackMarkProcessedResponse from '../model/ChargebackMarkProcessedResponse';
import ChargebackResponse from '../model/ChargebackResponse';
import ChargebackStatusRequest from '../model/ChargebackStatusRequest';
import ChargebackStatusResponse from '../model/ChargebackStatusResponse';
import CreateChargebackSingleRequest from '../model/CreateChargebackSingleRequest';
import CreateChargebackSingleReversalRequest from '../model/CreateChargebackSingleReversalRequest';
import DocumentResponseStructure from '../model/DocumentResponseStructure';
import Errors from '../model/Errors';
import UpdateChargebackRequest from '../model/UpdateChargebackRequest';

/**
* ChargebacksDebitMasterCardAndEuropeDualAcquirer service.
* @module api/ChargebacksDebitMasterCardAndEuropeDualAcquirerApi
* @version v6
*/
export default class ChargebacksDebitMasterCardAndEuropeDualAcquirerApi {

    /**
    * Constructs a new ChargebacksDebitMasterCardAndEuropeDualAcquirerApi. 
    * @alias module:api/ChargebacksDebitMasterCardAndEuropeDualAcquirerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the acknowledgeChargebacksDebitMC operation.
     * @callback module:api/ChargebacksDebitMasterCardAndEuropeDualAcquirerApi~acknowledgeChargebacksDebitMCCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChargebackMarkProcessedResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Issuers and acquirers use this endpoint to acknowledge a chargeback or second presentment. Acknowledging a chargeback or second presentment moves the claim from the Unworked queue to the Worked queue. Acknowledging the chargeback or second presentment does not close the claim. Issuers and acquirers may take further actions on acknowledged claims.   Note: for efficient processing, issuers and acquirers should send 100 acknowledgments or fewer in a single request.
     * @param {module:model/ChargebackMarkProcessedRequest} body Chargeback Receiver information
     * @param {module:api/ChargebacksDebitMasterCardAndEuropeDualAcquirerApi~acknowledgeChargebacksDebitMCCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChargebackMarkProcessedResponse}
     */
    acknowledgeChargebacksDebitMC(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling acknowledgeChargebacksDebitMC");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ChargebackMarkProcessedResponse;
      return this.apiClient.callApi(
        '/v6/chargebacks/debitmc/acknowledge', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createChargebackDebitMC operation.
     * @callback module:api/ChargebacksDebitMasterCardAndEuropeDualAcquirerApi~createChargebackDebitMCCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChargebackResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Issuers use this endpoint to create chargebacks for Debit Mastercard or Europe Dual Acquirer transactions and optionally to upload supporting documents. Issuers should only use this endpoint when the transaction has a single-message issuer, dual-message acquirer, and a transaction without a PIN.   Note: If the API call to this endpoint times out, customers should use the Chargeback Status or Retrieve Claim endpoint to determine the success or failure of document processing.
     * @param {String} claimId Claim Id where the chargeback will be added.   Length: 1-19   Valid Values/Format: Numeric
     * @param {module:model/CreateChargebackSingleRequest} body Create Chargeback information
     * @param {module:api/ChargebacksDebitMasterCardAndEuropeDualAcquirerApi~createChargebackDebitMCCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChargebackResponse}
     */
    createChargebackDebitMC(claimId, body, callback) {
      let postBody = body;
      // verify the required parameter 'claimId' is set
      if (claimId === undefined || claimId === null) {
        throw new Error("Missing the required parameter 'claimId' when calling createChargebackDebitMC");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createChargebackDebitMC");
      }

      let pathParams = {
        'claim-id': claimId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ChargebackResponse;
      return this.apiClient.callApi(
        '/v6/claims/{claim-id}/chargebacks/debitmc', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createChargebackReversalDebitMC operation.
     * @callback module:api/ChargebacksDebitMasterCardAndEuropeDualAcquirerApi~createChargebackReversalDebitMCCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChargebackResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Issuers use this endpoint to reverse an existing Debit Mastercard or Europe Dual Acquirer chargeback when they create a chargeback in error.   Note: issuers may only create reversals on chargebacks after the chargebacks are processed by Mastercard Debit Switch (MDS).
     * @param {String} claimId Claim Id for the chargeback.   Length: 1-19   Valid Values/Format: Numeric
     * @param {String} chargebackId Chargeback Id.   Length: 1-19   Valid Values/Format: Numeric
     * @param {module:model/CreateChargebackSingleReversalRequest} body Create Chargeback Reversal information
     * @param {module:api/ChargebacksDebitMasterCardAndEuropeDualAcquirerApi~createChargebackReversalDebitMCCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChargebackResponse}
     */
    createChargebackReversalDebitMC(claimId, chargebackId, body, callback) {
      let postBody = body;
      // verify the required parameter 'claimId' is set
      if (claimId === undefined || claimId === null) {
        throw new Error("Missing the required parameter 'claimId' when calling createChargebackReversalDebitMC");
      }
      // verify the required parameter 'chargebackId' is set
      if (chargebackId === undefined || chargebackId === null) {
        throw new Error("Missing the required parameter 'chargebackId' when calling createChargebackReversalDebitMC");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createChargebackReversalDebitMC");
      }

      let pathParams = {
        'claim-id': claimId,
        'chargeback-id': chargebackId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ChargebackResponse;
      return this.apiClient.callApi(
        '/v6/claims/{claim-id}/chargebacks/debitmc/{chargeback-id}/reversal', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getChargebackDocDebitMC operation.
     * @callback module:api/ChargebacksDebitMasterCardAndEuropeDualAcquirerApi~getChargebackDocDebitMCCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DocumentResponseStructure} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Issuers and acquirers use this endpoint to retrieve documents in a desired format associated with any type of chargeback.
     * @param {String} claimId The Claim Id.   Length: 1-19   Valid Values/Format: Numeric
     * @param {String} chargebackId Chargeback Id.   Length: 1-19   Valid Values/Format: Numeric
     * @param {module:model/String} format File format.   Length: 8-11   Valid Values/Format: ORIGINAL, MERGED_TIFF, MERGED_PDF
     * @param {module:api/ChargebacksDebitMasterCardAndEuropeDualAcquirerApi~getChargebackDocDebitMCCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DocumentResponseStructure}
     */
    getChargebackDocDebitMC(claimId, chargebackId, format, callback) {
      let postBody = null;
      // verify the required parameter 'claimId' is set
      if (claimId === undefined || claimId === null) {
        throw new Error("Missing the required parameter 'claimId' when calling getChargebackDocDebitMC");
      }
      // verify the required parameter 'chargebackId' is set
      if (chargebackId === undefined || chargebackId === null) {
        throw new Error("Missing the required parameter 'chargebackId' when calling getChargebackDocDebitMC");
      }
      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling getChargebackDocDebitMC");
      }

      let pathParams = {
        'claim-id': claimId,
        'chargeback-id': chargebackId
      };
      let queryParams = {
        'format': format
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DocumentResponseStructure;
      return this.apiClient.callApi(
        '/v6/claims/{claim-id}/chargebacks/debitmc/{chargeback-id}/documents', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the retrieveChargebackImageStatusDebitMC operation.
     * @callback module:api/ChargebacksDebitMasterCardAndEuropeDualAcquirerApi~retrieveChargebackImageStatusDebitMCCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChargebackImageStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Issuers and acquirers use this endpoint to search for documents that have a specific status (completed, pending, failed, unavailable, and document not applicable) for chargebacks.   Note: For customers with high volumes of chargebacks or large numbers of BINs, Mastercom recommends using the Chargebacks Status endpoint rather than the Chargebacks Image Status endpoint.
     * @param {module:model/ChargebackImageStatusRequest} body Chargeback information
     * @param {module:api/ChargebacksDebitMasterCardAndEuropeDualAcquirerApi~retrieveChargebackImageStatusDebitMCCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChargebackImageStatusResponse}
     */
    retrieveChargebackImageStatusDebitMC(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling retrieveChargebackImageStatusDebitMC");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ChargebackImageStatusResponse;
      return this.apiClient.callApi(
        '/v6/chargebacks/debitmc/imagestatus', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the retrieveChargebackStatusDebitMC operation.
     * @callback module:api/ChargebacksDebitMasterCardAndEuropeDualAcquirerApi~retrieveChargebackStatusDebitMCCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChargebackStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Issuers and acquirers use this endpoint to search for the status of documents of a specific list of claim IDs and chargeback IDs.   Note: issuers and acquirers may send a maximum of 2,000 chargeback IDs within a single request.
     * @param {module:model/ChargebackStatusRequest} body Chargeback information
     * @param {module:api/ChargebacksDebitMasterCardAndEuropeDualAcquirerApi~retrieveChargebackStatusDebitMCCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChargebackStatusResponse}
     */
    retrieveChargebackStatusDebitMC(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling retrieveChargebackStatusDebitMC");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ChargebackStatusResponse;
      return this.apiClient.callApi(
        '/v6/chargebacks/debitmc/status', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateChargebackDebitMC operation.
     * @callback module:api/ChargebacksDebitMasterCardAndEuropeDualAcquirerApi~updateChargebackDebitMCCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChargebackResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Issuers use this endpoint to update an existing Debit Mastercard or Europe Dual Acquirer chargeback with memos or documents if they did not attach memos or documents when creating the chargeback.   Note: If the API call to this endpoint times out, customers should use the Chargeback Status or Retrieve Claim endpoint to determine the success or failure of document processing.
     * @param {String} claimId Claim Id for the chargeback.   Length: 1-19   Valid Values/Format: Numeric
     * @param {String} chargebackId Chargeback Id.   Length: 1-19   Valid Values/Format: Numeric
     * @param {module:model/UpdateChargebackRequest} body Update Chargeback information
     * @param {module:api/ChargebacksDebitMasterCardAndEuropeDualAcquirerApi~updateChargebackDebitMCCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChargebackResponse}
     */
    updateChargebackDebitMC(claimId, chargebackId, body, callback) {
      let postBody = body;
      // verify the required parameter 'claimId' is set
      if (claimId === undefined || claimId === null) {
        throw new Error("Missing the required parameter 'claimId' when calling updateChargebackDebitMC");
      }
      // verify the required parameter 'chargebackId' is set
      if (chargebackId === undefined || chargebackId === null) {
        throw new Error("Missing the required parameter 'chargebackId' when calling updateChargebackDebitMC");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updateChargebackDebitMC");
      }

      let pathParams = {
        'claim-id': claimId,
        'chargeback-id': chargebackId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ChargebackResponse;
      return this.apiClient.callApi(
        '/v6/claims/{claim-id}/chargebacks/debitmc/{chargeback-id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
