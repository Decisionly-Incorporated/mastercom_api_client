/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Errors from '../model/Errors';
import ReconReportDataAcknowledgeRequest from '../model/ReconReportDataAcknowledgeRequest';
import ReconReportDataAcknowledgeResponse from '../model/ReconReportDataAcknowledgeResponse';
import ReconReportDataRetrivalResponse from '../model/ReconReportDataRetrivalResponse';

/**
* Reconciliation service.
* @module api/ReconciliationApi
* @version v6
*/
export default class ReconciliationApi {

    /**
    * Constructs a new ReconciliationApi. 
    * @alias module:api/ReconciliationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the reconReportDataAcknowledge operation.
     * @callback module:api/ReconciliationApi~reconReportDataAcknowledgeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReconReportDataAcknowledgeResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * An issuer or acquirer uses this endpoint to request that Mastercom generate a reconciliation report or enhanced reconciliation report for a specified date range.   Note: The issuer or acquirer receives a unique report identifier in the response. Using the unique report identifier from this endpoint, the issuer or acquirer then retrieves the report from the Retrieve Reconciliation Report endpoint.
     * @param {module:model/ReconReportDataAcknowledgeRequest} reconDataRequest Reconciliation data request
     * @param {module:api/ReconciliationApi~reconReportDataAcknowledgeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReconReportDataAcknowledgeResponse}
     */
    reconReportDataAcknowledge(reconDataRequest, callback) {
      let postBody = reconDataRequest;
      // verify the required parameter 'reconDataRequest' is set
      if (reconDataRequest === undefined || reconDataRequest === null) {
        throw new Error("Missing the required parameter 'reconDataRequest' when calling reconReportDataAcknowledge");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ReconReportDataAcknowledgeResponse;
      return this.apiClient.callApi(
        '/v6/reconreport/data/request', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the reconReportDataRetrieval operation.
     * @callback module:api/ReconciliationApi~reconReportDataRetrievalCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReconReportDataRetrivalResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * An issuer or acquirer uses this endpoint to retrieve a reconciliation report or enhanced reconciliation report.
     * @param {String} reportIdentifier A reconciliation id that identifies the report to be retrieved.   Length: 36   Valid Values/Format: Alphanumeric
     * @param {module:api/ReconciliationApi~reconReportDataRetrievalCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReconReportDataRetrivalResponse}
     */
    reconReportDataRetrieval(reportIdentifier, callback) {
      let postBody = null;
      // verify the required parameter 'reportIdentifier' is set
      if (reportIdentifier === undefined || reportIdentifier === null) {
        throw new Error("Missing the required parameter 'reportIdentifier' when calling reconReportDataRetrieval");
      }

      let pathParams = {
        'reportIdentifier': reportIdentifier
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ReconReportDataRetrivalResponse;
      return this.apiClient.callApi(
        '/v6/reconreport/data/retrieval/{reportIdentifier}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
