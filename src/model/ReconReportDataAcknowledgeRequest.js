/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Cycle from './Cycle';

/**
 * The ReconReportDataAcknowledgeRequest model module.
 * @module model/ReconReportDataAcknowledgeRequest
 * @version v6
 */
class ReconReportDataAcknowledgeRequest {
    /**
     * Constructs a new <code>ReconReportDataAcknowledgeRequest</code>.
     * @alias module:model/ReconReportDataAcknowledgeRequest
     * @param startDate {String} Start date for the reconciliation report.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)
     * @param endDate {String} End date for the reconciliation report.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)
     */
    constructor(startDate, endDate) { 
        
        ReconReportDataAcknowledgeRequest.initialize(this, startDate, endDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, startDate, endDate) { 
        obj['startDate'] = startDate;
        obj['endDate'] = endDate;
    }

    /**
     * Constructs a <code>ReconReportDataAcknowledgeRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReconReportDataAcknowledgeRequest} obj Optional instance to populate.
     * @return {module:model/ReconReportDataAcknowledgeRequest} The populated <code>ReconReportDataAcknowledgeRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReconReportDataAcknowledgeRequest();

            if (data.hasOwnProperty('ica')) {
                obj['ica'] = ApiClient.convertToType(data['ica'], ['String']);
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'String');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'String');
            }
            if (data.hasOwnProperty('cycles')) {
                obj['cycles'] = ApiClient.convertToType(data['cycles'], [Cycle]);
            }
            if (data.hasOwnProperty('enhancedReconciliationReportFlag')) {
                obj['enhancedReconciliationReportFlag'] = ApiClient.convertToType(data['enhancedReconciliationReportFlag'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReconReportDataAcknowledgeRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReconReportDataAcknowledgeRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReconReportDataAcknowledgeRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ica'])) {
            throw new Error("Expected the field `ica` to be an array in the JSON data but got " + data['ica']);
        }
        // ensure the json data is a string
        if (data['startDate'] && !(typeof data['startDate'] === 'string' || data['startDate'] instanceof String)) {
            throw new Error("Expected the field `startDate` to be a primitive type in the JSON string but got " + data['startDate']);
        }
        // ensure the json data is a string
        if (data['endDate'] && !(typeof data['endDate'] === 'string' || data['endDate'] instanceof String)) {
            throw new Error("Expected the field `endDate` to be a primitive type in the JSON string but got " + data['endDate']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['cycles'])) {
            throw new Error("Expected the field `cycles` to be an array in the JSON data but got " + data['cycles']);
        }

        return true;
    }


}

ReconReportDataAcknowledgeRequest.RequiredProperties = ["startDate", "endDate"];

/**
 * Interbank Card Association number used to identify the member in transaction.   Length: 1-11   Valid Values/Format: Numeric
 * @member {Array.<String>} ica
 */
ReconReportDataAcknowledgeRequest.prototype['ica'] = undefined;

/**
 * Start date for the reconciliation report.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)
 * @member {String} startDate
 */
ReconReportDataAcknowledgeRequest.prototype['startDate'] = undefined;

/**
 * End date for the reconciliation report.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)
 * @member {String} endDate
 */
ReconReportDataAcknowledgeRequest.prototype['endDate'] = undefined;

/**
 * It represents the cycle(s) where the clearing data was exchanged.   Length: 1   Valid Values/Format: 1, 2, 3, 4, 5, 6, 7
 * @member {Array.<module:model/Cycle>} cycles
 */
ReconReportDataAcknowledgeRequest.prototype['cycles'] = undefined;

/**
 * It is set to \"true\" because the enhanced reconciliation report is available.   Length: 4-5   Valid Values/Format: true / false
 * @member {Boolean} enhancedReconciliationReportFlag
 */
ReconReportDataAcknowledgeRequest.prototype['enhancedReconciliationReportFlag'] = undefined;






export default ReconReportDataAcknowledgeRequest;

