/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstallmentParameters from './InstallmentParameters';
import OriginalInformationInstallments from './OriginalInformationInstallments';

/**
 * The ClearingDetail model module.
 * @module model/ClearingDetail
 * @version v6
 */
class ClearingDetail {
    /**
     * Constructs a new <code>ClearingDetail</code>.
     * @alias module:model/ClearingDetail
     */
    constructor() { 
        
        ClearingDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClearingDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClearingDetail} obj Optional instance to populate.
     * @return {module:model/ClearingDetail} The populated <code>ClearingDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClearingDetail();

            if (data.hasOwnProperty('accountLevelManagementAccountCategoryCode')) {
                obj['accountLevelManagementAccountCategoryCode'] = ApiClient.convertToType(data['accountLevelManagementAccountCategoryCode'], 'String');
            }
            if (data.hasOwnProperty('acquirerReferenceData')) {
                obj['acquirerReferenceData'] = ApiClient.convertToType(data['acquirerReferenceData'], 'String');
            }
            if (data.hasOwnProperty('acquiringInstitutionIdCode')) {
                obj['acquiringInstitutionIdCode'] = ApiClient.convertToType(data['acquiringInstitutionIdCode'], 'String');
            }
            if (data.hasOwnProperty('approvalCode')) {
                obj['approvalCode'] = ApiClient.convertToType(data['approvalCode'], 'String');
            }
            if (data.hasOwnProperty('businessCycle')) {
                obj['businessCycle'] = ApiClient.convertToType(data['businessCycle'], 'String');
            }
            if (data.hasOwnProperty('businessServiceArrangementTypeCode')) {
                obj['businessServiceArrangementTypeCode'] = ApiClient.convertToType(data['businessServiceArrangementTypeCode'], 'String');
            }
            if (data.hasOwnProperty('businessServiceIdCode')) {
                obj['businessServiceIdCode'] = ApiClient.convertToType(data['businessServiceIdCode'], 'String');
            }
            if (data.hasOwnProperty('cardAcceptorBusinessCode')) {
                obj['cardAcceptorBusinessCode'] = ApiClient.convertToType(data['cardAcceptorBusinessCode'], 'String');
            }
            if (data.hasOwnProperty('cardAcceptorCity')) {
                obj['cardAcceptorCity'] = ApiClient.convertToType(data['cardAcceptorCity'], 'String');
            }
            if (data.hasOwnProperty('cardAcceptorClassificationOverrideIndicator')) {
                obj['cardAcceptorClassificationOverrideIndicator'] = ApiClient.convertToType(data['cardAcceptorClassificationOverrideIndicator'], 'String');
            }
            if (data.hasOwnProperty('cardAcceptorCountry')) {
                obj['cardAcceptorCountry'] = ApiClient.convertToType(data['cardAcceptorCountry'], 'String');
            }
            if (data.hasOwnProperty('cardAcceptorIdCode')) {
                obj['cardAcceptorIdCode'] = ApiClient.convertToType(data['cardAcceptorIdCode'], 'String');
            }
            if (data.hasOwnProperty('cardAcceptorName')) {
                obj['cardAcceptorName'] = ApiClient.convertToType(data['cardAcceptorName'], 'String');
            }
            if (data.hasOwnProperty('cardAcceptorPostalCode')) {
                obj['cardAcceptorPostalCode'] = ApiClient.convertToType(data['cardAcceptorPostalCode'], 'String');
            }
            if (data.hasOwnProperty('cardAcceptorState')) {
                obj['cardAcceptorState'] = ApiClient.convertToType(data['cardAcceptorState'], 'String');
            }
            if (data.hasOwnProperty('cardAcceptorStreetAddress')) {
                obj['cardAcceptorStreetAddress'] = ApiClient.convertToType(data['cardAcceptorStreetAddress'], 'String');
            }
            if (data.hasOwnProperty('cardAcceptorTerminalId')) {
                obj['cardAcceptorTerminalId'] = ApiClient.convertToType(data['cardAcceptorTerminalId'], 'String');
            }
            if (data.hasOwnProperty('cardAcceptorUrl')) {
                obj['cardAcceptorUrl'] = ApiClient.convertToType(data['cardAcceptorUrl'], 'String');
            }
            if (data.hasOwnProperty('cardCaptureCapability')) {
                obj['cardCaptureCapability'] = ApiClient.convertToType(data['cardCaptureCapability'], 'String');
            }
            if (data.hasOwnProperty('cardDataInputCapability')) {
                obj['cardDataInputCapability'] = ApiClient.convertToType(data['cardDataInputCapability'], 'String');
            }
            if (data.hasOwnProperty('cardDataInputMode')) {
                obj['cardDataInputMode'] = ApiClient.convertToType(data['cardDataInputMode'], 'String');
            }
            if (data.hasOwnProperty('cardDataOutputCapability')) {
                obj['cardDataOutputCapability'] = ApiClient.convertToType(data['cardDataOutputCapability'], 'String');
            }
            if (data.hasOwnProperty('cardholderAuthenticationCapability')) {
                obj['cardholderAuthenticationCapability'] = ApiClient.convertToType(data['cardholderAuthenticationCapability'], 'String');
            }
            if (data.hasOwnProperty('cardholderAuthenticationEntity')) {
                obj['cardholderAuthenticationEntity'] = ApiClient.convertToType(data['cardholderAuthenticationEntity'], 'String');
            }
            if (data.hasOwnProperty('cardholderAuthenticationMethod')) {
                obj['cardholderAuthenticationMethod'] = ApiClient.convertToType(data['cardholderAuthenticationMethod'], 'String');
            }
            if (data.hasOwnProperty('cardholderBillingAmount')) {
                obj['cardholderBillingAmount'] = ApiClient.convertToType(data['cardholderBillingAmount'], 'String');
            }
            if (data.hasOwnProperty('cardholderBillingCurrencyCode')) {
                obj['cardholderBillingCurrencyCode'] = ApiClient.convertToType(data['cardholderBillingCurrencyCode'], 'String');
            }
            if (data.hasOwnProperty('cardholderFromAccountCode')) {
                obj['cardholderFromAccountCode'] = ApiClient.convertToType(data['cardholderFromAccountCode'], 'String');
            }
            if (data.hasOwnProperty('cardholderPresentData')) {
                obj['cardholderPresentData'] = ApiClient.convertToType(data['cardholderPresentData'], 'String');
            }
            if (data.hasOwnProperty('cardholderToAccountCode')) {
                obj['cardholderToAccountCode'] = ApiClient.convertToType(data['cardholderToAccountCode'], 'String');
            }
            if (data.hasOwnProperty('cardIssuerReferenceData')) {
                obj['cardIssuerReferenceData'] = ApiClient.convertToType(data['cardIssuerReferenceData'], 'String');
            }
            if (data.hasOwnProperty('cardPresentData')) {
                obj['cardPresentData'] = ApiClient.convertToType(data['cardPresentData'], 'String');
            }
            if (data.hasOwnProperty('cardProgramIdentifier')) {
                obj['cardProgramIdentifier'] = ApiClient.convertToType(data['cardProgramIdentifier'], 'String');
            }
            if (data.hasOwnProperty('centralSiteBusinessDate')) {
                obj['centralSiteBusinessDate'] = ApiClient.convertToType(data['centralSiteBusinessDate'], 'String');
            }
            if (data.hasOwnProperty('centralSiteProcessingDateOriginalMessage')) {
                obj['centralSiteProcessingDateOriginalMessage'] = ApiClient.convertToType(data['centralSiteProcessingDateOriginalMessage'], 'String');
            }
            if (data.hasOwnProperty('currencyCodeCardholderBilling')) {
                obj['currencyCodeCardholderBilling'] = ApiClient.convertToType(data['currencyCodeCardholderBilling'], 'String');
            }
            if (data.hasOwnProperty('currencyCodeReconciliation')) {
                obj['currencyCodeReconciliation'] = ApiClient.convertToType(data['currencyCodeReconciliation'], 'String');
            }
            if (data.hasOwnProperty('currencyCodeTransaction')) {
                obj['currencyCodeTransaction'] = ApiClient.convertToType(data['currencyCodeTransaction'], 'String');
            }
            if (data.hasOwnProperty('currencyExponentCardholderBilling')) {
                obj['currencyExponentCardholderBilling'] = ApiClient.convertToType(data['currencyExponentCardholderBilling'], 'String');
            }
            if (data.hasOwnProperty('currencyExponentReconciliation')) {
                obj['currencyExponentReconciliation'] = ApiClient.convertToType(data['currencyExponentReconciliation'], 'String');
            }
            if (data.hasOwnProperty('currencyExponentTransaction')) {
                obj['currencyExponentTransaction'] = ApiClient.convertToType(data['currencyExponentTransaction'], 'String');
            }
            if (data.hasOwnProperty('dataRecord')) {
                obj['dataRecord'] = ApiClient.convertToType(data['dataRecord'], 'String');
            }
            if (data.hasOwnProperty('electronicCommerceCardAuth')) {
                obj['electronicCommerceCardAuth'] = ApiClient.convertToType(data['electronicCommerceCardAuth'], 'String');
            }
            if (data.hasOwnProperty('electronicCommerceSecurityLevelIndicator')) {
                obj['electronicCommerceSecurityLevelIndicator'] = ApiClient.convertToType(data['electronicCommerceSecurityLevelIndicator'], 'String');
            }
            if (data.hasOwnProperty('electronicCommerceUcafCollectionIndicator')) {
                obj['electronicCommerceUcafCollectionIndicator'] = ApiClient.convertToType(data['electronicCommerceUcafCollectionIndicator'], 'String');
            }
            if (data.hasOwnProperty('forwardingInstitutionIdCode')) {
                obj['forwardingInstitutionIdCode'] = ApiClient.convertToType(data['forwardingInstitutionIdCode'], 'String');
            }
            if (data.hasOwnProperty('installmentAmount')) {
                obj['installmentAmount'] = ApiClient.convertToType(data['installmentAmount'], 'String');
            }
            if (data.hasOwnProperty('installmentFee')) {
                obj['installmentFee'] = ApiClient.convertToType(data['installmentFee'], 'String');
            }
            if (data.hasOwnProperty('installmentNumber')) {
                obj['installmentNumber'] = ApiClient.convertToType(data['installmentNumber'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentDataBrazil')) {
                obj['installmentPaymentDataBrazil'] = ApiClient.convertToType(data['installmentPaymentDataBrazil'], 'String');
            }
            if (data.hasOwnProperty('additionalAmountDataCode')) {
                obj['additionalAmountDataCode'] = ApiClient.convertToType(data['additionalAmountDataCode'], 'String');
            }
            if (data.hasOwnProperty('installmentParameters')) {
                obj['installmentParameters'] = InstallmentParameters.constructFromObject(data['installmentParameters']);
            }
            if (data.hasOwnProperty('originalInformationInstallments')) {
                obj['originalInformationInstallments'] = OriginalInformationInstallments.constructFromObject(data['originalInformationInstallments']);
            }
            if (data.hasOwnProperty('installmentPlanType')) {
                obj['installmentPlanType'] = ApiClient.convertToType(data['installmentPlanType'], 'String');
            }
            if (data.hasOwnProperty('functionCode')) {
                obj['functionCode'] = ApiClient.convertToType(data['functionCode'], 'String');
            }
            if (data.hasOwnProperty('gcmsProductIndentifier')) {
                obj['gcmsProductIndentifier'] = ApiClient.convertToType(data['gcmsProductIndentifier'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentData')) {
                obj['installmentPaymentData'] = ApiClient.convertToType(data['installmentPaymentData'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentDataAnnualPercentageRate')) {
                obj['installmentPaymentDataAnnualPercentageRate'] = ApiClient.convertToType(data['installmentPaymentDataAnnualPercentageRate'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentDataFirstInstallmentAmount')) {
                obj['installmentPaymentDataFirstInstallmentAmount'] = ApiClient.convertToType(data['installmentPaymentDataFirstInstallmentAmount'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentDataInstallmentFee')) {
                obj['installmentPaymentDataInstallmentFee'] = ApiClient.convertToType(data['installmentPaymentDataInstallmentFee'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentDataInterestRate')) {
                obj['installmentPaymentDataInterestRate'] = ApiClient.convertToType(data['installmentPaymentDataInterestRate'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentDataNumberInstallments')) {
                obj['installmentPaymentDataNumberInstallments'] = ApiClient.convertToType(data['installmentPaymentDataNumberInstallments'], 'String');
            }
            if (data.hasOwnProperty('installmentPaymentDataSubsequentInstallmentAmount')) {
                obj['installmentPaymentDataSubsequentInstallmentAmount'] = ApiClient.convertToType(data['installmentPaymentDataSubsequentInstallmentAmount'], 'String');
            }
            if (data.hasOwnProperty('integratedCircuitCardRelatedData')) {
                obj['integratedCircuitCardRelatedData'] = ApiClient.convertToType(data['integratedCircuitCardRelatedData'], 'String');
            }
            if (data.hasOwnProperty('interchangeRateDesignator')) {
                obj['interchangeRateDesignator'] = ApiClient.convertToType(data['interchangeRateDesignator'], 'String');
            }
            if (data.hasOwnProperty('licensedProductIndentifier')) {
                obj['licensedProductIndentifier'] = ApiClient.convertToType(data['licensedProductIndentifier'], 'String');
            }
            if (data.hasOwnProperty('legalCorporateName')) {
                obj['legalCorporateName'] = ApiClient.convertToType(data['legalCorporateName'], 'String');
            }
            if (data.hasOwnProperty('localMessageReasonCode')) {
                obj['localMessageReasonCode'] = ApiClient.convertToType(data['localMessageReasonCode'], 'String');
            }
            if (data.hasOwnProperty('localTax1IVA')) {
                obj['localTax1IVA'] = ApiClient.convertToType(data['localTax1IVA'], 'String');
            }
            if (data.hasOwnProperty('localTransactionDateTime')) {
                obj['localTransactionDateTime'] = ApiClient.convertToType(data['localTransactionDateTime'], 'String');
            }
            if (data.hasOwnProperty('mastercardAssignedId')) {
                obj['mastercardAssignedId'] = ApiClient.convertToType(data['mastercardAssignedId'], 'String');
            }
            if (data.hasOwnProperty('mastercardAssignedIdOverrideIndicator')) {
                obj['mastercardAssignedIdOverrideIndicator'] = ApiClient.convertToType(data['mastercardAssignedIdOverrideIndicator'], 'String');
            }
            if (data.hasOwnProperty('mastercardMappingServiceAccountNumber')) {
                obj['mastercardMappingServiceAccountNumber'] = ApiClient.convertToType(data['mastercardMappingServiceAccountNumber'], 'String');
            }
            if (data.hasOwnProperty('masterPassIncentiveIndicator')) {
                obj['masterPassIncentiveIndicator'] = ApiClient.convertToType(data['masterPassIncentiveIndicator'], 'String');
            }
            if (data.hasOwnProperty('messageReasonCode')) {
                obj['messageReasonCode'] = ApiClient.convertToType(data['messageReasonCode'], 'String');
            }
            if (data.hasOwnProperty('messageReversalIndicator')) {
                obj['messageReversalIndicator'] = ApiClient.convertToType(data['messageReversalIndicator'], 'String');
            }
            if (data.hasOwnProperty('numberOfInstallments')) {
                obj['numberOfInstallments'] = ApiClient.convertToType(data['numberOfInstallments'], 'String');
            }
            if (data.hasOwnProperty('originatingMessageFormat')) {
                obj['originatingMessageFormat'] = ApiClient.convertToType(data['originatingMessageFormat'], 'String');
            }
            if (data.hasOwnProperty('partnerIdCode')) {
                obj['partnerIdCode'] = ApiClient.convertToType(data['partnerIdCode'], 'String');
            }
            if (data.hasOwnProperty('pinCaptureCapability')) {
                obj['pinCaptureCapability'] = ApiClient.convertToType(data['pinCaptureCapability'], 'String');
            }
            if (data.hasOwnProperty('primaryAccountNumber')) {
                obj['primaryAccountNumber'] = ApiClient.convertToType(data['primaryAccountNumber'], 'String');
            }
            if (data.hasOwnProperty('processingCode')) {
                obj['processingCode'] = ApiClient.convertToType(data['processingCode'], 'String');
            }
            if (data.hasOwnProperty('productOverrideIndicator')) {
                obj['productOverrideIndicator'] = ApiClient.convertToType(data['productOverrideIndicator'], 'String');
            }
            if (data.hasOwnProperty('programRegistrationId')) {
                obj['programRegistrationId'] = ApiClient.convertToType(data['programRegistrationId'], 'String');
            }
            if (data.hasOwnProperty('qpsPaypassEligibilityIndicator')) {
                obj['qpsPaypassEligibilityIndicator'] = ApiClient.convertToType(data['qpsPaypassEligibilityIndicator'], 'String');
            }
            if (data.hasOwnProperty('rateIndicator')) {
                obj['rateIndicator'] = ApiClient.convertToType(data['rateIndicator'], 'String');
            }
            if (data.hasOwnProperty('receivingInstitutionIdCode')) {
                obj['receivingInstitutionIdCode'] = ApiClient.convertToType(data['receivingInstitutionIdCode'], 'String');
            }
            if (data.hasOwnProperty('reconciliationAmount')) {
                obj['reconciliationAmount'] = ApiClient.convertToType(data['reconciliationAmount'], 'String');
            }
            if (data.hasOwnProperty('reconciliationCurrencyCode')) {
                obj['reconciliationCurrencyCode'] = ApiClient.convertToType(data['reconciliationCurrencyCode'], 'String');
            }
            if (data.hasOwnProperty('remotePaymentsProgramData')) {
                obj['remotePaymentsProgramData'] = ApiClient.convertToType(data['remotePaymentsProgramData'], 'String');
            }
            if (data.hasOwnProperty('serviceCode')) {
                obj['serviceCode'] = ApiClient.convertToType(data['serviceCode'], 'String');
            }
            if (data.hasOwnProperty('settlementData')) {
                obj['settlementData'] = ApiClient.convertToType(data['settlementData'], 'String');
            }
            if (data.hasOwnProperty('settlementIndicator')) {
                obj['settlementIndicator'] = ApiClient.convertToType(data['settlementIndicator'], 'String');
            }
            if (data.hasOwnProperty('specialConditionsIndicator')) {
                obj['specialConditionsIndicator'] = ApiClient.convertToType(data['specialConditionsIndicator'], 'String');
            }
            if (data.hasOwnProperty('terminalDataOutputCapability')) {
                obj['terminalDataOutputCapability'] = ApiClient.convertToType(data['terminalDataOutputCapability'], 'String');
            }
            if (data.hasOwnProperty('terminalOperatingEnvironment')) {
                obj['terminalOperatingEnvironment'] = ApiClient.convertToType(data['terminalOperatingEnvironment'], 'String');
            }
            if (data.hasOwnProperty('terminalType')) {
                obj['terminalType'] = ApiClient.convertToType(data['terminalType'], 'String');
            }
            if (data.hasOwnProperty('tokenRequestorId')) {
                obj['tokenRequestorId'] = ApiClient.convertToType(data['tokenRequestorId'], 'String');
            }
            if (data.hasOwnProperty('totalTransactionAmount')) {
                obj['totalTransactionAmount'] = ApiClient.convertToType(data['totalTransactionAmount'], 'String');
            }
            if (data.hasOwnProperty('transactionAmountLocal')) {
                obj['transactionAmountLocal'] = ApiClient.convertToType(data['transactionAmountLocal'], 'String');
            }
            if (data.hasOwnProperty('transactionCategoryIndicator')) {
                obj['transactionCategoryIndicator'] = ApiClient.convertToType(data['transactionCategoryIndicator'], 'String');
            }
            if (data.hasOwnProperty('transactionCurrencyCode')) {
                obj['transactionCurrencyCode'] = ApiClient.convertToType(data['transactionCurrencyCode'], 'String');
            }
            if (data.hasOwnProperty('transactionDestinationInstitutionIdCode')) {
                obj['transactionDestinationInstitutionIdCode'] = ApiClient.convertToType(data['transactionDestinationInstitutionIdCode'], 'String');
            }
            if (data.hasOwnProperty('transactionLifeCycleId')) {
                obj['transactionLifeCycleId'] = ApiClient.convertToType(data['transactionLifeCycleId'], 'String');
            }
            if (data.hasOwnProperty('transactionOriginatorInstitutionIdCode')) {
                obj['transactionOriginatorInstitutionIdCode'] = ApiClient.convertToType(data['transactionOriginatorInstitutionIdCode'], 'String');
            }
            if (data.hasOwnProperty('transactionType')) {
                obj['transactionType'] = ApiClient.convertToType(data['transactionType'], 'String');
            }
            if (data.hasOwnProperty('transitProgramCode')) {
                obj['transitProgramCode'] = ApiClient.convertToType(data['transitProgramCode'], 'String');
            }
            if (data.hasOwnProperty('walletIdentifierMdes')) {
                obj['walletIdentifierMdes'] = ApiClient.convertToType(data['walletIdentifierMdes'], 'String');
            }
            if (data.hasOwnProperty('currencyConversionAssessmentAmount')) {
                obj['currencyConversionAssessmentAmount'] = ApiClient.convertToType(data['currencyConversionAssessmentAmount'], 'String');
            }
            if (data.hasOwnProperty('japanCommonMerchantCode')) {
                obj['japanCommonMerchantCode'] = ApiClient.convertToType(data['japanCommonMerchantCode'], 'String');
            }
            if (data.hasOwnProperty('installmentData')) {
                obj['installmentData'] = ApiClient.convertToType(data['installmentData'], 'String');
            }
            if (data.hasOwnProperty('flexCode')) {
                obj['flexCode'] = ApiClient.convertToType(data['flexCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClearingDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClearingDetail</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountLevelManagementAccountCategoryCode'] && !(typeof data['accountLevelManagementAccountCategoryCode'] === 'string' || data['accountLevelManagementAccountCategoryCode'] instanceof String)) {
            throw new Error("Expected the field `accountLevelManagementAccountCategoryCode` to be a primitive type in the JSON string but got " + data['accountLevelManagementAccountCategoryCode']);
        }
        // ensure the json data is a string
        if (data['acquirerReferenceData'] && !(typeof data['acquirerReferenceData'] === 'string' || data['acquirerReferenceData'] instanceof String)) {
            throw new Error("Expected the field `acquirerReferenceData` to be a primitive type in the JSON string but got " + data['acquirerReferenceData']);
        }
        // ensure the json data is a string
        if (data['acquiringInstitutionIdCode'] && !(typeof data['acquiringInstitutionIdCode'] === 'string' || data['acquiringInstitutionIdCode'] instanceof String)) {
            throw new Error("Expected the field `acquiringInstitutionIdCode` to be a primitive type in the JSON string but got " + data['acquiringInstitutionIdCode']);
        }
        // ensure the json data is a string
        if (data['approvalCode'] && !(typeof data['approvalCode'] === 'string' || data['approvalCode'] instanceof String)) {
            throw new Error("Expected the field `approvalCode` to be a primitive type in the JSON string but got " + data['approvalCode']);
        }
        // ensure the json data is a string
        if (data['businessCycle'] && !(typeof data['businessCycle'] === 'string' || data['businessCycle'] instanceof String)) {
            throw new Error("Expected the field `businessCycle` to be a primitive type in the JSON string but got " + data['businessCycle']);
        }
        // ensure the json data is a string
        if (data['businessServiceArrangementTypeCode'] && !(typeof data['businessServiceArrangementTypeCode'] === 'string' || data['businessServiceArrangementTypeCode'] instanceof String)) {
            throw new Error("Expected the field `businessServiceArrangementTypeCode` to be a primitive type in the JSON string but got " + data['businessServiceArrangementTypeCode']);
        }
        // ensure the json data is a string
        if (data['businessServiceIdCode'] && !(typeof data['businessServiceIdCode'] === 'string' || data['businessServiceIdCode'] instanceof String)) {
            throw new Error("Expected the field `businessServiceIdCode` to be a primitive type in the JSON string but got " + data['businessServiceIdCode']);
        }
        // ensure the json data is a string
        if (data['cardAcceptorBusinessCode'] && !(typeof data['cardAcceptorBusinessCode'] === 'string' || data['cardAcceptorBusinessCode'] instanceof String)) {
            throw new Error("Expected the field `cardAcceptorBusinessCode` to be a primitive type in the JSON string but got " + data['cardAcceptorBusinessCode']);
        }
        // ensure the json data is a string
        if (data['cardAcceptorCity'] && !(typeof data['cardAcceptorCity'] === 'string' || data['cardAcceptorCity'] instanceof String)) {
            throw new Error("Expected the field `cardAcceptorCity` to be a primitive type in the JSON string but got " + data['cardAcceptorCity']);
        }
        // ensure the json data is a string
        if (data['cardAcceptorClassificationOverrideIndicator'] && !(typeof data['cardAcceptorClassificationOverrideIndicator'] === 'string' || data['cardAcceptorClassificationOverrideIndicator'] instanceof String)) {
            throw new Error("Expected the field `cardAcceptorClassificationOverrideIndicator` to be a primitive type in the JSON string but got " + data['cardAcceptorClassificationOverrideIndicator']);
        }
        // ensure the json data is a string
        if (data['cardAcceptorCountry'] && !(typeof data['cardAcceptorCountry'] === 'string' || data['cardAcceptorCountry'] instanceof String)) {
            throw new Error("Expected the field `cardAcceptorCountry` to be a primitive type in the JSON string but got " + data['cardAcceptorCountry']);
        }
        // ensure the json data is a string
        if (data['cardAcceptorIdCode'] && !(typeof data['cardAcceptorIdCode'] === 'string' || data['cardAcceptorIdCode'] instanceof String)) {
            throw new Error("Expected the field `cardAcceptorIdCode` to be a primitive type in the JSON string but got " + data['cardAcceptorIdCode']);
        }
        // ensure the json data is a string
        if (data['cardAcceptorName'] && !(typeof data['cardAcceptorName'] === 'string' || data['cardAcceptorName'] instanceof String)) {
            throw new Error("Expected the field `cardAcceptorName` to be a primitive type in the JSON string but got " + data['cardAcceptorName']);
        }
        // ensure the json data is a string
        if (data['cardAcceptorPostalCode'] && !(typeof data['cardAcceptorPostalCode'] === 'string' || data['cardAcceptorPostalCode'] instanceof String)) {
            throw new Error("Expected the field `cardAcceptorPostalCode` to be a primitive type in the JSON string but got " + data['cardAcceptorPostalCode']);
        }
        // ensure the json data is a string
        if (data['cardAcceptorState'] && !(typeof data['cardAcceptorState'] === 'string' || data['cardAcceptorState'] instanceof String)) {
            throw new Error("Expected the field `cardAcceptorState` to be a primitive type in the JSON string but got " + data['cardAcceptorState']);
        }
        // ensure the json data is a string
        if (data['cardAcceptorStreetAddress'] && !(typeof data['cardAcceptorStreetAddress'] === 'string' || data['cardAcceptorStreetAddress'] instanceof String)) {
            throw new Error("Expected the field `cardAcceptorStreetAddress` to be a primitive type in the JSON string but got " + data['cardAcceptorStreetAddress']);
        }
        // ensure the json data is a string
        if (data['cardAcceptorTerminalId'] && !(typeof data['cardAcceptorTerminalId'] === 'string' || data['cardAcceptorTerminalId'] instanceof String)) {
            throw new Error("Expected the field `cardAcceptorTerminalId` to be a primitive type in the JSON string but got " + data['cardAcceptorTerminalId']);
        }
        // ensure the json data is a string
        if (data['cardAcceptorUrl'] && !(typeof data['cardAcceptorUrl'] === 'string' || data['cardAcceptorUrl'] instanceof String)) {
            throw new Error("Expected the field `cardAcceptorUrl` to be a primitive type in the JSON string but got " + data['cardAcceptorUrl']);
        }
        // ensure the json data is a string
        if (data['cardCaptureCapability'] && !(typeof data['cardCaptureCapability'] === 'string' || data['cardCaptureCapability'] instanceof String)) {
            throw new Error("Expected the field `cardCaptureCapability` to be a primitive type in the JSON string but got " + data['cardCaptureCapability']);
        }
        // ensure the json data is a string
        if (data['cardDataInputCapability'] && !(typeof data['cardDataInputCapability'] === 'string' || data['cardDataInputCapability'] instanceof String)) {
            throw new Error("Expected the field `cardDataInputCapability` to be a primitive type in the JSON string but got " + data['cardDataInputCapability']);
        }
        // ensure the json data is a string
        if (data['cardDataInputMode'] && !(typeof data['cardDataInputMode'] === 'string' || data['cardDataInputMode'] instanceof String)) {
            throw new Error("Expected the field `cardDataInputMode` to be a primitive type in the JSON string but got " + data['cardDataInputMode']);
        }
        // ensure the json data is a string
        if (data['cardDataOutputCapability'] && !(typeof data['cardDataOutputCapability'] === 'string' || data['cardDataOutputCapability'] instanceof String)) {
            throw new Error("Expected the field `cardDataOutputCapability` to be a primitive type in the JSON string but got " + data['cardDataOutputCapability']);
        }
        // ensure the json data is a string
        if (data['cardholderAuthenticationCapability'] && !(typeof data['cardholderAuthenticationCapability'] === 'string' || data['cardholderAuthenticationCapability'] instanceof String)) {
            throw new Error("Expected the field `cardholderAuthenticationCapability` to be a primitive type in the JSON string but got " + data['cardholderAuthenticationCapability']);
        }
        // ensure the json data is a string
        if (data['cardholderAuthenticationEntity'] && !(typeof data['cardholderAuthenticationEntity'] === 'string' || data['cardholderAuthenticationEntity'] instanceof String)) {
            throw new Error("Expected the field `cardholderAuthenticationEntity` to be a primitive type in the JSON string but got " + data['cardholderAuthenticationEntity']);
        }
        // ensure the json data is a string
        if (data['cardholderAuthenticationMethod'] && !(typeof data['cardholderAuthenticationMethod'] === 'string' || data['cardholderAuthenticationMethod'] instanceof String)) {
            throw new Error("Expected the field `cardholderAuthenticationMethod` to be a primitive type in the JSON string but got " + data['cardholderAuthenticationMethod']);
        }
        // ensure the json data is a string
        if (data['cardholderBillingAmount'] && !(typeof data['cardholderBillingAmount'] === 'string' || data['cardholderBillingAmount'] instanceof String)) {
            throw new Error("Expected the field `cardholderBillingAmount` to be a primitive type in the JSON string but got " + data['cardholderBillingAmount']);
        }
        // ensure the json data is a string
        if (data['cardholderBillingCurrencyCode'] && !(typeof data['cardholderBillingCurrencyCode'] === 'string' || data['cardholderBillingCurrencyCode'] instanceof String)) {
            throw new Error("Expected the field `cardholderBillingCurrencyCode` to be a primitive type in the JSON string but got " + data['cardholderBillingCurrencyCode']);
        }
        // ensure the json data is a string
        if (data['cardholderFromAccountCode'] && !(typeof data['cardholderFromAccountCode'] === 'string' || data['cardholderFromAccountCode'] instanceof String)) {
            throw new Error("Expected the field `cardholderFromAccountCode` to be a primitive type in the JSON string but got " + data['cardholderFromAccountCode']);
        }
        // ensure the json data is a string
        if (data['cardholderPresentData'] && !(typeof data['cardholderPresentData'] === 'string' || data['cardholderPresentData'] instanceof String)) {
            throw new Error("Expected the field `cardholderPresentData` to be a primitive type in the JSON string but got " + data['cardholderPresentData']);
        }
        // ensure the json data is a string
        if (data['cardholderToAccountCode'] && !(typeof data['cardholderToAccountCode'] === 'string' || data['cardholderToAccountCode'] instanceof String)) {
            throw new Error("Expected the field `cardholderToAccountCode` to be a primitive type in the JSON string but got " + data['cardholderToAccountCode']);
        }
        // ensure the json data is a string
        if (data['cardIssuerReferenceData'] && !(typeof data['cardIssuerReferenceData'] === 'string' || data['cardIssuerReferenceData'] instanceof String)) {
            throw new Error("Expected the field `cardIssuerReferenceData` to be a primitive type in the JSON string but got " + data['cardIssuerReferenceData']);
        }
        // ensure the json data is a string
        if (data['cardPresentData'] && !(typeof data['cardPresentData'] === 'string' || data['cardPresentData'] instanceof String)) {
            throw new Error("Expected the field `cardPresentData` to be a primitive type in the JSON string but got " + data['cardPresentData']);
        }
        // ensure the json data is a string
        if (data['cardProgramIdentifier'] && !(typeof data['cardProgramIdentifier'] === 'string' || data['cardProgramIdentifier'] instanceof String)) {
            throw new Error("Expected the field `cardProgramIdentifier` to be a primitive type in the JSON string but got " + data['cardProgramIdentifier']);
        }
        // ensure the json data is a string
        if (data['centralSiteBusinessDate'] && !(typeof data['centralSiteBusinessDate'] === 'string' || data['centralSiteBusinessDate'] instanceof String)) {
            throw new Error("Expected the field `centralSiteBusinessDate` to be a primitive type in the JSON string but got " + data['centralSiteBusinessDate']);
        }
        // ensure the json data is a string
        if (data['centralSiteProcessingDateOriginalMessage'] && !(typeof data['centralSiteProcessingDateOriginalMessage'] === 'string' || data['centralSiteProcessingDateOriginalMessage'] instanceof String)) {
            throw new Error("Expected the field `centralSiteProcessingDateOriginalMessage` to be a primitive type in the JSON string but got " + data['centralSiteProcessingDateOriginalMessage']);
        }
        // ensure the json data is a string
        if (data['currencyCodeCardholderBilling'] && !(typeof data['currencyCodeCardholderBilling'] === 'string' || data['currencyCodeCardholderBilling'] instanceof String)) {
            throw new Error("Expected the field `currencyCodeCardholderBilling` to be a primitive type in the JSON string but got " + data['currencyCodeCardholderBilling']);
        }
        // ensure the json data is a string
        if (data['currencyCodeReconciliation'] && !(typeof data['currencyCodeReconciliation'] === 'string' || data['currencyCodeReconciliation'] instanceof String)) {
            throw new Error("Expected the field `currencyCodeReconciliation` to be a primitive type in the JSON string but got " + data['currencyCodeReconciliation']);
        }
        // ensure the json data is a string
        if (data['currencyCodeTransaction'] && !(typeof data['currencyCodeTransaction'] === 'string' || data['currencyCodeTransaction'] instanceof String)) {
            throw new Error("Expected the field `currencyCodeTransaction` to be a primitive type in the JSON string but got " + data['currencyCodeTransaction']);
        }
        // ensure the json data is a string
        if (data['currencyExponentCardholderBilling'] && !(typeof data['currencyExponentCardholderBilling'] === 'string' || data['currencyExponentCardholderBilling'] instanceof String)) {
            throw new Error("Expected the field `currencyExponentCardholderBilling` to be a primitive type in the JSON string but got " + data['currencyExponentCardholderBilling']);
        }
        // ensure the json data is a string
        if (data['currencyExponentReconciliation'] && !(typeof data['currencyExponentReconciliation'] === 'string' || data['currencyExponentReconciliation'] instanceof String)) {
            throw new Error("Expected the field `currencyExponentReconciliation` to be a primitive type in the JSON string but got " + data['currencyExponentReconciliation']);
        }
        // ensure the json data is a string
        if (data['currencyExponentTransaction'] && !(typeof data['currencyExponentTransaction'] === 'string' || data['currencyExponentTransaction'] instanceof String)) {
            throw new Error("Expected the field `currencyExponentTransaction` to be a primitive type in the JSON string but got " + data['currencyExponentTransaction']);
        }
        // ensure the json data is a string
        if (data['dataRecord'] && !(typeof data['dataRecord'] === 'string' || data['dataRecord'] instanceof String)) {
            throw new Error("Expected the field `dataRecord` to be a primitive type in the JSON string but got " + data['dataRecord']);
        }
        // ensure the json data is a string
        if (data['electronicCommerceCardAuth'] && !(typeof data['electronicCommerceCardAuth'] === 'string' || data['electronicCommerceCardAuth'] instanceof String)) {
            throw new Error("Expected the field `electronicCommerceCardAuth` to be a primitive type in the JSON string but got " + data['electronicCommerceCardAuth']);
        }
        // ensure the json data is a string
        if (data['electronicCommerceSecurityLevelIndicator'] && !(typeof data['electronicCommerceSecurityLevelIndicator'] === 'string' || data['electronicCommerceSecurityLevelIndicator'] instanceof String)) {
            throw new Error("Expected the field `electronicCommerceSecurityLevelIndicator` to be a primitive type in the JSON string but got " + data['electronicCommerceSecurityLevelIndicator']);
        }
        // ensure the json data is a string
        if (data['electronicCommerceUcafCollectionIndicator'] && !(typeof data['electronicCommerceUcafCollectionIndicator'] === 'string' || data['electronicCommerceUcafCollectionIndicator'] instanceof String)) {
            throw new Error("Expected the field `electronicCommerceUcafCollectionIndicator` to be a primitive type in the JSON string but got " + data['electronicCommerceUcafCollectionIndicator']);
        }
        // ensure the json data is a string
        if (data['forwardingInstitutionIdCode'] && !(typeof data['forwardingInstitutionIdCode'] === 'string' || data['forwardingInstitutionIdCode'] instanceof String)) {
            throw new Error("Expected the field `forwardingInstitutionIdCode` to be a primitive type in the JSON string but got " + data['forwardingInstitutionIdCode']);
        }
        // ensure the json data is a string
        if (data['installmentAmount'] && !(typeof data['installmentAmount'] === 'string' || data['installmentAmount'] instanceof String)) {
            throw new Error("Expected the field `installmentAmount` to be a primitive type in the JSON string but got " + data['installmentAmount']);
        }
        // ensure the json data is a string
        if (data['installmentFee'] && !(typeof data['installmentFee'] === 'string' || data['installmentFee'] instanceof String)) {
            throw new Error("Expected the field `installmentFee` to be a primitive type in the JSON string but got " + data['installmentFee']);
        }
        // ensure the json data is a string
        if (data['installmentNumber'] && !(typeof data['installmentNumber'] === 'string' || data['installmentNumber'] instanceof String)) {
            throw new Error("Expected the field `installmentNumber` to be a primitive type in the JSON string but got " + data['installmentNumber']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentDataBrazil'] && !(typeof data['installmentPaymentDataBrazil'] === 'string' || data['installmentPaymentDataBrazil'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentDataBrazil` to be a primitive type in the JSON string but got " + data['installmentPaymentDataBrazil']);
        }
        // ensure the json data is a string
        if (data['additionalAmountDataCode'] && !(typeof data['additionalAmountDataCode'] === 'string' || data['additionalAmountDataCode'] instanceof String)) {
            throw new Error("Expected the field `additionalAmountDataCode` to be a primitive type in the JSON string but got " + data['additionalAmountDataCode']);
        }
        // validate the optional field `installmentParameters`
        if (data['installmentParameters']) { // data not null
          InstallmentParameters.validateJSON(data['installmentParameters']);
        }
        // validate the optional field `originalInformationInstallments`
        if (data['originalInformationInstallments']) { // data not null
          OriginalInformationInstallments.validateJSON(data['originalInformationInstallments']);
        }
        // ensure the json data is a string
        if (data['installmentPlanType'] && !(typeof data['installmentPlanType'] === 'string' || data['installmentPlanType'] instanceof String)) {
            throw new Error("Expected the field `installmentPlanType` to be a primitive type in the JSON string but got " + data['installmentPlanType']);
        }
        // ensure the json data is a string
        if (data['functionCode'] && !(typeof data['functionCode'] === 'string' || data['functionCode'] instanceof String)) {
            throw new Error("Expected the field `functionCode` to be a primitive type in the JSON string but got " + data['functionCode']);
        }
        // ensure the json data is a string
        if (data['gcmsProductIndentifier'] && !(typeof data['gcmsProductIndentifier'] === 'string' || data['gcmsProductIndentifier'] instanceof String)) {
            throw new Error("Expected the field `gcmsProductIndentifier` to be a primitive type in the JSON string but got " + data['gcmsProductIndentifier']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentData'] && !(typeof data['installmentPaymentData'] === 'string' || data['installmentPaymentData'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentData` to be a primitive type in the JSON string but got " + data['installmentPaymentData']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentDataAnnualPercentageRate'] && !(typeof data['installmentPaymentDataAnnualPercentageRate'] === 'string' || data['installmentPaymentDataAnnualPercentageRate'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentDataAnnualPercentageRate` to be a primitive type in the JSON string but got " + data['installmentPaymentDataAnnualPercentageRate']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentDataFirstInstallmentAmount'] && !(typeof data['installmentPaymentDataFirstInstallmentAmount'] === 'string' || data['installmentPaymentDataFirstInstallmentAmount'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentDataFirstInstallmentAmount` to be a primitive type in the JSON string but got " + data['installmentPaymentDataFirstInstallmentAmount']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentDataInstallmentFee'] && !(typeof data['installmentPaymentDataInstallmentFee'] === 'string' || data['installmentPaymentDataInstallmentFee'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentDataInstallmentFee` to be a primitive type in the JSON string but got " + data['installmentPaymentDataInstallmentFee']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentDataInterestRate'] && !(typeof data['installmentPaymentDataInterestRate'] === 'string' || data['installmentPaymentDataInterestRate'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentDataInterestRate` to be a primitive type in the JSON string but got " + data['installmentPaymentDataInterestRate']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentDataNumberInstallments'] && !(typeof data['installmentPaymentDataNumberInstallments'] === 'string' || data['installmentPaymentDataNumberInstallments'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentDataNumberInstallments` to be a primitive type in the JSON string but got " + data['installmentPaymentDataNumberInstallments']);
        }
        // ensure the json data is a string
        if (data['installmentPaymentDataSubsequentInstallmentAmount'] && !(typeof data['installmentPaymentDataSubsequentInstallmentAmount'] === 'string' || data['installmentPaymentDataSubsequentInstallmentAmount'] instanceof String)) {
            throw new Error("Expected the field `installmentPaymentDataSubsequentInstallmentAmount` to be a primitive type in the JSON string but got " + data['installmentPaymentDataSubsequentInstallmentAmount']);
        }
        // ensure the json data is a string
        if (data['integratedCircuitCardRelatedData'] && !(typeof data['integratedCircuitCardRelatedData'] === 'string' || data['integratedCircuitCardRelatedData'] instanceof String)) {
            throw new Error("Expected the field `integratedCircuitCardRelatedData` to be a primitive type in the JSON string but got " + data['integratedCircuitCardRelatedData']);
        }
        // ensure the json data is a string
        if (data['interchangeRateDesignator'] && !(typeof data['interchangeRateDesignator'] === 'string' || data['interchangeRateDesignator'] instanceof String)) {
            throw new Error("Expected the field `interchangeRateDesignator` to be a primitive type in the JSON string but got " + data['interchangeRateDesignator']);
        }
        // ensure the json data is a string
        if (data['licensedProductIndentifier'] && !(typeof data['licensedProductIndentifier'] === 'string' || data['licensedProductIndentifier'] instanceof String)) {
            throw new Error("Expected the field `licensedProductIndentifier` to be a primitive type in the JSON string but got " + data['licensedProductIndentifier']);
        }
        // ensure the json data is a string
        if (data['legalCorporateName'] && !(typeof data['legalCorporateName'] === 'string' || data['legalCorporateName'] instanceof String)) {
            throw new Error("Expected the field `legalCorporateName` to be a primitive type in the JSON string but got " + data['legalCorporateName']);
        }
        // ensure the json data is a string
        if (data['localMessageReasonCode'] && !(typeof data['localMessageReasonCode'] === 'string' || data['localMessageReasonCode'] instanceof String)) {
            throw new Error("Expected the field `localMessageReasonCode` to be a primitive type in the JSON string but got " + data['localMessageReasonCode']);
        }
        // ensure the json data is a string
        if (data['localTax1IVA'] && !(typeof data['localTax1IVA'] === 'string' || data['localTax1IVA'] instanceof String)) {
            throw new Error("Expected the field `localTax1IVA` to be a primitive type in the JSON string but got " + data['localTax1IVA']);
        }
        // ensure the json data is a string
        if (data['localTransactionDateTime'] && !(typeof data['localTransactionDateTime'] === 'string' || data['localTransactionDateTime'] instanceof String)) {
            throw new Error("Expected the field `localTransactionDateTime` to be a primitive type in the JSON string but got " + data['localTransactionDateTime']);
        }
        // ensure the json data is a string
        if (data['mastercardAssignedId'] && !(typeof data['mastercardAssignedId'] === 'string' || data['mastercardAssignedId'] instanceof String)) {
            throw new Error("Expected the field `mastercardAssignedId` to be a primitive type in the JSON string but got " + data['mastercardAssignedId']);
        }
        // ensure the json data is a string
        if (data['mastercardAssignedIdOverrideIndicator'] && !(typeof data['mastercardAssignedIdOverrideIndicator'] === 'string' || data['mastercardAssignedIdOverrideIndicator'] instanceof String)) {
            throw new Error("Expected the field `mastercardAssignedIdOverrideIndicator` to be a primitive type in the JSON string but got " + data['mastercardAssignedIdOverrideIndicator']);
        }
        // ensure the json data is a string
        if (data['mastercardMappingServiceAccountNumber'] && !(typeof data['mastercardMappingServiceAccountNumber'] === 'string' || data['mastercardMappingServiceAccountNumber'] instanceof String)) {
            throw new Error("Expected the field `mastercardMappingServiceAccountNumber` to be a primitive type in the JSON string but got " + data['mastercardMappingServiceAccountNumber']);
        }
        // ensure the json data is a string
        if (data['masterPassIncentiveIndicator'] && !(typeof data['masterPassIncentiveIndicator'] === 'string' || data['masterPassIncentiveIndicator'] instanceof String)) {
            throw new Error("Expected the field `masterPassIncentiveIndicator` to be a primitive type in the JSON string but got " + data['masterPassIncentiveIndicator']);
        }
        // ensure the json data is a string
        if (data['messageReasonCode'] && !(typeof data['messageReasonCode'] === 'string' || data['messageReasonCode'] instanceof String)) {
            throw new Error("Expected the field `messageReasonCode` to be a primitive type in the JSON string but got " + data['messageReasonCode']);
        }
        // ensure the json data is a string
        if (data['messageReversalIndicator'] && !(typeof data['messageReversalIndicator'] === 'string' || data['messageReversalIndicator'] instanceof String)) {
            throw new Error("Expected the field `messageReversalIndicator` to be a primitive type in the JSON string but got " + data['messageReversalIndicator']);
        }
        // ensure the json data is a string
        if (data['numberOfInstallments'] && !(typeof data['numberOfInstallments'] === 'string' || data['numberOfInstallments'] instanceof String)) {
            throw new Error("Expected the field `numberOfInstallments` to be a primitive type in the JSON string but got " + data['numberOfInstallments']);
        }
        // ensure the json data is a string
        if (data['originatingMessageFormat'] && !(typeof data['originatingMessageFormat'] === 'string' || data['originatingMessageFormat'] instanceof String)) {
            throw new Error("Expected the field `originatingMessageFormat` to be a primitive type in the JSON string but got " + data['originatingMessageFormat']);
        }
        // ensure the json data is a string
        if (data['partnerIdCode'] && !(typeof data['partnerIdCode'] === 'string' || data['partnerIdCode'] instanceof String)) {
            throw new Error("Expected the field `partnerIdCode` to be a primitive type in the JSON string but got " + data['partnerIdCode']);
        }
        // ensure the json data is a string
        if (data['pinCaptureCapability'] && !(typeof data['pinCaptureCapability'] === 'string' || data['pinCaptureCapability'] instanceof String)) {
            throw new Error("Expected the field `pinCaptureCapability` to be a primitive type in the JSON string but got " + data['pinCaptureCapability']);
        }
        // ensure the json data is a string
        if (data['primaryAccountNumber'] && !(typeof data['primaryAccountNumber'] === 'string' || data['primaryAccountNumber'] instanceof String)) {
            throw new Error("Expected the field `primaryAccountNumber` to be a primitive type in the JSON string but got " + data['primaryAccountNumber']);
        }
        // ensure the json data is a string
        if (data['processingCode'] && !(typeof data['processingCode'] === 'string' || data['processingCode'] instanceof String)) {
            throw new Error("Expected the field `processingCode` to be a primitive type in the JSON string but got " + data['processingCode']);
        }
        // ensure the json data is a string
        if (data['productOverrideIndicator'] && !(typeof data['productOverrideIndicator'] === 'string' || data['productOverrideIndicator'] instanceof String)) {
            throw new Error("Expected the field `productOverrideIndicator` to be a primitive type in the JSON string but got " + data['productOverrideIndicator']);
        }
        // ensure the json data is a string
        if (data['programRegistrationId'] && !(typeof data['programRegistrationId'] === 'string' || data['programRegistrationId'] instanceof String)) {
            throw new Error("Expected the field `programRegistrationId` to be a primitive type in the JSON string but got " + data['programRegistrationId']);
        }
        // ensure the json data is a string
        if (data['qpsPaypassEligibilityIndicator'] && !(typeof data['qpsPaypassEligibilityIndicator'] === 'string' || data['qpsPaypassEligibilityIndicator'] instanceof String)) {
            throw new Error("Expected the field `qpsPaypassEligibilityIndicator` to be a primitive type in the JSON string but got " + data['qpsPaypassEligibilityIndicator']);
        }
        // ensure the json data is a string
        if (data['rateIndicator'] && !(typeof data['rateIndicator'] === 'string' || data['rateIndicator'] instanceof String)) {
            throw new Error("Expected the field `rateIndicator` to be a primitive type in the JSON string but got " + data['rateIndicator']);
        }
        // ensure the json data is a string
        if (data['receivingInstitutionIdCode'] && !(typeof data['receivingInstitutionIdCode'] === 'string' || data['receivingInstitutionIdCode'] instanceof String)) {
            throw new Error("Expected the field `receivingInstitutionIdCode` to be a primitive type in the JSON string but got " + data['receivingInstitutionIdCode']);
        }
        // ensure the json data is a string
        if (data['reconciliationAmount'] && !(typeof data['reconciliationAmount'] === 'string' || data['reconciliationAmount'] instanceof String)) {
            throw new Error("Expected the field `reconciliationAmount` to be a primitive type in the JSON string but got " + data['reconciliationAmount']);
        }
        // ensure the json data is a string
        if (data['reconciliationCurrencyCode'] && !(typeof data['reconciliationCurrencyCode'] === 'string' || data['reconciliationCurrencyCode'] instanceof String)) {
            throw new Error("Expected the field `reconciliationCurrencyCode` to be a primitive type in the JSON string but got " + data['reconciliationCurrencyCode']);
        }
        // ensure the json data is a string
        if (data['remotePaymentsProgramData'] && !(typeof data['remotePaymentsProgramData'] === 'string' || data['remotePaymentsProgramData'] instanceof String)) {
            throw new Error("Expected the field `remotePaymentsProgramData` to be a primitive type in the JSON string but got " + data['remotePaymentsProgramData']);
        }
        // ensure the json data is a string
        if (data['serviceCode'] && !(typeof data['serviceCode'] === 'string' || data['serviceCode'] instanceof String)) {
            throw new Error("Expected the field `serviceCode` to be a primitive type in the JSON string but got " + data['serviceCode']);
        }
        // ensure the json data is a string
        if (data['settlementData'] && !(typeof data['settlementData'] === 'string' || data['settlementData'] instanceof String)) {
            throw new Error("Expected the field `settlementData` to be a primitive type in the JSON string but got " + data['settlementData']);
        }
        // ensure the json data is a string
        if (data['settlementIndicator'] && !(typeof data['settlementIndicator'] === 'string' || data['settlementIndicator'] instanceof String)) {
            throw new Error("Expected the field `settlementIndicator` to be a primitive type in the JSON string but got " + data['settlementIndicator']);
        }
        // ensure the json data is a string
        if (data['specialConditionsIndicator'] && !(typeof data['specialConditionsIndicator'] === 'string' || data['specialConditionsIndicator'] instanceof String)) {
            throw new Error("Expected the field `specialConditionsIndicator` to be a primitive type in the JSON string but got " + data['specialConditionsIndicator']);
        }
        // ensure the json data is a string
        if (data['terminalDataOutputCapability'] && !(typeof data['terminalDataOutputCapability'] === 'string' || data['terminalDataOutputCapability'] instanceof String)) {
            throw new Error("Expected the field `terminalDataOutputCapability` to be a primitive type in the JSON string but got " + data['terminalDataOutputCapability']);
        }
        // ensure the json data is a string
        if (data['terminalOperatingEnvironment'] && !(typeof data['terminalOperatingEnvironment'] === 'string' || data['terminalOperatingEnvironment'] instanceof String)) {
            throw new Error("Expected the field `terminalOperatingEnvironment` to be a primitive type in the JSON string but got " + data['terminalOperatingEnvironment']);
        }
        // ensure the json data is a string
        if (data['terminalType'] && !(typeof data['terminalType'] === 'string' || data['terminalType'] instanceof String)) {
            throw new Error("Expected the field `terminalType` to be a primitive type in the JSON string but got " + data['terminalType']);
        }
        // ensure the json data is a string
        if (data['tokenRequestorId'] && !(typeof data['tokenRequestorId'] === 'string' || data['tokenRequestorId'] instanceof String)) {
            throw new Error("Expected the field `tokenRequestorId` to be a primitive type in the JSON string but got " + data['tokenRequestorId']);
        }
        // ensure the json data is a string
        if (data['totalTransactionAmount'] && !(typeof data['totalTransactionAmount'] === 'string' || data['totalTransactionAmount'] instanceof String)) {
            throw new Error("Expected the field `totalTransactionAmount` to be a primitive type in the JSON string but got " + data['totalTransactionAmount']);
        }
        // ensure the json data is a string
        if (data['transactionAmountLocal'] && !(typeof data['transactionAmountLocal'] === 'string' || data['transactionAmountLocal'] instanceof String)) {
            throw new Error("Expected the field `transactionAmountLocal` to be a primitive type in the JSON string but got " + data['transactionAmountLocal']);
        }
        // ensure the json data is a string
        if (data['transactionCategoryIndicator'] && !(typeof data['transactionCategoryIndicator'] === 'string' || data['transactionCategoryIndicator'] instanceof String)) {
            throw new Error("Expected the field `transactionCategoryIndicator` to be a primitive type in the JSON string but got " + data['transactionCategoryIndicator']);
        }
        // ensure the json data is a string
        if (data['transactionCurrencyCode'] && !(typeof data['transactionCurrencyCode'] === 'string' || data['transactionCurrencyCode'] instanceof String)) {
            throw new Error("Expected the field `transactionCurrencyCode` to be a primitive type in the JSON string but got " + data['transactionCurrencyCode']);
        }
        // ensure the json data is a string
        if (data['transactionDestinationInstitutionIdCode'] && !(typeof data['transactionDestinationInstitutionIdCode'] === 'string' || data['transactionDestinationInstitutionIdCode'] instanceof String)) {
            throw new Error("Expected the field `transactionDestinationInstitutionIdCode` to be a primitive type in the JSON string but got " + data['transactionDestinationInstitutionIdCode']);
        }
        // ensure the json data is a string
        if (data['transactionLifeCycleId'] && !(typeof data['transactionLifeCycleId'] === 'string' || data['transactionLifeCycleId'] instanceof String)) {
            throw new Error("Expected the field `transactionLifeCycleId` to be a primitive type in the JSON string but got " + data['transactionLifeCycleId']);
        }
        // ensure the json data is a string
        if (data['transactionOriginatorInstitutionIdCode'] && !(typeof data['transactionOriginatorInstitutionIdCode'] === 'string' || data['transactionOriginatorInstitutionIdCode'] instanceof String)) {
            throw new Error("Expected the field `transactionOriginatorInstitutionIdCode` to be a primitive type in the JSON string but got " + data['transactionOriginatorInstitutionIdCode']);
        }
        // ensure the json data is a string
        if (data['transactionType'] && !(typeof data['transactionType'] === 'string' || data['transactionType'] instanceof String)) {
            throw new Error("Expected the field `transactionType` to be a primitive type in the JSON string but got " + data['transactionType']);
        }
        // ensure the json data is a string
        if (data['transitProgramCode'] && !(typeof data['transitProgramCode'] === 'string' || data['transitProgramCode'] instanceof String)) {
            throw new Error("Expected the field `transitProgramCode` to be a primitive type in the JSON string but got " + data['transitProgramCode']);
        }
        // ensure the json data is a string
        if (data['walletIdentifierMdes'] && !(typeof data['walletIdentifierMdes'] === 'string' || data['walletIdentifierMdes'] instanceof String)) {
            throw new Error("Expected the field `walletIdentifierMdes` to be a primitive type in the JSON string but got " + data['walletIdentifierMdes']);
        }
        // ensure the json data is a string
        if (data['currencyConversionAssessmentAmount'] && !(typeof data['currencyConversionAssessmentAmount'] === 'string' || data['currencyConversionAssessmentAmount'] instanceof String)) {
            throw new Error("Expected the field `currencyConversionAssessmentAmount` to be a primitive type in the JSON string but got " + data['currencyConversionAssessmentAmount']);
        }
        // ensure the json data is a string
        if (data['japanCommonMerchantCode'] && !(typeof data['japanCommonMerchantCode'] === 'string' || data['japanCommonMerchantCode'] instanceof String)) {
            throw new Error("Expected the field `japanCommonMerchantCode` to be a primitive type in the JSON string but got " + data['japanCommonMerchantCode']);
        }
        // ensure the json data is a string
        if (data['installmentData'] && !(typeof data['installmentData'] === 'string' || data['installmentData'] instanceof String)) {
            throw new Error("Expected the field `installmentData` to be a primitive type in the JSON string but got " + data['installmentData']);
        }
        // ensure the json data is a string
        if (data['flexCode'] && !(typeof data['flexCode'] === 'string' || data['flexCode'] instanceof String)) {
            throw new Error("Expected the field `flexCode` to be a primitive type in the JSON string but got " + data['flexCode']);
        }

        return true;
    }


}



/**
 * Describes the category code of Account Level Management assigned
 * @member {String} accountLevelManagementAccountCategoryCode
 */
ClearingDetail.prototype['accountLevelManagementAccountCategoryCode'] = undefined;

/**
 * Data an acquirer supplies in an acquirer-originated message that may be required for an issuer to return to the acquirer in a subsequent message
 * @member {String} acquirerReferenceData
 */
ClearingDetail.prototype['acquirerReferenceData'] = undefined;

/**
 * Identifies the acquiring institution (for example, merchant bank) or its agent.
 * @member {String} acquiringInstitutionIdCode
 */
ClearingDetail.prototype['acquiringInstitutionIdCode'] = undefined;

/**
 * A code the authorizing institution assigns indicating approval
 * @member {String} approvalCode
 */
ClearingDetail.prototype['approvalCode'] = undefined;

/**
 * A two-digit numeric subfield (such as 01, 02, or 03) that identifies a reconciliation period in a Business Date
 * @member {String} businessCycle
 */
ClearingDetail.prototype['businessCycle'] = undefined;

/**
 * A one position numeric value that identifies the business relationship between the transaction's participants
 * @member {String} businessServiceArrangementTypeCode
 */
ClearingDetail.prototype['businessServiceArrangementTypeCode'] = undefined;

/**
 * A six-position value that identifies the business service to which the transaction is assigned for reconciliation and rules basis
 * @member {String} businessServiceIdCode
 */
ClearingDetail.prototype['businessServiceIdCode'] = undefined;

/**
 * Classifies the type of business applicable to the card acceptor
 * @member {String} cardAcceptorBusinessCode
 */
ClearingDetail.prototype['cardAcceptorBusinessCode'] = undefined;

/**
 * Contains the card acceptor city of the merchant or, if a payment facilitator is involved in the transaction, the sub-merchant
 * @member {String} cardAcceptorCity
 */
ClearingDetail.prototype['cardAcceptorCity'] = undefined;

/**
 * Indicate whether Card Acceptor Business Code (MCC) override rates, Card Acceptor Business (CAB) Type override rates, or neither, were used in the interchange fee amount
 * @member {String} cardAcceptorClassificationOverrideIndicator
 */
ClearingDetail.prototype['cardAcceptorClassificationOverrideIndicator'] = undefined;

/**
 * Contains the card acceptor county of the merchant or, if a payment facilitator is involved in the transaction, the sub-merchant
 * @member {String} cardAcceptorCountry
 */
ClearingDetail.prototype['cardAcceptorCountry'] = undefined;

/**
 * Identifies the card acceptor ID assigned by the acquirer
 * @member {String} cardAcceptorIdCode
 */
ClearingDetail.prototype['cardAcceptorIdCode'] = undefined;

/**
 * Contains the card acceptor's name
 * @member {String} cardAcceptorName
 */
ClearingDetail.prototype['cardAcceptorName'] = undefined;

/**
 * Contains the card acceptor's postal code
 * @member {String} cardAcceptorPostalCode
 */
ClearingDetail.prototype['cardAcceptorPostalCode'] = undefined;

/**
 * Contains the card acceptor's state
 * @member {String} cardAcceptorState
 */
ClearingDetail.prototype['cardAcceptorState'] = undefined;

/**
 * Contains the card acceptor's street address
 * @member {String} cardAcceptorStreetAddress
 */
ClearingDetail.prototype['cardAcceptorStreetAddress'] = undefined;

/**
 * A unique code identifying a terminal at the card acceptor location
 * @member {String} cardAcceptorTerminalId
 */
ClearingDetail.prototype['cardAcceptorTerminalId'] = undefined;

/**
 * Contains the card website URL address
 * @member {String} cardAcceptorUrl
 */
ClearingDetail.prototype['cardAcceptorUrl'] = undefined;

/**
 * Indicates whether the terminal has card capture capabilities
 * @member {String} cardCaptureCapability
 */
ClearingDetail.prototype['cardCaptureCapability'] = undefined;

/**
 * Indicates the terminal capabilities for transferring the data on the card into the terminal
 * @member {String} cardDataInputCapability
 */
ClearingDetail.prototype['cardDataInputCapability'] = undefined;

/**
 * Indicates how the card data was entered at the terminal
 * @member {String} cardDataInputMode
 */
ClearingDetail.prototype['cardDataInputMode'] = undefined;

/**
 * Indicates the ability of the terminal to write or output data to a card
 * @member {String} cardDataOutputCapability
 */
ClearingDetail.prototype['cardDataOutputCapability'] = undefined;

/**
 * Describes the capability of the terminal device to support/accept authentication data
 * @member {String} cardholderAuthenticationCapability
 */
ClearingDetail.prototype['cardholderAuthenticationCapability'] = undefined;

/**
 * Indicates the entity through which the cardholder's identity was verified at the point of service
 * @member {String} cardholderAuthenticationEntity
 */
ClearingDetail.prototype['cardholderAuthenticationEntity'] = undefined;

/**
 * Indicates the method by which the cardholder's identity was verified at the point of service
 * @member {String} cardholderAuthenticationMethod
 */
ClearingDetail.prototype['cardholderAuthenticationMethod'] = undefined;

/**
 * The transaction amount in the issuers currency
 * @member {String} cardholderBillingAmount
 */
ClearingDetail.prototype['cardholderBillingAmount'] = undefined;

/**
 * Identifies the currency code of the cardholder billing amount
 * @member {String} cardholderBillingCurrencyCode
 */
ClearingDetail.prototype['cardholderBillingCurrencyCode'] = undefined;

/**
 * Describes the cardholder from account type
 * @member {String} cardholderFromAccountCode
 */
ClearingDetail.prototype['cardholderFromAccountCode'] = undefined;

/**
 * Indicates whether the cardholder is present at the point of service and explains the condition if the cardholder is not present
 * @member {String} cardholderPresentData
 */
ClearingDetail.prototype['cardholderPresentData'] = undefined;

/**
 * Describes the cardholder to account type
 * @member {String} cardholderToAccountCode
 */
ClearingDetail.prototype['cardholderToAccountCode'] = undefined;

/**
 * Issuer provided when processing retrieval or chargeback messages
 * @member {String} cardIssuerReferenceData
 */
ClearingDetail.prototype['cardIssuerReferenceData'] = undefined;

/**
 * Indicates if the card is present at the point of service
 * @member {String} cardPresentData
 */
ClearingDetail.prototype['cardPresentData'] = undefined;

/**
 * A three-character code that identifies the card program or financial network to which a transaction belongs
 * @member {String} cardProgramIdentifier
 */
ClearingDetail.prototype['cardProgramIdentifier'] = undefined;

/**
 * Identifies the official business processing date when the business service reconciles a transaction
 * @member {String} centralSiteBusinessDate
 */
ClearingDetail.prototype['centralSiteBusinessDate'] = undefined;

/**
 * Central site processing date of original message
 * @member {String} centralSiteProcessingDateOriginalMessage
 */
ClearingDetail.prototype['centralSiteProcessingDateOriginalMessage'] = undefined;

/**
 * Defines the cardholder billing amount currency
 * @member {String} currencyCodeCardholderBilling
 */
ClearingDetail.prototype['currencyCodeCardholderBilling'] = undefined;

/**
 * Defines the reconciliation amount currency
 * @member {String} currencyCodeReconciliation
 */
ClearingDetail.prototype['currencyCodeReconciliation'] = undefined;

/**
 * Defines the local transaction amount currency
 * @member {String} currencyCodeTransaction
 */
ClearingDetail.prototype['currencyCodeTransaction'] = undefined;

/**
 * Explicitly identifies the implicit decimal point locations associated with cardholder billing amount
 * @member {String} currencyExponentCardholderBilling
 */
ClearingDetail.prototype['currencyExponentCardholderBilling'] = undefined;

/**
 * Explicitly identifies the implicit decimal point locations associated with reconciliation amount
 * @member {String} currencyExponentReconciliation
 */
ClearingDetail.prototype['currencyExponentReconciliation'] = undefined;

/**
 * Explicitly identifies the implicit decimal point locations associated with transaction amount
 * @member {String} currencyExponentTransaction
 */
ClearingDetail.prototype['currencyExponentTransaction'] = undefined;

/**
 * Contains message text data, file update data, or other information as specified in individual IPM messages
 * @member {String} dataRecord
 */
ClearingDetail.prototype['dataRecord'] = undefined;

/**
 * Indicates the type of Cardholder Authentication used in the authorization process
 * @member {String} electronicCommerceCardAuth
 */
ClearingDetail.prototype['electronicCommerceCardAuth'] = undefined;

/**
 * Indicates the presence and type of security protocol present in the authorization process
 * @member {String} electronicCommerceSecurityLevelIndicator
 */
ClearingDetail.prototype['electronicCommerceSecurityLevelIndicator'] = undefined;

/**
 * Identifies the level of UCAFâ„¢ supported in the authorization process
 * @member {String} electronicCommerceUcafCollectionIndicator
 */
ClearingDetail.prototype['electronicCommerceUcafCollectionIndicator'] = undefined;

/**
 * Identifies a message's forwarding institution
 * @member {String} forwardingInstitutionIdCode
 */
ClearingDetail.prototype['forwardingInstitutionIdCode'] = undefined;

/**
 * Contains total installment amount
 * @member {String} installmentAmount
 */
ClearingDetail.prototype['installmentAmount'] = undefined;

/**
 * Installment fee contains any fee paid to or by the issuer in an installment transaction. Numeric value where the last 2 are decimal
 * @member {String} installmentFee
 */
ClearingDetail.prototype['installmentFee'] = undefined;

/**
 * Indicates which installment number is being submitted
 * @member {String} installmentNumber
 */
ClearingDetail.prototype['installmentNumber'] = undefined;

/**
 * The field will contain installment payment data for Brazilian intracountry transactions
 * @member {String} installmentPaymentDataBrazil
 */
ClearingDetail.prototype['installmentPaymentDataBrazil'] = undefined;

/**
 * The field will contain the Additional Amount Data
 * @member {String} additionalAmountDataCode
 */
ClearingDetail.prototype['additionalAmountDataCode'] = undefined;

/**
 * @member {module:model/InstallmentParameters} installmentParameters
 */
ClearingDetail.prototype['installmentParameters'] = undefined;

/**
 * @member {module:model/OriginalInformationInstallments} originalInformationInstallments
 */
ClearingDetail.prototype['originalInformationInstallments'] = undefined;

/**
 * Indicates the specific installment plan types ... 21,22,23
 * @member {String} installmentPlanType
 */
ClearingDetail.prototype['installmentPlanType'] = undefined;

/**
 * Indicates a message's specific purpose
 * @member {String} functionCode
 */
ClearingDetail.prototype['functionCode'] = undefined;

/**
 * Identifies the product recognized by GCMS for the combination of issuer account range and Card Program Identifier
 * @member {String} gcmsProductIndentifier
 */
ClearingDetail.prototype['gcmsProductIndentifier'] = undefined;

/**
 * Contains the type of financing applicable for the installment
 * @member {String} installmentPaymentData
 */
ClearingDetail.prototype['installmentPaymentData'] = undefined;

/**
 * Contains the annual percentage rate (XXX.XX%) an issuer will charge the cardholder for the installment payments. For installmentpayments, the default is all spaces
 * @member {String} installmentPaymentDataAnnualPercentageRate
 */
ClearingDetail.prototype['installmentPaymentDataAnnualPercentageRate'] = undefined;

/**
 * Identifies the amount of the first installment payment
 * @member {String} installmentPaymentDataFirstInstallmentAmount
 */
ClearingDetail.prototype['installmentPaymentDataFirstInstallmentAmount'] = undefined;

/**
 * Contains the fee amount an issuer will charge the cardholder for the installment payments in cardholder billing currency. The default is all spaces.
 * @member {String} installmentPaymentDataInstallmentFee
 */
ClearingDetail.prototype['installmentPaymentDataInstallmentFee'] = undefined;

/**
 * Identifies the interest rate of intallment payments
 * @member {String} installmentPaymentDataInterestRate
 */
ClearingDetail.prototype['installmentPaymentDataInterestRate'] = undefined;

/**
 * Identifies the number of installment payments
 * @member {String} installmentPaymentDataNumberInstallments
 */
ClearingDetail.prototype['installmentPaymentDataNumberInstallments'] = undefined;

/**
 * Contains the fee amount an issuer will charge the cardholder for the installment payments in cardholder billing currency. The default is all spaces.
 * @member {String} installmentPaymentDataSubsequentInstallmentAmount
 */
ClearingDetail.prototype['installmentPaymentDataSubsequentInstallmentAmount'] = undefined;

/**
 * Contains data related to ICC systems
 * @member {String} integratedCircuitCardRelatedData
 */
ClearingDetail.prototype['integratedCircuitCardRelatedData'] = undefined;

/**
 * Indicates the interchange rate and editing rules applied to the transaction
 * @member {String} interchangeRateDesignator
 */
ClearingDetail.prototype['interchangeRateDesignator'] = undefined;

/**
 * Identifies the actual product code assigned by Mastercard when licensing the combination of issuer account range and Card Program Identifier
 * @member {String} licensedProductIndentifier
 */
ClearingDetail.prototype['licensedProductIndentifier'] = undefined;

/**
 * Provides the card acceptor's legal corporation name
 * @member {String} legalCorporateName
 */
ClearingDetail.prototype['legalCorporateName'] = undefined;

/**
 * Indicate a particular chargeback domestic reason code(only for Chargebacks)
 * @member {String} localMessageReasonCode
 */
ClearingDetail.prototype['localMessageReasonCode'] = undefined;

/**
 * Contains the VAT amount for the installment fee. Numeric value where the last 2 are decimal.
 * @member {String} localTax1IVA
 */
ClearingDetail.prototype['localTax1IVA'] = undefined;

/**
 * The local year, month, day, and time at which the transaction takes place at the card acceptor location.The seconds in time will always be set to 00
 * @member {String} localTransactionDateTime
 */
ClearingDetail.prototype['localTransactionDateTime'] = undefined;

/**
 * Identifier assigned by Mastercard
 * @member {String} mastercardAssignedId
 */
ClearingDetail.prototype['mastercardAssignedId'] = undefined;

/**
 * Indicates whether override rates were used in the interchange fee amount
 * @member {String} mastercardAssignedIdOverrideIndicator
 */
ClearingDetail.prototype['mastercardAssignedIdOverrideIndicator'] = undefined;

/**
 * Provides either the virtual account number/token or the primary account number in a transaction for which Mastercard performed the mapping service
 * @member {String} mastercardMappingServiceAccountNumber
 */
ClearingDetail.prototype['mastercardMappingServiceAccountNumber'] = undefined;

/**
 * Populated by GCMS and identifies the transaction as having received the Masterpass-Enabled Merchant Incentive
 * @member {String} masterPassIncentiveIndicator
 */
ClearingDetail.prototype['masterPassIncentiveIndicator'] = undefined;

/**
 * Contains the initial transaction's Message Reason Code
 * @member {String} messageReasonCode
 */
ClearingDetail.prototype['messageReasonCode'] = undefined;

/**
 * Identifies a message as a reversal of a previous message
 * @member {String} messageReversalIndicator
 */
ClearingDetail.prototype['messageReversalIndicator'] = undefined;

/**
 * Total number of installments to be submitted
 * @member {String} numberOfInstallments
 */
ClearingDetail.prototype['numberOfInstallments'] = undefined;

/**
 * Provides the message format in which the clearing system received a message
 * @member {String} originatingMessageFormat
 */
ClearingDetail.prototype['originatingMessageFormat'] = undefined;

/**
 * Identifies a specific partnership agreement, generally between specific card acceptors and issuers.
 * @member {String} partnerIdCode
 */
ClearingDetail.prototype['partnerIdCode'] = undefined;

/**
 * Indicates the maximum number of PIN characters that the POS terminal can capture
 * @member {String} pinCaptureCapability
 */
ClearingDetail.prototype['pinCaptureCapability'] = undefined;

/**
 * Account number associated with transaction in question 
 * @member {String} primaryAccountNumber
 */
ClearingDetail.prototype['primaryAccountNumber'] = undefined;

/**
 * Identifies the entity to be debited and the entity to be credited for the fee amount
 * @member {String} processingCode
 */
ClearingDetail.prototype['processingCode'] = undefined;

/**
 * Product Class value to indicate whether product class override interchange rates were used in the interchange fee amount
 * @member {String} productOverrideIndicator
 */
ClearingDetail.prototype['productOverrideIndicator'] = undefined;

/**
 * Monitors and tracks a participant's activity in special promotion programs (primarily U.S.-defined).
 * @member {String} programRegistrationId
 */
ClearingDetail.prototype['programRegistrationId'] = undefined;

/**
 * Indicates whether or not the Quick Payment Service (QPS) or PayPass transaction qualifies for chargeback protection
 * @member {String} qpsPaypassEligibilityIndicator
 */
ClearingDetail.prototype['qpsPaypassEligibilityIndicator'] = undefined;

/**
 * Indicates the rate applied by GCMS to the transaction
 * @member {String} rateIndicator
 */
ClearingDetail.prototype['rateIndicator'] = undefined;

/**
 * Identifies the receiving institution
 * @member {String} receivingInstitutionIdCode
 */
ClearingDetail.prototype['receivingInstitutionIdCode'] = undefined;

/**
 * The transaction amount value converted to the customer's reconciliation (that is, the customer's payment or settlement) currency
 * @member {String} reconciliationAmount
 */
ClearingDetail.prototype['reconciliationAmount'] = undefined;

/**
 * Identifies the currency code of the reconciliation amount
 * @member {String} reconciliationCurrencyCode
 */
ClearingDetail.prototype['reconciliationCurrencyCode'] = undefined;

/**
 * Identifies the domain in which the Service Manager (program originator) of the Mobile Remote Payments Program is operating
 * @member {String} remotePaymentsProgramData
 */
ClearingDetail.prototype['remotePaymentsProgramData'] = undefined;

/**
 * Provides codes that increase issuers' flexibility in defining card acceptance parameters.
 * @member {String} serviceCode
 */
ClearingDetail.prototype['serviceCode'] = undefined;

/**
 * Provides reconciliation and settlement information for each clearing system transaction that has settlement impact
 * @member {String} settlementData
 */
ClearingDetail.prototype['settlementData'] = undefined;

/**
 * Indicates the settlement impact of amounts in an IPM message
 * @member {String} settlementIndicator
 */
ClearingDetail.prototype['settlementIndicator'] = undefined;

/**
 * Indicates whether an adjustment was included in the Fee amount
 * @member {String} specialConditionsIndicator
 */
ClearingDetail.prototype['specialConditionsIndicator'] = undefined;

/**
 * Indicates the print and display capabilities of the terminal
 * @member {String} terminalDataOutputCapability
 */
ClearingDetail.prototype['terminalDataOutputCapability'] = undefined;

/**
 * Indicates whether the card acceptor is attending the terminal and the location of the terminal
 * @member {String} terminalOperatingEnvironment
 */
ClearingDetail.prototype['terminalOperatingEnvironment'] = undefined;

/**
 * Identifies the type of terminal used at the point of interaction
 * @member {String} terminalType
 */
ClearingDetail.prototype['terminalType'] = undefined;

/**
 * Contains the ID assigned by the token service provider to the token requestor
 * @member {String} tokenRequestorId
 */
ClearingDetail.prototype['tokenRequestorId'] = undefined;

/**
 * Contains total transaction amount
 * @member {String} totalTransactionAmount
 */
ClearingDetail.prototype['totalTransactionAmount'] = undefined;

/**
 * Transaction amount in local currency
 * @member {String} transactionAmountLocal
 */
ClearingDetail.prototype['transactionAmountLocal'] = undefined;

/**
 * Provides information about the transaction that cannot be determined from other transaction information, such as Primary Account Number or Point of Service Data Code
 * @member {String} transactionCategoryIndicator
 */
ClearingDetail.prototype['transactionCategoryIndicator'] = undefined;

/**
 * Defines the currency code of the transaction
 * @member {String} transactionCurrencyCode
 */
ClearingDetail.prototype['transactionCurrencyCode'] = undefined;

/**
 * Identifies the transaction destination institution
 * @member {String} transactionDestinationInstitutionIdCode
 */
ClearingDetail.prototype['transactionDestinationInstitutionIdCode'] = undefined;

/**
 * Contains all life cycle messages such as Authorizations, Financials, Reversals, Retrievals, Fulfillments and Chargebacks
 * @member {String} transactionLifeCycleId
 */
ClearingDetail.prototype['transactionLifeCycleId'] = undefined;

/**
 * Identifies the transaction originator institution
 * @member {String} transactionOriginatorInstitutionIdCode
 */
ClearingDetail.prototype['transactionOriginatorInstitutionIdCode'] = undefined;

/**
 * Describes the specific cardholder transaction type
 * @member {String} transactionType
 */
ClearingDetail.prototype['transactionType'] = undefined;

/**
 * Provides data related to the transit transaction type and the transaction mode
 * @member {String} transitProgramCode
 */
ClearingDetail.prototype['transitProgramCode'] = undefined;

/**
 * Provides information about transactions initiated through the use of a digital wallet
 * @member {String} walletIdentifierMdes
 */
ClearingDetail.prototype['walletIdentifierMdes'] = undefined;

/**
 * DE 111 (Amount, Currency Conversion Assessment) is the amount based on the result of applying the multi-currency conversion rate (Currency Conversion Assessment) adjustment toÂ the currency conversion rate used to convert DE 4 (Amount, Transaction) to DE 6 (Amount, Cardholder Billing) for qualified transactions
 * @member {String} currencyConversionAssessmentAmount
 */
ClearingDetail.prototype['currencyConversionAssessmentAmount'] = undefined;

/**
 * Identifies the merchant's category in Japan referred to as the Common Merchant Category Code (CMC). Mastercard uses this value to identify a link to a corresponding Mastercard Assigned ID.
 * @member {String} japanCommonMerchantCode
 */
ClearingDetail.prototype['japanCommonMerchantCode'] = undefined;

/**
 * Provides information about the installment payment option selected by the cardholder at the point of interaction.
 * @member {String} installmentData
 */
ClearingDetail.prototype['installmentData'] = undefined;

/**
 * Specific to Brazil Flex Card transactions to communicate the product code used for clearing.
 * @member {String} flexCode
 */
ClearingDetail.prototype['flexCode'] = undefined;






export default ClearingDetail;

