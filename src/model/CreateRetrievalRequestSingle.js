/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateRetrievalRequestSingle model module.
 * @module model/CreateRetrievalRequestSingle
 * @version v6
 */
class CreateRetrievalRequestSingle {
    /**
     * Constructs a new <code>CreateRetrievalRequestSingle</code>.
     * @alias module:model/CreateRetrievalRequestSingle
     * @param documentType {module:model/CreateRetrievalRequestSingle.DocumentTypeEnum} The document type field indicates what type of documentation is sent supporting the retrieval.   Length: 1   Valid Values/Format: 2, 4
     * @param replacementAmount {String} Replacement Amount.  The replacement amount should reflect the final amount of the transaction value that should remain applied to the cardholder balance.   Length: 4-12   Valid Values/Format: Numeric
     * @param reversalReasonCode {String} MDS dispute reason code for healthcare toÂ createÂ the dispute item.   NOTE:Â Creation of retrieval request is allowed only for reversalReasonCode (healthcare reason code (43)) starting on October 24th, 2021.   Length: 2   Valid Values/Format: 43  
     * @param usageCode {module:model/CreateRetrievalRequestSingle.UsageCodeEnum} The usage code indicates the type of retrieval request record processed.   Length: 1   Valid Values/Format: 1, 2, 3, 6, 7
     */
    constructor(documentType, replacementAmount, reversalReasonCode, usageCode) { 
        
        CreateRetrievalRequestSingle.initialize(this, documentType, replacementAmount, reversalReasonCode, usageCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, documentType, replacementAmount, reversalReasonCode, usageCode) { 
        obj['documentType'] = documentType;
        obj['replacementAmount'] = replacementAmount;
        obj['reversalReasonCode'] = reversalReasonCode;
        obj['usageCode'] = usageCode;
    }

    /**
     * Constructs a <code>CreateRetrievalRequestSingle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateRetrievalRequestSingle} obj Optional instance to populate.
     * @return {module:model/CreateRetrievalRequestSingle} The populated <code>CreateRetrievalRequestSingle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateRetrievalRequestSingle();

            if (data.hasOwnProperty('documentType')) {
                obj['documentType'] = ApiClient.convertToType(data['documentType'], 'String');
            }
            if (data.hasOwnProperty('replacementAmount')) {
                obj['replacementAmount'] = ApiClient.convertToType(data['replacementAmount'], 'String');
            }
            if (data.hasOwnProperty('reversalReasonCode')) {
                obj['reversalReasonCode'] = ApiClient.convertToType(data['reversalReasonCode'], 'String');
            }
            if (data.hasOwnProperty('usageCode')) {
                obj['usageCode'] = ApiClient.convertToType(data['usageCode'], 'String');
            }
            if (data.hasOwnProperty('additionalInformation')) {
                obj['additionalInformation'] = ApiClient.convertToType(data['additionalInformation'], 'String');
            }
            if (data.hasOwnProperty('controlNumber')) {
                obj['controlNumber'] = ApiClient.convertToType(data['controlNumber'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateRetrievalRequestSingle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateRetrievalRequestSingle</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateRetrievalRequestSingle.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['documentType'] && !(typeof data['documentType'] === 'string' || data['documentType'] instanceof String)) {
            throw new Error("Expected the field `documentType` to be a primitive type in the JSON string but got " + data['documentType']);
        }
        // ensure the json data is a string
        if (data['replacementAmount'] && !(typeof data['replacementAmount'] === 'string' || data['replacementAmount'] instanceof String)) {
            throw new Error("Expected the field `replacementAmount` to be a primitive type in the JSON string but got " + data['replacementAmount']);
        }
        // ensure the json data is a string
        if (data['reversalReasonCode'] && !(typeof data['reversalReasonCode'] === 'string' || data['reversalReasonCode'] instanceof String)) {
            throw new Error("Expected the field `reversalReasonCode` to be a primitive type in the JSON string but got " + data['reversalReasonCode']);
        }
        // ensure the json data is a string
        if (data['usageCode'] && !(typeof data['usageCode'] === 'string' || data['usageCode'] instanceof String)) {
            throw new Error("Expected the field `usageCode` to be a primitive type in the JSON string but got " + data['usageCode']);
        }
        // ensure the json data is a string
        if (data['additionalInformation'] && !(typeof data['additionalInformation'] === 'string' || data['additionalInformation'] instanceof String)) {
            throw new Error("Expected the field `additionalInformation` to be a primitive type in the JSON string but got " + data['additionalInformation']);
        }
        // ensure the json data is a string
        if (data['controlNumber'] && !(typeof data['controlNumber'] === 'string' || data['controlNumber'] instanceof String)) {
            throw new Error("Expected the field `controlNumber` to be a primitive type in the JSON string but got " + data['controlNumber']);
        }

        return true;
    }


}

CreateRetrievalRequestSingle.RequiredProperties = ["documentType", "replacementAmount", "reversalReasonCode", "usageCode"];

/**
 * The document type field indicates what type of documentation is sent supporting the retrieval.   Length: 1   Valid Values/Format: 2, 4
 * @member {module:model/CreateRetrievalRequestSingle.DocumentTypeEnum} documentType
 */
CreateRetrievalRequestSingle.prototype['documentType'] = undefined;

/**
 * Replacement Amount.  The replacement amount should reflect the final amount of the transaction value that should remain applied to the cardholder balance.   Length: 4-12   Valid Values/Format: Numeric
 * @member {String} replacementAmount
 */
CreateRetrievalRequestSingle.prototype['replacementAmount'] = undefined;

/**
 * MDS dispute reason code for healthcare toÂ createÂ the dispute item.   NOTE:Â Creation of retrieval request is allowed only for reversalReasonCode (healthcare reason code (43)) starting on October 24th, 2021.   Length: 2   Valid Values/Format: 43  
 * @member {String} reversalReasonCode
 */
CreateRetrievalRequestSingle.prototype['reversalReasonCode'] = undefined;

/**
 * The usage code indicates the type of retrieval request record processed.   Length: 1   Valid Values/Format: 1, 2, 3, 6, 7
 * @member {module:model/CreateRetrievalRequestSingle.UsageCodeEnum} usageCode
 */
CreateRetrievalRequestSingle.prototype['usageCode'] = undefined;

/**
 * Any additional information or note may be entered in this field.   Length: 1-38   Valid Values/Format: Alphanumeric, Special Char (~!@#$%^&*()_+{}|:\"<>?,./;'[]-=)
 * @member {String} additionalInformation
 */
CreateRetrievalRequestSingle.prototype['additionalInformation'] = undefined;

/**
 * Control Number.  Used to identify the specific transaction for internal auditing and tracing purposes.   Length: 1-5   Valid Values/Format: Numeric
 * @member {String} controlNumber
 */
CreateRetrievalRequestSingle.prototype['controlNumber'] = undefined;





/**
 * Allowed values for the <code>documentType</code> property.
 * @enum {String}
 * @readonly
 */
CreateRetrievalRequestSingle['DocumentTypeEnum'] = {

    /**
     * value: "2"
     * @const
     */
    "2": "2",

    /**
     * value: "4"
     * @const
     */
    "4": "4"
};


/**
 * Allowed values for the <code>usageCode</code> property.
 * @enum {String}
 * @readonly
 */
CreateRetrievalRequestSingle['UsageCodeEnum'] = {

    /**
     * value: "1"
     * @const
     */
    "1": "1",

    /**
     * value: "2"
     * @const
     */
    "2": "2",

    /**
     * value: "3"
     * @const
     */
    "3": "3",

    /**
     * value: "6"
     * @const
     */
    "6": "6",

    /**
     * value: "7"
     * @const
     */
    "7": "7"
};



export default CreateRetrievalRequestSingle;

