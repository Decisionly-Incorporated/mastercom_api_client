/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CaseFilingRespHistory model module.
 * @module model/CaseFilingRespHistory
 * @version v6
 */
class CaseFilingRespHistory {
    /**
     * Constructs a new <code>CaseFilingRespHistory</code>.
     * @alias module:model/CaseFilingRespHistory
     */
    constructor() { 
        
        CaseFilingRespHistory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CaseFilingRespHistory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CaseFilingRespHistory} obj Optional instance to populate.
     * @return {module:model/CaseFilingRespHistory} The populated <code>CaseFilingRespHistory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CaseFilingRespHistory();

            if (data.hasOwnProperty('memo')) {
                obj['memo'] = ApiClient.convertToType(data['memo'], 'String');
            }
            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('responseDate')) {
                obj['responseDate'] = ApiClient.convertToType(data['responseDate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CaseFilingRespHistory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CaseFilingRespHistory</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['memo'] && !(typeof data['memo'] === 'string' || data['memo'] instanceof String)) {
            throw new Error("Expected the field `memo` to be a primitive type in the JSON string but got " + data['memo']);
        }
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is a string
        if (data['responseDate'] && !(typeof data['responseDate'] === 'string' || data['responseDate'] instanceof String)) {
            throw new Error("Expected the field `responseDate` to be a primitive type in the JSON string but got " + data['responseDate']);
        }

        return true;
    }


}



/**
 * Memo pertaining to the case
 * @member {String} memo
 */
CaseFilingRespHistory.prototype['memo'] = undefined;

/**
 * Action taken by party.   Valid Values/Format: ACCEPT, REJECT, REBUT, ESCALATE, WITHDRAW, FAVORSENDER, FAVORRECEIVER, DECLINED, MODIFYCASE, CREATECASE, EXPIRED
 * @member {String} action
 */
CaseFilingRespHistory.prototype['action'] = undefined;

/**
 * The date and the response was provided
 * @member {String} responseDate
 */
CaseFilingRespHistory.prototype['responseDate'] = undefined;






export default CaseFilingRespHistory;

