/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CardholderDisputeChargebackDrfDocumentStructure from './CardholderDisputeChargebackDrfDocumentStructure';
import FraudDrfDocumentStructure from './FraudDrfDocumentStructure';
import PointOfInteractionErrorsDrfDocumentStructure from './PointOfInteractionErrorsDrfDocumentStructure';
import TransactionInformationEbdfStructure from './TransactionInformationEbdfStructure';

/**
 * The ChargebackEbdfStructure model module.
 * @module model/ChargebackEbdfStructure
 * @version v6
 */
class ChargebackEbdfStructure {
    /**
     * Constructs a new <code>ChargebackEbdfStructure</code>.
     * NOTE: When chargebackEbdfDocuments is used for automatic EBDF document generation for transactionInformation (or) fraudDrfDocument (or) cardholderDisputeChargebackDrfDocument (or) pointOfInteractionErrorsDrfDocument, no other documents should be attached on the call and documentIndicator must be set to true. Attaching documents or setting documentIndicator to false will lead to call failure.
     * @alias module:model/ChargebackEbdfStructure
     */
    constructor() { 
        
        ChargebackEbdfStructure.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChargebackEbdfStructure</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChargebackEbdfStructure} obj Optional instance to populate.
     * @return {module:model/ChargebackEbdfStructure} The populated <code>ChargebackEbdfStructure</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChargebackEbdfStructure();

            if (data.hasOwnProperty('transactionInformation')) {
                obj['transactionInformation'] = TransactionInformationEbdfStructure.constructFromObject(data['transactionInformation']);
            }
            if (data.hasOwnProperty('fraudDrfDocument')) {
                obj['fraudDrfDocument'] = FraudDrfDocumentStructure.constructFromObject(data['fraudDrfDocument']);
            }
            if (data.hasOwnProperty('cardholderDisputeChargebackDrfDocument')) {
                obj['cardholderDisputeChargebackDrfDocument'] = CardholderDisputeChargebackDrfDocumentStructure.constructFromObject(data['cardholderDisputeChargebackDrfDocument']);
            }
            if (data.hasOwnProperty('pointOfInteractionErrorsDrfDocument')) {
                obj['pointOfInteractionErrorsDrfDocument'] = PointOfInteractionErrorsDrfDocumentStructure.constructFromObject(data['pointOfInteractionErrorsDrfDocument']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChargebackEbdfStructure</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChargebackEbdfStructure</code>.
     */
    static validateJSON(data) {
        // validate the optional field `transactionInformation`
        if (data['transactionInformation']) { // data not null
          TransactionInformationEbdfStructure.validateJSON(data['transactionInformation']);
        }
        // validate the optional field `fraudDrfDocument`
        if (data['fraudDrfDocument']) { // data not null
          FraudDrfDocumentStructure.validateJSON(data['fraudDrfDocument']);
        }
        // validate the optional field `cardholderDisputeChargebackDrfDocument`
        if (data['cardholderDisputeChargebackDrfDocument']) { // data not null
          CardholderDisputeChargebackDrfDocumentStructure.validateJSON(data['cardholderDisputeChargebackDrfDocument']);
        }
        // validate the optional field `pointOfInteractionErrorsDrfDocument`
        if (data['pointOfInteractionErrorsDrfDocument']) { // data not null
          PointOfInteractionErrorsDrfDocumentStructure.validateJSON(data['pointOfInteractionErrorsDrfDocument']);
        }

        return true;
    }


}



/**
 * @member {module:model/TransactionInformationEbdfStructure} transactionInformation
 */
ChargebackEbdfStructure.prototype['transactionInformation'] = undefined;

/**
 * @member {module:model/FraudDrfDocumentStructure} fraudDrfDocument
 */
ChargebackEbdfStructure.prototype['fraudDrfDocument'] = undefined;

/**
 * @member {module:model/CardholderDisputeChargebackDrfDocumentStructure} cardholderDisputeChargebackDrfDocument
 */
ChargebackEbdfStructure.prototype['cardholderDisputeChargebackDrfDocument'] = undefined;

/**
 * @member {module:model/PointOfInteractionErrorsDrfDocumentStructure} pointOfInteractionErrorsDrfDocument
 */
ChargebackEbdfStructure.prototype['pointOfInteractionErrorsDrfDocument'] = undefined;






export default ChargebackEbdfStructure;

