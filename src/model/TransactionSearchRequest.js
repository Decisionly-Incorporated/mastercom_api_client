/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TransactionSearchRequest model module.
 * @module model/TransactionSearchRequest
 * @version v6
 */
class TransactionSearchRequest {
    /**
     * Constructs a new <code>TransactionSearchRequest</code>.
     * @alias module:model/TransactionSearchRequest
     * @param tranStartDate {String} Transaction Date min search range.  The search range is a maximum of 30 days, and searches can be completed for up to 730 days of history.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)
     * @param tranEndDate {String} Transaction Date max search range.  The search range is a maximum of 30 days, and searches can be completed for up to 730 days of history.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)
     */
    constructor(tranStartDate, tranEndDate) { 
        
        TransactionSearchRequest.initialize(this, tranStartDate, tranEndDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, tranStartDate, tranEndDate) { 
        obj['tranStartDate'] = tranStartDate;
        obj['tranEndDate'] = tranEndDate;
    }

    /**
     * Constructs a <code>TransactionSearchRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionSearchRequest} obj Optional instance to populate.
     * @return {module:model/TransactionSearchRequest} The populated <code>TransactionSearchRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionSearchRequest();

            if (data.hasOwnProperty('acquirerRefNumber')) {
                obj['acquirerRefNumber'] = ApiClient.convertToType(data['acquirerRefNumber'], 'String');
            }
            if (data.hasOwnProperty('bankNetRefNumber')) {
                obj['bankNetRefNumber'] = ApiClient.convertToType(data['bankNetRefNumber'], 'String');
            }
            if (data.hasOwnProperty('primaryAccountNum')) {
                obj['primaryAccountNum'] = ApiClient.convertToType(data['primaryAccountNum'], 'String');
            }
            if (data.hasOwnProperty('transAmountFrom')) {
                obj['transAmountFrom'] = ApiClient.convertToType(data['transAmountFrom'], 'String');
            }
            if (data.hasOwnProperty('transAmountTo')) {
                obj['transAmountTo'] = ApiClient.convertToType(data['transAmountTo'], 'String');
            }
            if (data.hasOwnProperty('tranStartDate')) {
                obj['tranStartDate'] = ApiClient.convertToType(data['tranStartDate'], 'String');
            }
            if (data.hasOwnProperty('tranEndDate')) {
                obj['tranEndDate'] = ApiClient.convertToType(data['tranEndDate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransactionSearchRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransactionSearchRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransactionSearchRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['acquirerRefNumber'] && !(typeof data['acquirerRefNumber'] === 'string' || data['acquirerRefNumber'] instanceof String)) {
            throw new Error("Expected the field `acquirerRefNumber` to be a primitive type in the JSON string but got " + data['acquirerRefNumber']);
        }
        // ensure the json data is a string
        if (data['bankNetRefNumber'] && !(typeof data['bankNetRefNumber'] === 'string' || data['bankNetRefNumber'] instanceof String)) {
            throw new Error("Expected the field `bankNetRefNumber` to be a primitive type in the JSON string but got " + data['bankNetRefNumber']);
        }
        // ensure the json data is a string
        if (data['primaryAccountNum'] && !(typeof data['primaryAccountNum'] === 'string' || data['primaryAccountNum'] instanceof String)) {
            throw new Error("Expected the field `primaryAccountNum` to be a primitive type in the JSON string but got " + data['primaryAccountNum']);
        }
        // ensure the json data is a string
        if (data['transAmountFrom'] && !(typeof data['transAmountFrom'] === 'string' || data['transAmountFrom'] instanceof String)) {
            throw new Error("Expected the field `transAmountFrom` to be a primitive type in the JSON string but got " + data['transAmountFrom']);
        }
        // ensure the json data is a string
        if (data['transAmountTo'] && !(typeof data['transAmountTo'] === 'string' || data['transAmountTo'] instanceof String)) {
            throw new Error("Expected the field `transAmountTo` to be a primitive type in the JSON string but got " + data['transAmountTo']);
        }
        // ensure the json data is a string
        if (data['tranStartDate'] && !(typeof data['tranStartDate'] === 'string' || data['tranStartDate'] instanceof String)) {
            throw new Error("Expected the field `tranStartDate` to be a primitive type in the JSON string but got " + data['tranStartDate']);
        }
        // ensure the json data is a string
        if (data['tranEndDate'] && !(typeof data['tranEndDate'] === 'string' || data['tranEndDate'] instanceof String)) {
            throw new Error("Expected the field `tranEndDate` to be a primitive type in the JSON string but got " + data['tranEndDate']);
        }

        return true;
    }


}

TransactionSearchRequest.RequiredProperties = ["tranStartDate", "tranEndDate"];

/**
 * CONDITIONAL: Acquirer Reference Number. If provided bankNetRefNumber may not be used. This field is required and applicable if primaryAccountNum is not provided.   Length: 23   Valid Values/Format: Numeric
 * @member {String} acquirerRefNumber
 */
TransactionSearchRequest.prototype['acquirerRefNumber'] = undefined;

/**
 * CONDITIONAL: This field is comprised of the Financial Network Code + Banknet Reference Number. If provided, must provide PAN in primaryAccountNum parameter. If provided, cannot use acquirerRefNumber parameter.  Length: 9  Valid Values/Format: Alphanumeric
 * @member {String} bankNetRefNumber
 */
TransactionSearchRequest.prototype['bankNetRefNumber'] = undefined;

/**
 * CONDITIONAL: Primary Account Number. This field is required and applicable if acquirerRefNum is not provided.   Length: 11-19   Valid Values/Format: Numeric
 * @member {String} primaryAccountNum
 */
TransactionSearchRequest.prototype['primaryAccountNum'] = undefined;

/**
 * Transaction amount lower limit value to be searched.   Length: 0-12   Valid Values/Format: Numeric
 * @member {String} transAmountFrom
 */
TransactionSearchRequest.prototype['transAmountFrom'] = undefined;

/**
 * Transaction amount upper limit value to be searched.   Length: 0-12   Valid Values/Format: Numeric
 * @member {String} transAmountTo
 */
TransactionSearchRequest.prototype['transAmountTo'] = undefined;

/**
 * Transaction Date min search range.  The search range is a maximum of 30 days, and searches can be completed for up to 730 days of history.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)
 * @member {String} tranStartDate
 */
TransactionSearchRequest.prototype['tranStartDate'] = undefined;

/**
 * Transaction Date max search range.  The search range is a maximum of 30 days, and searches can be completed for up to 730 days of history.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)
 * @member {String} tranEndDate
 */
TransactionSearchRequest.prototype['tranEndDate'] = undefined;






export default TransactionSearchRequest;

