/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TransactionInformationEbdfStructure model module.
 * @module model/TransactionInformationEbdfStructure
 * @version v6
 */
class TransactionInformationEbdfStructure {
    /**
     * Constructs a new <code>TransactionInformationEbdfStructure</code>.
     * @alias module:model/TransactionInformationEbdfStructure
     */
    constructor() { 
        
        TransactionInformationEbdfStructure.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TransactionInformationEbdfStructure</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionInformationEbdfStructure} obj Optional instance to populate.
     * @return {module:model/TransactionInformationEbdfStructure} The populated <code>TransactionInformationEbdfStructure</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionInformationEbdfStructure();

            if (data.hasOwnProperty('acquirerRefDataOrSwitchSerialNum')) {
                obj['acquirerRefDataOrSwitchSerialNum'] = ApiClient.convertToType(data['acquirerRefDataOrSwitchSerialNum'], 'String');
            }
            if (data.hasOwnProperty('merchantName')) {
                obj['merchantName'] = ApiClient.convertToType(data['merchantName'], 'String');
            }
            if (data.hasOwnProperty('transactionOrSettlementDate')) {
                obj['transactionOrSettlementDate'] = ApiClient.convertToType(data['transactionOrSettlementDate'], 'String');
            }
            if (data.hasOwnProperty('disputedAmount')) {
                obj['disputedAmount'] = ApiClient.convertToType(data['disputedAmount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransactionInformationEbdfStructure</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransactionInformationEbdfStructure</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['acquirerRefDataOrSwitchSerialNum'] && !(typeof data['acquirerRefDataOrSwitchSerialNum'] === 'string' || data['acquirerRefDataOrSwitchSerialNum'] instanceof String)) {
            throw new Error("Expected the field `acquirerRefDataOrSwitchSerialNum` to be a primitive type in the JSON string but got " + data['acquirerRefDataOrSwitchSerialNum']);
        }
        // ensure the json data is a string
        if (data['merchantName'] && !(typeof data['merchantName'] === 'string' || data['merchantName'] instanceof String)) {
            throw new Error("Expected the field `merchantName` to be a primitive type in the JSON string but got " + data['merchantName']);
        }
        // ensure the json data is a string
        if (data['transactionOrSettlementDate'] && !(typeof data['transactionOrSettlementDate'] === 'string' || data['transactionOrSettlementDate'] instanceof String)) {
            throw new Error("Expected the field `transactionOrSettlementDate` to be a primitive type in the JSON string but got " + data['transactionOrSettlementDate']);
        }
        // ensure the json data is a string
        if (data['disputedAmount'] && !(typeof data['disputedAmount'] === 'string' || data['disputedAmount'] instanceof String)) {
            throw new Error("Expected the field `disputedAmount` to be a primitive type in the JSON string but got " + data['disputedAmount']);
        }

        return true;
    }


}



/**
 * Acquirers Reference Data or Switch Serial Number.   Length: 0-23   Valid Values/Format: Alphanumeric / Special Char (~!@#$%^&*()_+{}|:\"<>?,./;'[]-=)
 * @member {String} acquirerRefDataOrSwitchSerialNum
 */
TransactionInformationEbdfStructure.prototype['acquirerRefDataOrSwitchSerialNum'] = undefined;

/**
 * The Merchant Name   Length: 0-22   Valid Values/Format: Alphanumeric / Special Char (~!@#$%^&*()_+{}|:\"<>?,./;'[]-=)
 * @member {String} merchantName
 */
TransactionInformationEbdfStructure.prototype['merchantName'] = undefined;

/**
 * Transaction or Settlement Date   Length: 11   Valid Values/Format: Date (dd-MMM-yyyy)
 * @member {String} transactionOrSettlementDate
 */
TransactionInformationEbdfStructure.prototype['transactionOrSettlementDate'] = undefined;

/**
 * The Disputed Amount.   Length: 0-12   Valid Values/Format: Numeric
 * @member {String} disputedAmount
 */
TransactionInformationEbdfStructure.prototype['disputedAmount'] = undefined;






export default TransactionInformationEbdfStructure;

