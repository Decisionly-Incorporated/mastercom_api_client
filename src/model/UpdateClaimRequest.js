/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateClaimRequest model module.
 * @module model/UpdateClaimRequest
 * @version v6
 */
class UpdateClaimRequest {
    /**
     * Constructs a new <code>UpdateClaimRequest</code>.
     * @alias module:model/UpdateClaimRequest
     * @param action {module:model/UpdateClaimRequest.ActionEnum} Action to perform on claim.   Length: 5-6   Valid Values/Format: REOPEN, CLOSE
     */
    constructor(action) { 
        
        UpdateClaimRequest.initialize(this, action);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action) { 
        obj['action'] = action;
    }

    /**
     * Constructs a <code>UpdateClaimRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateClaimRequest} obj Optional instance to populate.
     * @return {module:model/UpdateClaimRequest} The populated <code>UpdateClaimRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateClaimRequest();

            if (data.hasOwnProperty('openClaimDueDate')) {
                obj['openClaimDueDate'] = ApiClient.convertToType(data['openClaimDueDate'], 'String');
            }
            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('closeClaimReasonCode')) {
                obj['closeClaimReasonCode'] = ApiClient.convertToType(data['closeClaimReasonCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateClaimRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateClaimRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateClaimRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['openClaimDueDate'] && !(typeof data['openClaimDueDate'] === 'string' || data['openClaimDueDate'] instanceof String)) {
            throw new Error("Expected the field `openClaimDueDate` to be a primitive type in the JSON string but got " + data['openClaimDueDate']);
        }
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is a string
        if (data['closeClaimReasonCode'] && !(typeof data['closeClaimReasonCode'] === 'string' || data['closeClaimReasonCode'] instanceof String)) {
            throw new Error("Expected the field `closeClaimReasonCode` to be a primitive type in the JSON string but got " + data['closeClaimReasonCode']);
        }

        return true;
    }


}

UpdateClaimRequest.RequiredProperties = ["action"];

/**
 * The due date for opening the claim.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)
 * @member {String} openClaimDueDate
 */
UpdateClaimRequest.prototype['openClaimDueDate'] = undefined;

/**
 * Action to perform on claim.   Length: 5-6   Valid Values/Format: REOPEN, CLOSE
 * @member {module:model/UpdateClaimRequest.ActionEnum} action
 */
UpdateClaimRequest.prototype['action'] = undefined;

/**
 * Reason code for closing the claim.   Length: 2   Valid Values/Format: 10, 20, 30, 40
 * @member {module:model/UpdateClaimRequest.CloseClaimReasonCodeEnum} closeClaimReasonCode
 */
UpdateClaimRequest.prototype['closeClaimReasonCode'] = undefined;





/**
 * Allowed values for the <code>action</code> property.
 * @enum {String}
 * @readonly
 */
UpdateClaimRequest['ActionEnum'] = {

    /**
     * value: "REOPEN"
     * @const
     */
    "REOPEN": "REOPEN",

    /**
     * value: "CLOSE"
     * @const
     */
    "CLOSE": "CLOSE"
};


/**
 * Allowed values for the <code>closeClaimReasonCode</code> property.
 * @enum {String}
 * @readonly
 */
UpdateClaimRequest['CloseClaimReasonCodeEnum'] = {

    /**
     * value: "10"
     * @const
     */
    "10": "10",

    /**
     * value: "20"
     * @const
     */
    "20": "20",

    /**
     * value: "30"
     * @const
     */
    "30": "30",

    /**
     * value: "40"
     * @const
     */
    "40": "40"
};



export default UpdateClaimRequest;

