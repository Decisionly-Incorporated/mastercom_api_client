/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClaimSummary model module.
 * @module model/ClaimSummary
 * @version v6
 */
class ClaimSummary {
    /**
     * Constructs a new <code>ClaimSummary</code>.
     * @alias module:model/ClaimSummary
     */
    constructor() { 
        
        ClaimSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClaimSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClaimSummary} obj Optional instance to populate.
     * @return {module:model/ClaimSummary} The populated <code>ClaimSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClaimSummary();

            if (data.hasOwnProperty('acquirerId')) {
                obj['acquirerId'] = ApiClient.convertToType(data['acquirerId'], 'String');
            }
            if (data.hasOwnProperty('acquirerRefNum')) {
                obj['acquirerRefNum'] = ApiClient.convertToType(data['acquirerRefNum'], 'String');
            }
            if (data.hasOwnProperty('primaryAccountNum')) {
                obj['primaryAccountNum'] = ApiClient.convertToType(data['primaryAccountNum'], 'String');
            }
            if (data.hasOwnProperty('claimId')) {
                obj['claimId'] = ApiClient.convertToType(data['claimId'], 'String');
            }
            if (data.hasOwnProperty('claimType')) {
                obj['claimType'] = ApiClient.convertToType(data['claimType'], 'String');
            }
            if (data.hasOwnProperty('claimValue')) {
                obj['claimValue'] = ApiClient.convertToType(data['claimValue'], 'String');
            }
            if (data.hasOwnProperty('clearingDueDate')) {
                obj['clearingDueDate'] = ApiClient.convertToType(data['clearingDueDate'], 'String');
            }
            if (data.hasOwnProperty('clearingNetwork')) {
                obj['clearingNetwork'] = ApiClient.convertToType(data['clearingNetwork'], 'String');
            }
            if (data.hasOwnProperty('createDate')) {
                obj['createDate'] = ApiClient.convertToType(data['createDate'], 'String');
            }
            if (data.hasOwnProperty('dueDate')) {
                obj['dueDate'] = ApiClient.convertToType(data['dueDate'], 'String');
            }
            if (data.hasOwnProperty('transactionId')) {
                obj['transactionId'] = ApiClient.convertToType(data['transactionId'], 'String');
            }
            if (data.hasOwnProperty('isAccurate')) {
                obj['isAccurate'] = ApiClient.convertToType(data['isAccurate'], 'Boolean');
            }
            if (data.hasOwnProperty('isAcquirer')) {
                obj['isAcquirer'] = ApiClient.convertToType(data['isAcquirer'], 'Boolean');
            }
            if (data.hasOwnProperty('isIssuer')) {
                obj['isIssuer'] = ApiClient.convertToType(data['isIssuer'], 'Boolean');
            }
            if (data.hasOwnProperty('isOpen')) {
                obj['isOpen'] = ApiClient.convertToType(data['isOpen'], 'Boolean');
            }
            if (data.hasOwnProperty('issuerId')) {
                obj['issuerId'] = ApiClient.convertToType(data['issuerId'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedBy')) {
                obj['lastModifiedBy'] = ApiClient.convertToType(data['lastModifiedBy'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedDate')) {
                obj['lastModifiedDate'] = ApiClient.convertToType(data['lastModifiedDate'], 'String');
            }
            if (data.hasOwnProperty('merchantId')) {
                obj['merchantId'] = ApiClient.convertToType(data['merchantId'], 'String');
            }
            if (data.hasOwnProperty('progressState')) {
                obj['progressState'] = ApiClient.convertToType(data['progressState'], 'String');
            }
            if (data.hasOwnProperty('queueName')) {
                obj['queueName'] = ApiClient.convertToType(data['queueName'], 'String');
            }
            if (data.hasOwnProperty('creditVoucherStatus')) {
                obj['creditVoucherStatus'] = ApiClient.convertToType(data['creditVoucherStatus'], 'String');
            }
            if (data.hasOwnProperty('collaborationExpirationDateTime')) {
                obj['collaborationExpirationDateTime'] = ApiClient.convertToType(data['collaborationExpirationDateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClaimSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClaimSummary</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['acquirerId'] && !(typeof data['acquirerId'] === 'string' || data['acquirerId'] instanceof String)) {
            throw new Error("Expected the field `acquirerId` to be a primitive type in the JSON string but got " + data['acquirerId']);
        }
        // ensure the json data is a string
        if (data['acquirerRefNum'] && !(typeof data['acquirerRefNum'] === 'string' || data['acquirerRefNum'] instanceof String)) {
            throw new Error("Expected the field `acquirerRefNum` to be a primitive type in the JSON string but got " + data['acquirerRefNum']);
        }
        // ensure the json data is a string
        if (data['primaryAccountNum'] && !(typeof data['primaryAccountNum'] === 'string' || data['primaryAccountNum'] instanceof String)) {
            throw new Error("Expected the field `primaryAccountNum` to be a primitive type in the JSON string but got " + data['primaryAccountNum']);
        }
        // ensure the json data is a string
        if (data['claimId'] && !(typeof data['claimId'] === 'string' || data['claimId'] instanceof String)) {
            throw new Error("Expected the field `claimId` to be a primitive type in the JSON string but got " + data['claimId']);
        }
        // ensure the json data is a string
        if (data['claimType'] && !(typeof data['claimType'] === 'string' || data['claimType'] instanceof String)) {
            throw new Error("Expected the field `claimType` to be a primitive type in the JSON string but got " + data['claimType']);
        }
        // ensure the json data is a string
        if (data['claimValue'] && !(typeof data['claimValue'] === 'string' || data['claimValue'] instanceof String)) {
            throw new Error("Expected the field `claimValue` to be a primitive type in the JSON string but got " + data['claimValue']);
        }
        // ensure the json data is a string
        if (data['clearingDueDate'] && !(typeof data['clearingDueDate'] === 'string' || data['clearingDueDate'] instanceof String)) {
            throw new Error("Expected the field `clearingDueDate` to be a primitive type in the JSON string but got " + data['clearingDueDate']);
        }
        // ensure the json data is a string
        if (data['clearingNetwork'] && !(typeof data['clearingNetwork'] === 'string' || data['clearingNetwork'] instanceof String)) {
            throw new Error("Expected the field `clearingNetwork` to be a primitive type in the JSON string but got " + data['clearingNetwork']);
        }
        // ensure the json data is a string
        if (data['createDate'] && !(typeof data['createDate'] === 'string' || data['createDate'] instanceof String)) {
            throw new Error("Expected the field `createDate` to be a primitive type in the JSON string but got " + data['createDate']);
        }
        // ensure the json data is a string
        if (data['dueDate'] && !(typeof data['dueDate'] === 'string' || data['dueDate'] instanceof String)) {
            throw new Error("Expected the field `dueDate` to be a primitive type in the JSON string but got " + data['dueDate']);
        }
        // ensure the json data is a string
        if (data['transactionId'] && !(typeof data['transactionId'] === 'string' || data['transactionId'] instanceof String)) {
            throw new Error("Expected the field `transactionId` to be a primitive type in the JSON string but got " + data['transactionId']);
        }
        // ensure the json data is a string
        if (data['issuerId'] && !(typeof data['issuerId'] === 'string' || data['issuerId'] instanceof String)) {
            throw new Error("Expected the field `issuerId` to be a primitive type in the JSON string but got " + data['issuerId']);
        }
        // ensure the json data is a string
        if (data['lastModifiedBy'] && !(typeof data['lastModifiedBy'] === 'string' || data['lastModifiedBy'] instanceof String)) {
            throw new Error("Expected the field `lastModifiedBy` to be a primitive type in the JSON string but got " + data['lastModifiedBy']);
        }
        // ensure the json data is a string
        if (data['lastModifiedDate'] && !(typeof data['lastModifiedDate'] === 'string' || data['lastModifiedDate'] instanceof String)) {
            throw new Error("Expected the field `lastModifiedDate` to be a primitive type in the JSON string but got " + data['lastModifiedDate']);
        }
        // ensure the json data is a string
        if (data['merchantId'] && !(typeof data['merchantId'] === 'string' || data['merchantId'] instanceof String)) {
            throw new Error("Expected the field `merchantId` to be a primitive type in the JSON string but got " + data['merchantId']);
        }
        // ensure the json data is a string
        if (data['progressState'] && !(typeof data['progressState'] === 'string' || data['progressState'] instanceof String)) {
            throw new Error("Expected the field `progressState` to be a primitive type in the JSON string but got " + data['progressState']);
        }
        // ensure the json data is a string
        if (data['queueName'] && !(typeof data['queueName'] === 'string' || data['queueName'] instanceof String)) {
            throw new Error("Expected the field `queueName` to be a primitive type in the JSON string but got " + data['queueName']);
        }
        // ensure the json data is a string
        if (data['creditVoucherStatus'] && !(typeof data['creditVoucherStatus'] === 'string' || data['creditVoucherStatus'] instanceof String)) {
            throw new Error("Expected the field `creditVoucherStatus` to be a primitive type in the JSON string but got " + data['creditVoucherStatus']);
        }
        // ensure the json data is a string
        if (data['collaborationExpirationDateTime'] && !(typeof data['collaborationExpirationDateTime'] === 'string' || data['collaborationExpirationDateTime'] instanceof String)) {
            throw new Error("Expected the field `collaborationExpirationDateTime` to be a primitive type in the JSON string but got " + data['collaborationExpirationDateTime']);
        }

        return true;
    }


}



/**
 * Acquirer Inst Id
 * @member {String} acquirerId
 */
ClaimSummary.prototype['acquirerId'] = undefined;

/**
 * Acquirer Reference Number
 * @member {String} acquirerRefNum
 */
ClaimSummary.prototype['acquirerRefNum'] = undefined;

/**
 * Card Number for which the Claim is opened
 * @member {String} primaryAccountNum
 */
ClaimSummary.prototype['primaryAccountNum'] = undefined;

/**
 * Claim Id
 * @member {String} claimId
 */
ClaimSummary.prototype['claimId'] = undefined;

/**
 * Claim Type
 * @member {String} claimType
 */
ClaimSummary.prototype['claimType'] = undefined;

/**
 * The value of the claim
 * @member {String} claimValue
 */
ClaimSummary.prototype['claimValue'] = undefined;

/**
 * The clearing due date of the claim
 * @member {String} clearingDueDate
 */
ClaimSummary.prototype['clearingDueDate'] = undefined;

/**
 * Clearing Network
 * @member {String} clearingNetwork
 */
ClaimSummary.prototype['clearingNetwork'] = undefined;

/**
 * This is the date of the Claim creation
 * @member {String} createDate
 */
ClaimSummary.prototype['createDate'] = undefined;

/**
 * The due date of the claim
 * @member {String} dueDate
 */
ClaimSummary.prototype['dueDate'] = undefined;

/**
 * A 9 digit numeric identifier used by mastercom internal processes and it is not equivalent to clearing or authorization transaction id.
 * @member {String} transactionId
 */
ClaimSummary.prototype['transactionId'] = undefined;

/**
 * True if the claim value is accurate
 * @member {Boolean} isAccurate
 */
ClaimSummary.prototype['isAccurate'] = undefined;

/**
 * True if the claim is acquirer
 * @member {Boolean} isAcquirer
 */
ClaimSummary.prototype['isAcquirer'] = undefined;

/**
 * True if the claim is issuer
 * @member {Boolean} isIssuer
 */
ClaimSummary.prototype['isIssuer'] = undefined;

/**
 * True if the claim is open
 * @member {Boolean} isOpen
 */
ClaimSummary.prototype['isOpen'] = undefined;

/**
 * The issuer institution identifier
 * @member {String} issuerId
 */
ClaimSummary.prototype['issuerId'] = undefined;

/**
 * User who signed this event
 * @member {String} lastModifiedBy
 */
ClaimSummary.prototype['lastModifiedBy'] = undefined;

/**
 * The date of the last claim modification
 * @member {String} lastModifiedDate
 */
ClaimSummary.prototype['lastModifiedDate'] = undefined;

/**
 * Returns the related merchant identifier
 * @member {String} merchantId
 */
ClaimSummary.prototype['merchantId'] = undefined;

/**
 * The progress state of the claim
 * @member {String} progressState
 */
ClaimSummary.prototype['progressState'] = undefined;

/**
 * The queue name to which the claim has been allocated
 * @member {String} queueName
 */
ClaimSummary.prototype['queueName'] = undefined;

/**
 * The actual status of the credit voucher
 * @member {String} creditVoucherStatus
 */
ClaimSummary.prototype['creditVoucherStatus'] = undefined;

/**
 * Date and time by which the acquirer can respond to a Collaboration request.
 * @member {String} collaborationExpirationDateTime
 */
ClaimSummary.prototype['collaborationExpirationDateTime'] = undefined;






export default ClaimSummary;

