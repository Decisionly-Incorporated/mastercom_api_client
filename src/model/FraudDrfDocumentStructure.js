/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CardholderVerificationMethodStructure from './CardholderVerificationMethodStructure';

/**
 * The FraudDrfDocumentStructure model module.
 * @module model/FraudDrfDocumentStructure
 * @version v6
 */
class FraudDrfDocumentStructure {
    /**
     * Constructs a new <code>FraudDrfDocumentStructure</code>.
     * @alias module:model/FraudDrfDocumentStructure
     */
    constructor() { 
        
        FraudDrfDocumentStructure.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FraudDrfDocumentStructure</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FraudDrfDocumentStructure} obj Optional instance to populate.
     * @return {module:model/FraudDrfDocumentStructure} The populated <code>FraudDrfDocumentStructure</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FraudDrfDocumentStructure();

            if (data.hasOwnProperty('numberOfItems')) {
                obj['numberOfItems'] = ApiClient.convertToType(data['numberOfItems'], 'String');
            }
            if (data.hasOwnProperty('types')) {
                obj['types'] = ApiClient.convertToType(data['types'], 'String');
            }
            if (data.hasOwnProperty('additionalInformation')) {
                obj['additionalInformation'] = ApiClient.convertToType(data['additionalInformation'], 'String');
            }
            if (data.hasOwnProperty('chargebackRepresentative')) {
                obj['chargebackRepresentative'] = ApiClient.convertToType(data['chargebackRepresentative'], 'String');
            }
            if (data.hasOwnProperty('cardIssuerRegion')) {
                obj['cardIssuerRegion'] = ApiClient.convertToType(data['cardIssuerRegion'], 'String');
            }
            if (data.hasOwnProperty('cardholderVerificationMethod')) {
                obj['cardholderVerificationMethod'] = CardholderVerificationMethodStructure.constructFromObject(data['cardholderVerificationMethod']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FraudDrfDocumentStructure</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FraudDrfDocumentStructure</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['numberOfItems'] && !(typeof data['numberOfItems'] === 'string' || data['numberOfItems'] instanceof String)) {
            throw new Error("Expected the field `numberOfItems` to be a primitive type in the JSON string but got " + data['numberOfItems']);
        }
        // ensure the json data is a string
        if (data['types'] && !(typeof data['types'] === 'string' || data['types'] instanceof String)) {
            throw new Error("Expected the field `types` to be a primitive type in the JSON string but got " + data['types']);
        }
        // ensure the json data is a string
        if (data['additionalInformation'] && !(typeof data['additionalInformation'] === 'string' || data['additionalInformation'] instanceof String)) {
            throw new Error("Expected the field `additionalInformation` to be a primitive type in the JSON string but got " + data['additionalInformation']);
        }
        // ensure the json data is a string
        if (data['chargebackRepresentative'] && !(typeof data['chargebackRepresentative'] === 'string' || data['chargebackRepresentative'] instanceof String)) {
            throw new Error("Expected the field `chargebackRepresentative` to be a primitive type in the JSON string but got " + data['chargebackRepresentative']);
        }
        // ensure the json data is a string
        if (data['cardIssuerRegion'] && !(typeof data['cardIssuerRegion'] === 'string' || data['cardIssuerRegion'] instanceof String)) {
            throw new Error("Expected the field `cardIssuerRegion` to be a primitive type in the JSON string but got " + data['cardIssuerRegion']);
        }
        // validate the optional field `cardholderVerificationMethod`
        if (data['cardholderVerificationMethod']) { // data not null
          CardholderVerificationMethodStructure.validateJSON(data['cardholderVerificationMethod']);
        }

        return true;
    }


}



/**
 * Numeric value of number of transactions being disputed.   Length: 0-19   Valid Values/Format: Numeric
 * @member {String} numberOfItems
 */
FraudDrfDocumentStructure.prototype['numberOfItems'] = undefined;

/**
 * Enter any of the valid values comma separated.   Length: 7-12   Valid Values/Format: CARD_CLOSED, REPORT_SAFE, CAPTURE_CARD, LOST_STOLEN, COUNTERFEIT, RC_4837, RC_4840
 * @member {String} types
 */
FraudDrfDocumentStructure.prototype['types'] = undefined;

/**
 * Additional information, if needed   Length: 0-1000   Valid Values/Format: Alphanumeric / Special Char (~!@#$%^&*()_+{}|:\"<>?,./;'[]-=)
 * @member {String} additionalInformation
 */
FraudDrfDocumentStructure.prototype['additionalInformation'] = undefined;

/**
 * Customer Service/Chargeback Representative   Length: 0-25   Valid Values/Format: Alphanumeric / Special Char (~!@#$%^&*()_+{}|:\"<>?,./;'[]-=)
 * @member {String} chargebackRepresentative
 */
FraudDrfDocumentStructure.prototype['chargebackRepresentative'] = undefined;

/**
 * The card issuer region.   Length: 2-6   Valid Values/Format: AP, Europe, NAM, LAC, MEA
 * @member {module:model/FraudDrfDocumentStructure.CardIssuerRegionEnum} cardIssuerRegion
 */
FraudDrfDocumentStructure.prototype['cardIssuerRegion'] = undefined;

/**
 * @member {module:model/CardholderVerificationMethodStructure} cardholderVerificationMethod
 */
FraudDrfDocumentStructure.prototype['cardholderVerificationMethod'] = undefined;





/**
 * Allowed values for the <code>cardIssuerRegion</code> property.
 * @enum {String}
 * @readonly
 */
FraudDrfDocumentStructure['CardIssuerRegionEnum'] = {

    /**
     * value: "AP"
     * @const
     */
    "AP": "AP",

    /**
     * value: "Europe"
     * @const
     */
    "Europe": "Europe",

    /**
     * value: "NAM"
     * @const
     */
    "NAM": "NAM",

    /**
     * value: "LAC"
     * @const
     */
    "LAC": "LAC",

    /**
     * value: "MEA"
     * @const
     */
    "MEA": "MEA"
};



export default FraudDrfDocumentStructure;

