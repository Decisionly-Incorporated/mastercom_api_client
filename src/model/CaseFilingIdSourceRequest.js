/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CaseFilingIdSourceRequest model module.
 * @module model/CaseFilingIdSourceRequest
 * @version v6
 */
class CaseFilingIdSourceRequest {
    /**
     * Constructs a new <code>CaseFilingIdSourceRequest</code>.
     * @alias module:model/CaseFilingIdSourceRequest
     * @param caseId {String} The case filing id.   Length: 1-19   Valid Values/Format: Numeric
     * @param isIssuer {Boolean} In a case filling context, if 'true' the caller is on the sender side, if 'false' on the receiver side.   Length: 4-5   Valid Values/Format: true / false
     */
    constructor(caseId, isIssuer) { 
        
        CaseFilingIdSourceRequest.initialize(this, caseId, isIssuer);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, caseId, isIssuer) { 
        obj['caseId'] = caseId;
        obj['isIssuer'] = isIssuer;
    }

    /**
     * Constructs a <code>CaseFilingIdSourceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CaseFilingIdSourceRequest} obj Optional instance to populate.
     * @return {module:model/CaseFilingIdSourceRequest} The populated <code>CaseFilingIdSourceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CaseFilingIdSourceRequest();

            if (data.hasOwnProperty('caseId')) {
                obj['caseId'] = ApiClient.convertToType(data['caseId'], 'String');
            }
            if (data.hasOwnProperty('isIssuer')) {
                obj['isIssuer'] = ApiClient.convertToType(data['isIssuer'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CaseFilingIdSourceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CaseFilingIdSourceRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CaseFilingIdSourceRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['caseId'] && !(typeof data['caseId'] === 'string' || data['caseId'] instanceof String)) {
            throw new Error("Expected the field `caseId` to be a primitive type in the JSON string but got " + data['caseId']);
        }

        return true;
    }


}

CaseFilingIdSourceRequest.RequiredProperties = ["caseId", "isIssuer"];

/**
 * The case filing id.   Length: 1-19   Valid Values/Format: Numeric
 * @member {String} caseId
 */
CaseFilingIdSourceRequest.prototype['caseId'] = undefined;

/**
 * In a case filling context, if 'true' the caller is on the sender side, if 'false' on the receiver side.   Length: 4-5   Valid Values/Format: true / false
 * @member {Boolean} isIssuer
 */
CaseFilingIdSourceRequest.prototype['isIssuer'] = undefined;






export default CaseFilingIdSourceRequest;

