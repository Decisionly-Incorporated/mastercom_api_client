/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateFraudMasterCardRequest model module.
 * @module model/CreateFraudMasterCardRequest
 * @version v6
 */
class CreateFraudMasterCardRequest {
    /**
     * Constructs a new <code>CreateFraudMasterCardRequest</code>.
     * @alias module:model/CreateFraudMasterCardRequest
     * @param chgbkIndicator {module:model/CreateFraudMasterCardRequest.ChgbkIndicatorEnum} Chargeback Indicator.   Length:    Valid Values/Format: (VALUES)/(Numeric, Alphanumeric, Special Char)
     * @param cvcInvalidIndicator {module:model/CreateFraudMasterCardRequest.CvcInvalidIndicatorEnum} CVC Invalid Indicator.   Length: 1   Valid Values/Format: Y, *, M, N, P, U, ?, E
     * @param fraudType {module:model/CreateFraudMasterCardRequest.FraudTypeEnum} Fraud Type.   Length: 2   Valid Values/Format: 00, 01, 02, 03 ,04 ,05, 06, 07, 51
     * @param reportDate {String} Fraud Report Date.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)
     * @param subType {module:model/CreateFraudMasterCardRequest.SubTypeEnum} Fraud Sub Type.   Length: 1   Valid Values/Format: K, N, P, U
     */
    constructor(chgbkIndicator, cvcInvalidIndicator, fraudType, reportDate, subType) { 
        
        CreateFraudMasterCardRequest.initialize(this, chgbkIndicator, cvcInvalidIndicator, fraudType, reportDate, subType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, chgbkIndicator, cvcInvalidIndicator, fraudType, reportDate, subType) { 
        obj['chgbkIndicator'] = chgbkIndicator;
        obj['cvcInvalidIndicator'] = cvcInvalidIndicator;
        obj['fraudType'] = fraudType;
        obj['reportDate'] = reportDate;
        obj['subType'] = subType;
    }

    /**
     * Constructs a <code>CreateFraudMasterCardRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateFraudMasterCardRequest} obj Optional instance to populate.
     * @return {module:model/CreateFraudMasterCardRequest} The populated <code>CreateFraudMasterCardRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateFraudMasterCardRequest();

            if (data.hasOwnProperty('acctStatus')) {
                obj['acctStatus'] = ApiClient.convertToType(data['acctStatus'], 'String');
            }
            if (data.hasOwnProperty('chgbkIndicator')) {
                obj['chgbkIndicator'] = ApiClient.convertToType(data['chgbkIndicator'], 'String');
            }
            if (data.hasOwnProperty('cvcInvalidIndicator')) {
                obj['cvcInvalidIndicator'] = ApiClient.convertToType(data['cvcInvalidIndicator'], 'String');
            }
            if (data.hasOwnProperty('deviceType')) {
                obj['deviceType'] = ApiClient.convertToType(data['deviceType'], 'String');
            }
            if (data.hasOwnProperty('fraudType')) {
                obj['fraudType'] = ApiClient.convertToType(data['fraudType'], 'String');
            }
            if (data.hasOwnProperty('reportDate')) {
                obj['reportDate'] = ApiClient.convertToType(data['reportDate'], 'String');
            }
            if (data.hasOwnProperty('subType')) {
                obj['subType'] = ApiClient.convertToType(data['subType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateFraudMasterCardRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateFraudMasterCardRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateFraudMasterCardRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['acctStatus'] && !(typeof data['acctStatus'] === 'string' || data['acctStatus'] instanceof String)) {
            throw new Error("Expected the field `acctStatus` to be a primitive type in the JSON string but got " + data['acctStatus']);
        }
        // ensure the json data is a string
        if (data['chgbkIndicator'] && !(typeof data['chgbkIndicator'] === 'string' || data['chgbkIndicator'] instanceof String)) {
            throw new Error("Expected the field `chgbkIndicator` to be a primitive type in the JSON string but got " + data['chgbkIndicator']);
        }
        // ensure the json data is a string
        if (data['cvcInvalidIndicator'] && !(typeof data['cvcInvalidIndicator'] === 'string' || data['cvcInvalidIndicator'] instanceof String)) {
            throw new Error("Expected the field `cvcInvalidIndicator` to be a primitive type in the JSON string but got " + data['cvcInvalidIndicator']);
        }
        // ensure the json data is a string
        if (data['deviceType'] && !(typeof data['deviceType'] === 'string' || data['deviceType'] instanceof String)) {
            throw new Error("Expected the field `deviceType` to be a primitive type in the JSON string but got " + data['deviceType']);
        }
        // ensure the json data is a string
        if (data['fraudType'] && !(typeof data['fraudType'] === 'string' || data['fraudType'] instanceof String)) {
            throw new Error("Expected the field `fraudType` to be a primitive type in the JSON string but got " + data['fraudType']);
        }
        // ensure the json data is a string
        if (data['reportDate'] && !(typeof data['reportDate'] === 'string' || data['reportDate'] instanceof String)) {
            throw new Error("Expected the field `reportDate` to be a primitive type in the JSON string but got " + data['reportDate']);
        }
        // ensure the json data is a string
        if (data['subType'] && !(typeof data['subType'] === 'string' || data['subType'] instanceof String)) {
            throw new Error("Expected the field `subType` to be a primitive type in the JSON string but got " + data['subType']);
        }

        return true;
    }


}

CreateFraudMasterCardRequest.RequiredProperties = ["chgbkIndicator", "cvcInvalidIndicator", "fraudType", "reportDate", "subType"];

/**
 * Account status.   Length: 12-20   Valid Values/Format: ACCT_IS_OPEN, ACCT_HAS_BEEN_CLOSED
 * @member {module:model/CreateFraudMasterCardRequest.AcctStatusEnum} acctStatus
 */
CreateFraudMasterCardRequest.prototype['acctStatus'] = undefined;

/**
 * Chargeback Indicator.   Length:    Valid Values/Format: (VALUES)/(Numeric, Alphanumeric, Special Char)
 * @member {module:model/CreateFraudMasterCardRequest.ChgbkIndicatorEnum} chgbkIndicator
 */
CreateFraudMasterCardRequest.prototype['chgbkIndicator'] = undefined;

/**
 * CVC Invalid Indicator.   Length: 1   Valid Values/Format: Y, *, M, N, P, U, ?, E
 * @member {module:model/CreateFraudMasterCardRequest.CvcInvalidIndicatorEnum} cvcInvalidIndicator
 */
CreateFraudMasterCardRequest.prototype['cvcInvalidIndicator'] = undefined;

/**
 * Account Device Type.   Length: 1   Valid Values/Format: 1, 2, 3, 4, A, B, C, D, E, F, G, H, I, J
 * @member {module:model/CreateFraudMasterCardRequest.DeviceTypeEnum} deviceType
 */
CreateFraudMasterCardRequest.prototype['deviceType'] = undefined;

/**
 * Fraud Type.   Length: 2   Valid Values/Format: 00, 01, 02, 03 ,04 ,05, 06, 07, 51
 * @member {module:model/CreateFraudMasterCardRequest.FraudTypeEnum} fraudType
 */
CreateFraudMasterCardRequest.prototype['fraudType'] = undefined;

/**
 * Fraud Report Date.   Length: 10   Valid Values/Format: Date (yyyy-MM-dd)
 * @member {String} reportDate
 */
CreateFraudMasterCardRequest.prototype['reportDate'] = undefined;

/**
 * Fraud Sub Type.   Length: 1   Valid Values/Format: K, N, P, U
 * @member {module:model/CreateFraudMasterCardRequest.SubTypeEnum} subType
 */
CreateFraudMasterCardRequest.prototype['subType'] = undefined;





/**
 * Allowed values for the <code>acctStatus</code> property.
 * @enum {String}
 * @readonly
 */
CreateFraudMasterCardRequest['AcctStatusEnum'] = {

    /**
     * value: "ACCT_IS_OPEN"
     * @const
     */
    "IS_OPEN": "ACCT_IS_OPEN",

    /**
     * value: "ACCT_HAS_BEEN_CLOSED"
     * @const
     */
    "HAS_BEEN_CLOSED": "ACCT_HAS_BEEN_CLOSED"
};


/**
 * Allowed values for the <code>chgbkIndicator</code> property.
 * @enum {String}
 * @readonly
 */
CreateFraudMasterCardRequest['ChgbkIndicatorEnum'] = {

    /**
     * value: "0"
     * @const
     */
    "0": "0",

    /**
     * value: "1"
     * @const
     */
    "1": "1"
};


/**
 * Allowed values for the <code>cvcInvalidIndicator</code> property.
 * @enum {String}
 * @readonly
 */
CreateFraudMasterCardRequest['CvcInvalidIndicatorEnum'] = {

    /**
     * value: "Y"
     * @const
     */
    "Y": "Y",

    /**
     * value: "*"
     * @const
     */
    "STAR": "*",

    /**
     * value: "M"
     * @const
     */
    "M": "M",

    /**
     * value: "N"
     * @const
     */
    "N": "N",

    /**
     * value: "P"
     * @const
     */
    "P": "P",

    /**
     * value: "U"
     * @const
     */
    "U": "U",

    /**
     * value: "?"
     * @const
     */
    "QUESTION_MARK": "?",

    /**
     * value: "E"
     * @const
     */
    "E": "E"
};


/**
 * Allowed values for the <code>deviceType</code> property.
 * @enum {String}
 * @readonly
 */
CreateFraudMasterCardRequest['DeviceTypeEnum'] = {

    /**
     * value: "1"
     * @const
     */
    "1": "1",

    /**
     * value: "2"
     * @const
     */
    "2": "2",

    /**
     * value: "3"
     * @const
     */
    "3": "3",

    /**
     * value: "4"
     * @const
     */
    "4": "4",

    /**
     * value: "A"
     * @const
     */
    "A": "A",

    /**
     * value: "B"
     * @const
     */
    "B": "B",

    /**
     * value: "C"
     * @const
     */
    "C": "C",

    /**
     * value: "D"
     * @const
     */
    "D": "D",

    /**
     * value: "E"
     * @const
     */
    "E": "E",

    /**
     * value: "F"
     * @const
     */
    "F": "F",

    /**
     * value: "G"
     * @const
     */
    "G": "G",

    /**
     * value: "H"
     * @const
     */
    "H": "H",

    /**
     * value: "I"
     * @const
     */
    "I": "I",

    /**
     * value: "J"
     * @const
     */
    "J": "J"
};


/**
 * Allowed values for the <code>fraudType</code> property.
 * @enum {String}
 * @readonly
 */
CreateFraudMasterCardRequest['FraudTypeEnum'] = {

    /**
     * value: "00"
     * @const
     */
    "00": "00",

    /**
     * value: "01"
     * @const
     */
    "01": "01",

    /**
     * value: "02"
     * @const
     */
    "02": "02",

    /**
     * value: "03"
     * @const
     */
    "03": "03",

    /**
     * value: "04"
     * @const
     */
    "04": "04",

    /**
     * value: "05"
     * @const
     */
    "05": "05",

    /**
     * value: "06"
     * @const
     */
    "06": "06",

    /**
     * value: "07"
     * @const
     */
    "07": "07",

    /**
     * value: "51"
     * @const
     */
    "51": "51"
};


/**
 * Allowed values for the <code>subType</code> property.
 * @enum {String}
 * @readonly
 */
CreateFraudMasterCardRequest['SubTypeEnum'] = {

    /**
     * value: "K"
     * @const
     */
    "K": "K",

    /**
     * value: "N"
     * @const
     */
    "N": "N",

    /**
     * value: "P"
     * @const
     */
    "P": "P",

    /**
     * value: "U"
     * @const
     */
    "U": "U"
};



export default CreateFraudMasterCardRequest;

