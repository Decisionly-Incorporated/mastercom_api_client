/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RetrievalSummary model module.
 * @module model/RetrievalSummary
 * @version v6
 */
class RetrievalSummary {
    /**
     * Constructs a new <code>RetrievalSummary</code>.
     * @alias module:model/RetrievalSummary
     */
    constructor() { 
        
        RetrievalSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RetrievalSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RetrievalSummary} obj Optional instance to populate.
     * @return {module:model/RetrievalSummary} The populated <code>RetrievalSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RetrievalSummary();

            if (data.hasOwnProperty('acquirerRefNum')) {
                obj['acquirerRefNum'] = ApiClient.convertToType(data['acquirerRefNum'], 'String');
            }
            if (data.hasOwnProperty('acquirerResponseCd')) {
                obj['acquirerResponseCd'] = ApiClient.convertToType(data['acquirerResponseCd'], 'String');
            }
            if (data.hasOwnProperty('acquirerMemo')) {
                obj['acquirerMemo'] = ApiClient.convertToType(data['acquirerMemo'], 'String');
            }
            if (data.hasOwnProperty('acquirerResponseDt')) {
                obj['acquirerResponseDt'] = ApiClient.convertToType(data['acquirerResponseDt'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('claimId')) {
                obj['claimId'] = ApiClient.convertToType(data['claimId'], 'String');
            }
            if (data.hasOwnProperty('createDate')) {
                obj['createDate'] = ApiClient.convertToType(data['createDate'], 'String');
            }
            if (data.hasOwnProperty('cancelDate')) {
                obj['cancelDate'] = ApiClient.convertToType(data['cancelDate'], 'String');
            }
            if (data.hasOwnProperty('reverseDate')) {
                obj['reverseDate'] = ApiClient.convertToType(data['reverseDate'], 'String');
            }
            if (data.hasOwnProperty('rejectDate')) {
                obj['rejectDate'] = ApiClient.convertToType(data['rejectDate'], 'String');
            }
            if (data.hasOwnProperty('docNeeded')) {
                obj['docNeeded'] = ApiClient.convertToType(data['docNeeded'], 'String');
            }
            if (data.hasOwnProperty('issuerResponseCd')) {
                obj['issuerResponseCd'] = ApiClient.convertToType(data['issuerResponseCd'], 'String');
            }
            if (data.hasOwnProperty('issuerRejectRsnCd')) {
                obj['issuerRejectRsnCd'] = ApiClient.convertToType(data['issuerRejectRsnCd'], 'String');
            }
            if (data.hasOwnProperty('issuerMemo')) {
                obj['issuerMemo'] = ApiClient.convertToType(data['issuerMemo'], 'String');
            }
            if (data.hasOwnProperty('issuerResponseDt')) {
                obj['issuerResponseDt'] = ApiClient.convertToType(data['issuerResponseDt'], 'String');
            }
            if (data.hasOwnProperty('imageReviewDecision')) {
                obj['imageReviewDecision'] = ApiClient.convertToType(data['imageReviewDecision'], 'String');
            }
            if (data.hasOwnProperty('imageReviewDt')) {
                obj['imageReviewDt'] = ApiClient.convertToType(data['imageReviewDt'], 'String');
            }
            if (data.hasOwnProperty('primaryAcctNum')) {
                obj['primaryAcctNum'] = ApiClient.convertToType(data['primaryAcctNum'], 'String');
            }
            if (data.hasOwnProperty('rejectReason')) {
                obj['rejectReason'] = ApiClient.convertToType(data['rejectReason'], 'String');
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('retrievalRequestReason')) {
                obj['retrievalRequestReason'] = ApiClient.convertToType(data['retrievalRequestReason'], 'String');
            }
            if (data.hasOwnProperty('chargebackRefNum')) {
                obj['chargebackRefNum'] = ApiClient.convertToType(data['chargebackRefNum'], 'String');
            }
            if (data.hasOwnProperty('acquirerResponseNotificationStatus')) {
                obj['acquirerResponseNotificationStatus'] = ApiClient.convertToType(data['acquirerResponseNotificationStatus'], 'String');
            }
            if (data.hasOwnProperty('instructionsForHealthcare')) {
                obj['instructionsForHealthcare'] = ApiClient.convertToType(data['instructionsForHealthcare'], 'String');
            }
            if (data.hasOwnProperty('refundReversalDate')) {
                obj['refundReversalDate'] = ApiClient.convertToType(data['refundReversalDate'], 'String');
            }
            if (data.hasOwnProperty('refundReversalAmount')) {
                obj['refundReversalAmount'] = ApiClient.convertToType(data['refundReversalAmount'], 'String');
            }
            if (data.hasOwnProperty('refundReversalCurrency')) {
                obj['refundReversalCurrency'] = ApiClient.convertToType(data['refundReversalCurrency'], 'String');
            }
            if (data.hasOwnProperty('refundReversalType')) {
                obj['refundReversalType'] = ApiClient.convertToType(data['refundReversalType'], 'String');
            }
            if (data.hasOwnProperty('refundReversalReferenceId')) {
                obj['refundReversalReferenceId'] = ApiClient.convertToType(data['refundReversalReferenceId'], 'String');
            }
            if (data.hasOwnProperty('memo')) {
                obj['memo'] = ApiClient.convertToType(data['memo'], 'String');
            }
            if (data.hasOwnProperty('flexCode')) {
                obj['flexCode'] = ApiClient.convertToType(data['flexCode'], 'String');
            }
            if (data.hasOwnProperty('collaborationExpirationDateTime')) {
                obj['collaborationExpirationDateTime'] = ApiClient.convertToType(data['collaborationExpirationDateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RetrievalSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RetrievalSummary</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['acquirerRefNum'] && !(typeof data['acquirerRefNum'] === 'string' || data['acquirerRefNum'] instanceof String)) {
            throw new Error("Expected the field `acquirerRefNum` to be a primitive type in the JSON string but got " + data['acquirerRefNum']);
        }
        // ensure the json data is a string
        if (data['acquirerResponseCd'] && !(typeof data['acquirerResponseCd'] === 'string' || data['acquirerResponseCd'] instanceof String)) {
            throw new Error("Expected the field `acquirerResponseCd` to be a primitive type in the JSON string but got " + data['acquirerResponseCd']);
        }
        // ensure the json data is a string
        if (data['acquirerMemo'] && !(typeof data['acquirerMemo'] === 'string' || data['acquirerMemo'] instanceof String)) {
            throw new Error("Expected the field `acquirerMemo` to be a primitive type in the JSON string but got " + data['acquirerMemo']);
        }
        // ensure the json data is a string
        if (data['acquirerResponseDt'] && !(typeof data['acquirerResponseDt'] === 'string' || data['acquirerResponseDt'] instanceof String)) {
            throw new Error("Expected the field `acquirerResponseDt` to be a primitive type in the JSON string but got " + data['acquirerResponseDt']);
        }
        // ensure the json data is a string
        if (data['amount'] && !(typeof data['amount'] === 'string' || data['amount'] instanceof String)) {
            throw new Error("Expected the field `amount` to be a primitive type in the JSON string but got " + data['amount']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['claimId'] && !(typeof data['claimId'] === 'string' || data['claimId'] instanceof String)) {
            throw new Error("Expected the field `claimId` to be a primitive type in the JSON string but got " + data['claimId']);
        }
        // ensure the json data is a string
        if (data['createDate'] && !(typeof data['createDate'] === 'string' || data['createDate'] instanceof String)) {
            throw new Error("Expected the field `createDate` to be a primitive type in the JSON string but got " + data['createDate']);
        }
        // ensure the json data is a string
        if (data['cancelDate'] && !(typeof data['cancelDate'] === 'string' || data['cancelDate'] instanceof String)) {
            throw new Error("Expected the field `cancelDate` to be a primitive type in the JSON string but got " + data['cancelDate']);
        }
        // ensure the json data is a string
        if (data['reverseDate'] && !(typeof data['reverseDate'] === 'string' || data['reverseDate'] instanceof String)) {
            throw new Error("Expected the field `reverseDate` to be a primitive type in the JSON string but got " + data['reverseDate']);
        }
        // ensure the json data is a string
        if (data['rejectDate'] && !(typeof data['rejectDate'] === 'string' || data['rejectDate'] instanceof String)) {
            throw new Error("Expected the field `rejectDate` to be a primitive type in the JSON string but got " + data['rejectDate']);
        }
        // ensure the json data is a string
        if (data['docNeeded'] && !(typeof data['docNeeded'] === 'string' || data['docNeeded'] instanceof String)) {
            throw new Error("Expected the field `docNeeded` to be a primitive type in the JSON string but got " + data['docNeeded']);
        }
        // ensure the json data is a string
        if (data['issuerResponseCd'] && !(typeof data['issuerResponseCd'] === 'string' || data['issuerResponseCd'] instanceof String)) {
            throw new Error("Expected the field `issuerResponseCd` to be a primitive type in the JSON string but got " + data['issuerResponseCd']);
        }
        // ensure the json data is a string
        if (data['issuerRejectRsnCd'] && !(typeof data['issuerRejectRsnCd'] === 'string' || data['issuerRejectRsnCd'] instanceof String)) {
            throw new Error("Expected the field `issuerRejectRsnCd` to be a primitive type in the JSON string but got " + data['issuerRejectRsnCd']);
        }
        // ensure the json data is a string
        if (data['issuerMemo'] && !(typeof data['issuerMemo'] === 'string' || data['issuerMemo'] instanceof String)) {
            throw new Error("Expected the field `issuerMemo` to be a primitive type in the JSON string but got " + data['issuerMemo']);
        }
        // ensure the json data is a string
        if (data['issuerResponseDt'] && !(typeof data['issuerResponseDt'] === 'string' || data['issuerResponseDt'] instanceof String)) {
            throw new Error("Expected the field `issuerResponseDt` to be a primitive type in the JSON string but got " + data['issuerResponseDt']);
        }
        // ensure the json data is a string
        if (data['imageReviewDecision'] && !(typeof data['imageReviewDecision'] === 'string' || data['imageReviewDecision'] instanceof String)) {
            throw new Error("Expected the field `imageReviewDecision` to be a primitive type in the JSON string but got " + data['imageReviewDecision']);
        }
        // ensure the json data is a string
        if (data['imageReviewDt'] && !(typeof data['imageReviewDt'] === 'string' || data['imageReviewDt'] instanceof String)) {
            throw new Error("Expected the field `imageReviewDt` to be a primitive type in the JSON string but got " + data['imageReviewDt']);
        }
        // ensure the json data is a string
        if (data['primaryAcctNum'] && !(typeof data['primaryAcctNum'] === 'string' || data['primaryAcctNum'] instanceof String)) {
            throw new Error("Expected the field `primaryAcctNum` to be a primitive type in the JSON string but got " + data['primaryAcctNum']);
        }
        // ensure the json data is a string
        if (data['rejectReason'] && !(typeof data['rejectReason'] === 'string' || data['rejectReason'] instanceof String)) {
            throw new Error("Expected the field `rejectReason` to be a primitive type in the JSON string but got " + data['rejectReason']);
        }
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }
        // ensure the json data is a string
        if (data['retrievalRequestReason'] && !(typeof data['retrievalRequestReason'] === 'string' || data['retrievalRequestReason'] instanceof String)) {
            throw new Error("Expected the field `retrievalRequestReason` to be a primitive type in the JSON string but got " + data['retrievalRequestReason']);
        }
        // ensure the json data is a string
        if (data['chargebackRefNum'] && !(typeof data['chargebackRefNum'] === 'string' || data['chargebackRefNum'] instanceof String)) {
            throw new Error("Expected the field `chargebackRefNum` to be a primitive type in the JSON string but got " + data['chargebackRefNum']);
        }
        // ensure the json data is a string
        if (data['acquirerResponseNotificationStatus'] && !(typeof data['acquirerResponseNotificationStatus'] === 'string' || data['acquirerResponseNotificationStatus'] instanceof String)) {
            throw new Error("Expected the field `acquirerResponseNotificationStatus` to be a primitive type in the JSON string but got " + data['acquirerResponseNotificationStatus']);
        }
        // ensure the json data is a string
        if (data['instructionsForHealthcare'] && !(typeof data['instructionsForHealthcare'] === 'string' || data['instructionsForHealthcare'] instanceof String)) {
            throw new Error("Expected the field `instructionsForHealthcare` to be a primitive type in the JSON string but got " + data['instructionsForHealthcare']);
        }
        // ensure the json data is a string
        if (data['refundReversalDate'] && !(typeof data['refundReversalDate'] === 'string' || data['refundReversalDate'] instanceof String)) {
            throw new Error("Expected the field `refundReversalDate` to be a primitive type in the JSON string but got " + data['refundReversalDate']);
        }
        // ensure the json data is a string
        if (data['refundReversalAmount'] && !(typeof data['refundReversalAmount'] === 'string' || data['refundReversalAmount'] instanceof String)) {
            throw new Error("Expected the field `refundReversalAmount` to be a primitive type in the JSON string but got " + data['refundReversalAmount']);
        }
        // ensure the json data is a string
        if (data['refundReversalCurrency'] && !(typeof data['refundReversalCurrency'] === 'string' || data['refundReversalCurrency'] instanceof String)) {
            throw new Error("Expected the field `refundReversalCurrency` to be a primitive type in the JSON string but got " + data['refundReversalCurrency']);
        }
        // ensure the json data is a string
        if (data['refundReversalType'] && !(typeof data['refundReversalType'] === 'string' || data['refundReversalType'] instanceof String)) {
            throw new Error("Expected the field `refundReversalType` to be a primitive type in the JSON string but got " + data['refundReversalType']);
        }
        // ensure the json data is a string
        if (data['refundReversalReferenceId'] && !(typeof data['refundReversalReferenceId'] === 'string' || data['refundReversalReferenceId'] instanceof String)) {
            throw new Error("Expected the field `refundReversalReferenceId` to be a primitive type in the JSON string but got " + data['refundReversalReferenceId']);
        }
        // ensure the json data is a string
        if (data['memo'] && !(typeof data['memo'] === 'string' || data['memo'] instanceof String)) {
            throw new Error("Expected the field `memo` to be a primitive type in the JSON string but got " + data['memo']);
        }
        // ensure the json data is a string
        if (data['flexCode'] && !(typeof data['flexCode'] === 'string' || data['flexCode'] instanceof String)) {
            throw new Error("Expected the field `flexCode` to be a primitive type in the JSON string but got " + data['flexCode']);
        }
        // ensure the json data is a string
        if (data['collaborationExpirationDateTime'] && !(typeof data['collaborationExpirationDateTime'] === 'string' || data['collaborationExpirationDateTime'] instanceof String)) {
            throw new Error("Expected the field `collaborationExpirationDateTime` to be a primitive type in the JSON string but got " + data['collaborationExpirationDateTime']);
        }

        return true;
    }


}



/**
 * Acquirer Reference Number is a unique number that tags a credit card transaction when it goes from the merchants bank (The Acquiring Bank) through the card scheme to the cardholders bank (The Issuer)
 * @member {String} acquirerRefNum
 */
RetrievalSummary.prototype['acquirerRefNum'] = undefined;

/**
 * Predetermined response code chosen by the Acquirer
 * @member {String} acquirerResponseCd
 */
RetrievalSummary.prototype['acquirerResponseCd'] = undefined;

/**
 * The memo the acquirer created when fulfilling the retrieval request
 * @member {String} acquirerMemo
 */
RetrievalSummary.prototype['acquirerMemo'] = undefined;

/**
 * Date the acquirer responded to the fulfillment request
 * @member {String} acquirerResponseDt
 */
RetrievalSummary.prototype['acquirerResponseDt'] = undefined;

/**
 * Amount of the claim
 * @member {String} amount
 */
RetrievalSummary.prototype['amount'] = undefined;

/**
 * The retrieval currency.  The data should be standard currency alpha code
 * @member {String} currency
 */
RetrievalSummary.prototype['currency'] = undefined;

/**
 * Claim identifier
 * @member {String} claimId
 */
RetrievalSummary.prototype['claimId'] = undefined;

/**
 * This is the date of the Retrieval Request creation
 * @member {String} createDate
 */
RetrievalSummary.prototype['createDate'] = undefined;

/**
 * This is the date of the Retrieval Request cancelation
 * @member {String} cancelDate
 */
RetrievalSummary.prototype['cancelDate'] = undefined;

/**
 * This is the date of the Retrieval Request reversion
 * @member {String} reverseDate
 */
RetrievalSummary.prototype['reverseDate'] = undefined;

/**
 * This is the date of the Retrieval Request rejection by GCMS
 * @member {String} rejectDate
 */
RetrievalSummary.prototype['rejectDate'] = undefined;

/**
 * Documentation Needed Indicator. Possible values are    - NONE: Present when acquirer has not yet responded to a Collaboration request or present for issuers when the acquirer has responded with response code A (funds movement request)    - Refund: Present when acquirer has responded to a Collaboration request with response code B (Refunded) and provided refund details or when acquirer has responded with response code C (Initiating refund)    - Credit Voucher: Present when acquirer has responded to a Collaboration request with response code B (Refunded) and provided a credit voucher    - null: Present when no other values are applicable    **Note:** The following apply only to U.S. healthcare transactions.    - 2 (Copy or image such as a photocopy, microfilm, fax of original document)    - 4 (Substitute draft)   
 * @member {String} docNeeded
 */
RetrievalSummary.prototype['docNeeded'] = undefined;

/**
 * Predetermined response code chosen by the Issuer
 * @member {String} issuerResponseCd
 */
RetrievalSummary.prototype['issuerResponseCd'] = undefined;

/**
 * Predetermined reject reason codes
 * @member {String} issuerRejectRsnCd
 */
RetrievalSummary.prototype['issuerRejectRsnCd'] = undefined;

/**
 * Memo pertaining to the case
 * @member {String} issuerMemo
 */
RetrievalSummary.prototype['issuerMemo'] = undefined;

/**
 * Date the issuer responded to the fulfillment
 * @member {String} issuerResponseDt
 */
RetrievalSummary.prototype['issuerResponseDt'] = undefined;

/**
 * The image review decision
 * @member {String} imageReviewDecision
 */
RetrievalSummary.prototype['imageReviewDecision'] = undefined;

/**
 * Date the image review decision occurred
 * @member {String} imageReviewDt
 */
RetrievalSummary.prototype['imageReviewDt'] = undefined;

/**
 * Primary Account Number
 * @member {String} primaryAcctNum
 */
RetrievalSummary.prototype['primaryAcctNum'] = undefined;

/**
 * Retrieval Request reject reason.
 * @member {String} rejectReason
 */
RetrievalSummary.prototype['rejectReason'] = undefined;

/**
 * Identifier assigned to the fulfillment
 * @member {String} requestId
 */
RetrievalSummary.prototype['requestId'] = undefined;

/**
 * Retrieval Request Reason
 * @member {String} retrievalRequestReason
 */
RetrievalSummary.prototype['retrievalRequestReason'] = undefined;

/**
 * Contains card issuer reference data for a specific cardholder transaction. This number must be unique within BIN. It is used to track the chargeback throughout its life cycle
 * @member {String} chargebackRefNum
 */
RetrievalSummary.prototype['chargebackRefNum'] = undefined;

/**
 * The field would show Processed or Rejected or Pending or Cancelled status depending on the GCMS processing of the retrieval request. Pending- Item created but NOT yet sent to GCMS Cancelled- Item discarded without being sent to GCMS Processed- Item is being sent for clearing (via ipmClearingOutput batch job) Rejected- If item being rejected from GCMS (No update on Issuer side claim).
 * @member {String} acquirerResponseNotificationStatus
 */
RetrievalSummary.prototype['acquirerResponseNotificationStatus'] = undefined;

/**
 * Instructions for healthcare
 * @member {String} instructionsForHealthcare
 */
RetrievalSummary.prototype['instructionsForHealthcare'] = undefined;

/**
 * Refund/Reversal Date
 * @member {String} refundReversalDate
 */
RetrievalSummary.prototype['refundReversalDate'] = undefined;

/**
 * Refund/Reversal Amount
 * @member {String} refundReversalAmount
 */
RetrievalSummary.prototype['refundReversalAmount'] = undefined;

/**
 * Refund/Reversal Currency
 * @member {String} refundReversalCurrency
 */
RetrievalSummary.prototype['refundReversalCurrency'] = undefined;

/**
 * Refund/Reversal Type
 * @member {String} refundReversalType
 */
RetrievalSummary.prototype['refundReversalType'] = undefined;

/**
 * Refund/Reversal reference ID
 * @member {String} refundReversalReferenceId
 */
RetrievalSummary.prototype['refundReversalReferenceId'] = undefined;

/**
 * Memo
 * @member {String} memo
 */
RetrievalSummary.prototype['memo'] = undefined;

/**
 * Specific to Brazil Flex Card transactions to communicate the product code used for clearing.
 * @member {String} flexCode
 */
RetrievalSummary.prototype['flexCode'] = undefined;

/**
 * Date and time by which the acquirer can respond to a Collaboration request.
 * @member {String} collaborationExpirationDateTime
 */
RetrievalSummary.prototype['collaborationExpirationDateTime'] = undefined;






export default RetrievalSummary;

