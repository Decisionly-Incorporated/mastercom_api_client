/**
 * MasterCom
 * MasterCom
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IssuerFulfillmentRequest model module.
 * @module model/IssuerFulfillmentRequest
 * @version v6
 */
class IssuerFulfillmentRequest {
    /**
     * Constructs a new <code>IssuerFulfillmentRequest</code>.
     * @alias module:model/IssuerFulfillmentRequest
     * @param issuerResponseCd {module:model/IssuerFulfillmentRequest.IssuerResponseCdEnum} Issuer Response Code.   Length: 7-36   Valid Values/Format: APPROVE, REJECT_DOCUMENTATION_NOT_AS_REQUIRED, REJECT_ILLEGIBLE_OR_MISSING
     */
    constructor(issuerResponseCd) { 
        
        IssuerFulfillmentRequest.initialize(this, issuerResponseCd);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, issuerResponseCd) { 
        obj['issuerResponseCd'] = issuerResponseCd;
    }

    /**
     * Constructs a <code>IssuerFulfillmentRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssuerFulfillmentRequest} obj Optional instance to populate.
     * @return {module:model/IssuerFulfillmentRequest} The populated <code>IssuerFulfillmentRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssuerFulfillmentRequest();

            if (data.hasOwnProperty('memo')) {
                obj['memo'] = ApiClient.convertToType(data['memo'], 'String');
            }
            if (data.hasOwnProperty('issuerResponseCd')) {
                obj['issuerResponseCd'] = ApiClient.convertToType(data['issuerResponseCd'], 'String');
            }
            if (data.hasOwnProperty('rejectReasonCd')) {
                obj['rejectReasonCd'] = ApiClient.convertToType(data['rejectReasonCd'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IssuerFulfillmentRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IssuerFulfillmentRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IssuerFulfillmentRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['memo'] && !(typeof data['memo'] === 'string' || data['memo'] instanceof String)) {
            throw new Error("Expected the field `memo` to be a primitive type in the JSON string but got " + data['memo']);
        }
        // ensure the json data is a string
        if (data['issuerResponseCd'] && !(typeof data['issuerResponseCd'] === 'string' || data['issuerResponseCd'] instanceof String)) {
            throw new Error("Expected the field `issuerResponseCd` to be a primitive type in the JSON string but got " + data['issuerResponseCd']);
        }
        // ensure the json data is a string
        if (data['rejectReasonCd'] && !(typeof data['rejectReasonCd'] === 'string' || data['rejectReasonCd'] instanceof String)) {
            throw new Error("Expected the field `rejectReasonCd` to be a primitive type in the JSON string but got " + data['rejectReasonCd']);
        }

        return true;
    }


}

IssuerFulfillmentRequest.RequiredProperties = ["issuerResponseCd"];

/**
 * This is a test memo.   Length: 1-100   Valid Values/Format: Alphanumeric, Special Char (~!@#$%^&*()_+{}|:\"<>?,./;'[]-=)
 * @member {String} memo
 */
IssuerFulfillmentRequest.prototype['memo'] = undefined;

/**
 * Issuer Response Code.   Length: 7-36   Valid Values/Format: APPROVE, REJECT_DOCUMENTATION_NOT_AS_REQUIRED, REJECT_ILLEGIBLE_OR_MISSING
 * @member {module:model/IssuerFulfillmentRequest.IssuerResponseCdEnum} issuerResponseCd
 */
IssuerFulfillmentRequest.prototype['issuerResponseCd'] = undefined;

/**
 * Reject Reason Code.   Length: 1   Valid Values/Format: A - TRANSACTION AMOUNT MISSING/ILLEGIBLE, M - MERCHANT NAME MISSING/ILLEGIBLE, P - PRIMARY ACCOUNT NUMBER MISSING/ILLEGIBLE, D - TRANSACTION DATE MISSING/ILLEGIBLE, O - OTHER (it can also be used for NOT A SUBSTITUTE DRAFT
 * @member {module:model/IssuerFulfillmentRequest.RejectReasonCdEnum} rejectReasonCd
 */
IssuerFulfillmentRequest.prototype['rejectReasonCd'] = undefined;





/**
 * Allowed values for the <code>issuerResponseCd</code> property.
 * @enum {String}
 * @readonly
 */
IssuerFulfillmentRequest['IssuerResponseCdEnum'] = {

    /**
     * value: "APPROVE"
     * @const
     */
    "APPROVE": "APPROVE",

    /**
     * value: "REJECT_DOCUMENTATION_NOT_AS_REQUIRED"
     * @const
     */
    "REJECT_DOCUMENTATION_NOT_AS_REQUIRED": "REJECT_DOCUMENTATION_NOT_AS_REQUIRED",

    /**
     * value: "REJECT_ILLEGIBLE_OR_MISSING"
     * @const
     */
    "REJECT_ILLEGIBLE_OR_MISSING": "REJECT_ILLEGIBLE_OR_MISSING"
};


/**
 * Allowed values for the <code>rejectReasonCd</code> property.
 * @enum {String}
 * @readonly
 */
IssuerFulfillmentRequest['RejectReasonCdEnum'] = {

    /**
     * value: "A"
     * @const
     */
    "A": "A",

    /**
     * value: "M"
     * @const
     */
    "M": "M",

    /**
     * value: "P"
     * @const
     */
    "P": "P",

    /**
     * value: "D"
     * @const
     */
    "D": "D",

    /**
     * value: "O"
     * @const
     */
    "O": "O"
};



export default IssuerFulfillmentRequest;

